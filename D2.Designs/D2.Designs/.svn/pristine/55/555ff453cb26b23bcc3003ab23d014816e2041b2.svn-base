DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算交易组资金可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcExgpCashAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcExgpCashAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_capit_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_shsz_comm_avail_amt decimal(18,4),
    OUT p_hk_comm_avail_amt decimal(18,4),
    OUT p_shsz_trade_avail_amt decimal(18,4),
    OUT p_hk_trade_avail_amt decimal(18,4),
    OUT p_comm_avail_amt decimal(18,4),
    OUT p_trade_avail_amt decimal(18,4),
    OUT p_static_avail_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_capit_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_tmp_comm_avail_amt decimal(18,4);
    declare v_tmp_trade_avail_amt decimal(18,4);
    declare v_tmp_static_avail_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_tmp_comm_avail_amt = 0;
    SET v_tmp_trade_avail_amt = 0;
    SET v_tmp_static_avail_amt = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用金额

    /* set @指令端可用金额# = 0; */
    set v_comm_avail_amt = 0;

    /* set @交易端可用金额# = 0; */
    set v_trade_avail_amt = 0;

    /* set @静态可用金额# = 0; */
    set v_static_avail_amt = 0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种}='CNY'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
        v_begin_amt, v_curr_amt, v_frozen_amt, v_unfroz_amt, 
        v_comm_frozen_amt, v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, 
        v_trade_frozen_amt, v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, 
        v_strike_capt_amt, v_strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type='CNY' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @指令端可用金额#=-@指令冻结金额#-@交易冻结金额#-@指令占用金额#-@交易占用金额#-@成交占用金额#; */
        SET v_comm_avail_amt=-v_comm_frozen_amt-v_trade_frozen_amt-v_comm_capt_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @交易端可用金额#=-@交易冻结金额#-@交易占用金额#-@成交占用金额#; */
        SET v_trade_avail_amt=-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @静态可用金额#=-@成交占用金额#; */
        SET v_static_avail_amt=-v_strike_capt_amt;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @指令端可用金额#=@指令端可用金额#+@成交释放金额#; */
            set v_comm_avail_amt=v_comm_avail_amt+v_strike_releas_amt;

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt;
        end if;
    end if;

    /* set @临时_指令端可用金额#=@指令端可用金额#; */
    set v_tmp_comm_avail_amt=v_comm_avail_amt;

    /* set @临时_交易端可用金额#=@交易端可用金额#; */
    set v_tmp_trade_avail_amt=v_trade_avail_amt;

    /* set @临时_静态可用金额#=@静态可用金额#; */
    set v_tmp_static_avail_amt=v_static_avail_amt;

    /* set @沪深指令可用金额#=Round(@指令端可用金额#,2); */
    set v_shsz_comm_avail_amt=Round(v_comm_avail_amt,2);

    /* set @沪深交易可用金额#=Round(@交易端可用金额#,2); */
    set v_shsz_trade_avail_amt=Round(v_trade_avail_amt,2);

    /* set @指令端可用金额#=0; */
    set v_comm_avail_amt=0;

    /* set @交易端可用金额#=0; */
    set v_trade_avail_amt=0;

    /* set @静态可用金额#=0; */
    set v_static_avail_amt=0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种}='HKD'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
        v_begin_amt, v_curr_amt, v_frozen_amt, v_unfroz_amt, 
        v_comm_frozen_amt, v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, 
        v_trade_frozen_amt, v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, 
        v_strike_capt_amt, v_strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type='HKD' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @指令端可用金额#=(-@指令冻结金额#-@交易冻结金额#-@指令占用金额#-@交易占用金额#-@成交占用金额# ) * @卖出参考汇率#; */
        SET v_comm_avail_amt=(-v_comm_frozen_amt-v_trade_frozen_amt-v_comm_capt_amt-v_trade_capt_amt-v_strike_capt_amt ) * v_sell_ref_rate;

        /* SET @交易端可用金额#=(-@交易冻结金额#-@交易占用金额#-@成交占用金额#) * @卖出参考汇率#; */
        SET v_trade_avail_amt=(-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt) * v_sell_ref_rate;

        /* SET @静态可用金额#=-@成交占用金额# * @卖出参考汇率#; */
        SET v_static_avail_amt=-v_strike_capt_amt * v_sell_ref_rate;
        #if @资金回转天数#<=1 then

            /* set @指令端可用金额#=@指令端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_comm_avail_amt=v_comm_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt * v_buy_ref_rate;
        #end if;
    end if;

    /* set @港股指令可用金额#= Round(@指令端可用金额#,2); */
    set v_hk_comm_avail_amt= Round(v_comm_avail_amt,2);

    /* set @港股交易可用金额#=Round(@交易端可用金额#,2); */
    set v_hk_trade_avail_amt=Round(v_trade_avail_amt,2);

    /* set @指令端可用金额# =  @指令端可用金额# + @临时_指令端可用金额#; */
    set v_comm_avail_amt =  v_comm_avail_amt + v_tmp_comm_avail_amt;

    /* set @交易端可用金额# = @交易端可用金额# + @临时_交易端可用金额#; */
    set v_trade_avail_amt = v_trade_avail_amt + v_tmp_trade_avail_amt;

    /* set @静态可用金额# = @静态可用金额# + @临时_静态可用金额#; */
    set v_static_avail_amt = v_static_avail_amt + v_tmp_static_avail_amt;

    /* set @指令端可用金额# = Round(@指令端可用金额#,2); */
    set v_comm_avail_amt = Round(v_comm_avail_amt,2);

    /* set @交易端可用金额# = Round(@交易端可用金额#,2); */
    set v_trade_avail_amt = Round(v_trade_avail_amt,2);

    /* set @静态可用金额# = Round(@静态可用金额#,2); */
    set v_static_avail_amt = Round(v_static_avail_amt,2);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_shsz_comm_avail_amt = v_shsz_comm_avail_amt;
    SET p_hk_comm_avail_amt = v_hk_comm_avail_amt;
    SET p_shsz_trade_avail_amt = v_shsz_trade_avail_amt;
    SET p_hk_trade_avail_amt = v_hk_trade_avail_amt;
    SET p_comm_avail_amt = v_comm_avail_amt;
    SET p_trade_avail_amt = v_trade_avail_amt;
    SET p_static_avail_amt = v_static_avail_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算资产账户资金可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcAsacCashAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcAsacCashAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_capit_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_shsz_comm_avail_amt decimal(18,4),
    OUT p_hk_comm_avail_amt decimal(18,4),
    OUT p_shsz_trade_avail_amt decimal(18,4),
    OUT p_hk_trade_avail_amt decimal(18,4),
    OUT p_comm_avail_amt decimal(18,4),
    OUT p_trade_avail_amt decimal(18,4),
    OUT p_static_avail_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_capit_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_tmp_comm_avail_amt decimal(18,4);
    declare v_tmp_trade_avail_amt decimal(18,4);
    declare v_tmp_static_avail_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_tmp_comm_avail_amt = 0;
    SET v_tmp_trade_avail_amt = 0;
    SET v_tmp_static_avail_amt = 0;

    
    label_pro:BEGIN
    
    #获取资产账户当日业务可用金额

    /* set @指令端可用金额# = 0; */
    set v_comm_avail_amt = 0;

    /* set @交易端可用金额# = 0; */
    set v_trade_avail_amt = 0;

    /* set @静态可用金额# = 0; */
    set v_static_avail_amt = 0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务资金表][字段][字段变量][{资产账户编号}=@资产账户编号# and {交易币种}='CNY'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
        v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
        v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
        v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
        v_strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where asset_acco_no=v_asset_acco_no and exch_crncy_type='CNY' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @指令端可用金额#=-@指令冻结金额#-@交易冻结金额#-@指令占用金额#-@交易占用金额#-@成交占用金额#; */
        SET v_comm_avail_amt=-v_comm_frozen_amt-v_trade_frozen_amt-v_comm_capt_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @交易端可用金额#=-@交易冻结金额#-@交易占用金额#-@成交占用金额#; */
        SET v_trade_avail_amt=-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @静态可用金额#=-@成交占用金额#; */
        SET v_static_avail_amt=-v_strike_capt_amt;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @指令端可用金额#=@指令端可用金额#+@成交释放金额#; */
            set v_comm_avail_amt=v_comm_avail_amt+v_strike_releas_amt;

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt;
        end if;
    end if;

    /* set @临时_指令端可用金额#=@指令端可用金额#; */
    set v_tmp_comm_avail_amt=v_comm_avail_amt;

    /* set @临时_交易端可用金额#=@交易端可用金额#; */
    set v_tmp_trade_avail_amt=v_trade_avail_amt;

    /* set @临时_静态可用金额#=@静态可用金额#; */
    set v_tmp_static_avail_amt=v_static_avail_amt;

    /* set @沪深指令可用金额#=Round(@指令端可用金额#,2); */
    set v_shsz_comm_avail_amt=Round(v_comm_avail_amt,2);

    /* set @沪深交易可用金额#=Round(@交易端可用金额#,2); */
    set v_shsz_trade_avail_amt=Round(v_trade_avail_amt,2);

    /* set @指令端可用金额#=0; */
    set v_comm_avail_amt=0;

    /* set @交易端可用金额#=0; */
    set v_trade_avail_amt=0;

    /* set @静态可用金额#=0; */
    set v_static_avail_amt=0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务资金表][字段][字段变量][{资产账户编号}=@资产账户编号# and {交易币种}='HKD'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
        v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
        v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
        v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
        v_strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where asset_acco_no=v_asset_acco_no and exch_crncy_type='HKD' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @指令端可用金额#=(-@指令冻结金额#-@交易冻结金额#-@指令占用金额#-@交易占用金额#-@成交占用金额# ) * @卖出参考汇率#; */
        SET v_comm_avail_amt=(-v_comm_frozen_amt-v_trade_frozen_amt-v_comm_capt_amt-v_trade_capt_amt-v_strike_capt_amt ) * v_sell_ref_rate;

        /* SET @交易端可用金额#=(-@交易冻结金额#-@交易占用金额#-@成交占用金额#) * @卖出参考汇率#; */
        SET v_trade_avail_amt=(-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt) * v_sell_ref_rate;

        /* SET @静态可用金额#=-@成交占用金额# * @卖出参考汇率#; */
        SET v_static_avail_amt=-v_strike_capt_amt * v_sell_ref_rate;
        #if @资金回转天数#<=1 then

            /* set @指令端可用金额#=@指令端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_comm_avail_amt=v_comm_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt * v_buy_ref_rate;
        #end if;
    end if;

    /* set @港股指令可用金额#= Round(@指令端可用金额#,2); */
    set v_hk_comm_avail_amt= Round(v_comm_avail_amt,2);

    /* set @港股交易可用金额#=Round(@交易端可用金额#,2); */
    set v_hk_trade_avail_amt=Round(v_trade_avail_amt,2);

    /* set @指令端可用金额# =  @指令端可用金额# + @临时_指令端可用金额#; */
    set v_comm_avail_amt =  v_comm_avail_amt + v_tmp_comm_avail_amt;

    /* set @交易端可用金额# = @交易端可用金额# + @临时_交易端可用金额#; */
    set v_trade_avail_amt = v_trade_avail_amt + v_tmp_trade_avail_amt;

    /* set @静态可用金额# = @静态可用金额# + @临时_静态可用金额#; */
    set v_static_avail_amt = v_static_avail_amt + v_tmp_static_avail_amt;

    /* set @指令端可用金额# = Round(@指令端可用金额#,2); */
    set v_comm_avail_amt = Round(v_comm_avail_amt,2);

    /* set @交易端可用金额# = Round(@交易端可用金额#,2); */
    set v_trade_avail_amt = Round(v_trade_avail_amt,2);

    /* set @静态可用金额# = Round(@静态可用金额#,2); */
    set v_static_avail_amt = Round(v_static_avail_amt,2);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_shsz_comm_avail_amt = v_shsz_comm_avail_amt;
    SET p_hk_comm_avail_amt = v_hk_comm_avail_amt;
    SET p_shsz_trade_avail_amt = v_shsz_trade_avail_amt;
    SET p_hk_trade_avail_amt = v_hk_trade_avail_amt;
    SET p_comm_avail_amt = v_comm_avail_amt;
    SET p_trade_avail_amt = v_trade_avail_amt;
    SET p_static_avail_amt = v_static_avail_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算交易组持仓可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcExgpPosiAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcExgpPosiAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_posi_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_avail_qty decimal(18,2),
    OUT p_trade_avail_qty decimal(18,2),
    OUT p_static_avail_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_posi_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_avail_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_avail_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用数量

    /* SET @可用数量#=0; */
    SET v_avail_qty=0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务持仓表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        begin_qty, curr_qty, frozen_qty, unfroz_qty, 
        comm_frozen_qty, comm_unfroz_qty, comm_capt_qty, comm_releas_qty, 
        trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, trade_releas_qty, 
        strike_capt_qty, strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, 
        realize_pandl, cost_amt, intrst_cost_amt, intrst_pandl into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code_no, v_stock_type, v_asset_type, 
        v_begin_qty, v_curr_qty, v_frozen_qty, v_unfroz_qty, 
        v_comm_frozen_qty, v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, 
        v_trade_frozen_qty, v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, 
        v_strike_capt_qty, v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, 
        v_realize_pandl, v_cost_amt, v_intrst_cost_amt, v_intrst_pandl from db_tdsecu.tb_tdseac_exgp_busi_posi where exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no limit 1;

    if FOUND_ROWS() = 0 then
        #如果证券业务持仓表记录不存在，则当天交易产生的可用数量为0

        /* SET @可用数量#=0; */
        SET v_avail_qty=0;
    else

        /* SET @指令端可用数量#=-@指令冻结数量#-@交易冻结数量#-@成交冻结数量#-@冻结数量#+@解冻数量#-@指令占用数量#-@交易占用数量#-@成交占用数量#; */
        SET v_comm_avail_qty=-v_comm_frozen_qty-v_trade_frozen_qty-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_comm_capt_qty-v_trade_capt_qty-v_strike_capt_qty;

        /* SET @交易端可用数量#=-@交易冻结数量#-@成交冻结数量#-@冻结数量#+@解冻数量#-@交易占用数量#-@成交占用数量#; */
        SET v_trade_avail_qty=-v_trade_frozen_qty-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_trade_capt_qty-v_strike_capt_qty;

        /* SET @静态可用数量#=-@成交冻结数量#-@冻结数量#+@解冻数量#-@成交占用数量#; */
        SET v_static_avail_qty=-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_strike_capt_qty;

        /* if @持仓回转天数#=0 then */
        if v_posi_reback_days=0 then

          /* SET @指令端可用数量#=@指令端可用数量#+@成交释放数量# + @成交解冻数量#; */
          SET v_comm_avail_qty=v_comm_avail_qty+v_strike_releas_qty + v_strike_unfroz_qty;

          /* SET @交易端可用数量#=@交易端可用数量#+@成交释放数量#+ @成交解冻数量#; */
          SET v_trade_avail_qty=v_trade_avail_qty+v_strike_releas_qty+ v_strike_unfroz_qty;

          /* SET @静态可用数量#=@静态可用数量#+@成交释放数量#+ @成交解冻数量#; */
          SET v_static_avail_qty=v_static_avail_qty+v_strike_releas_qty+ v_strike_unfroz_qty;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_avail_qty = v_comm_avail_qty;
    SET p_trade_avail_qty = v_trade_avail_qty;
    SET p_static_avail_qty = v_static_avail_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算资产账户持仓可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcAsacPosiAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcAsacPosiAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_posi_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_avail_qty decimal(18,2),
    OUT p_trade_avail_qty decimal(18,2),
    OUT p_static_avail_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_posi_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_avail_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_avail_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用数量

    /* SET @可用数量#=0; */
    SET v_avail_qty=0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务持仓表][字段][字段变量][{资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, begin_qty, 
        curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
        comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
        v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
        v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
        v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
        v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
        v_cost_amt, v_intrst_cost_amt, v_intrst_pandl from db_tdsecu.tb_tdseac_asac_busi_posi where asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no limit 1;

    if FOUND_ROWS() = 0 then
        #如果证券业务持仓表记录不存在，则当天交易产生的可用数量为0

        /* SET @可用数量#=0; */
        SET v_avail_qty=0;
    else

        /* SET @指令端可用数量#=-@指令冻结数量#-@交易冻结数量#-@成交冻结数量#-@冻结数量#+@解冻数量#-@指令占用数量#-@交易占用数量#-@成交占用数量#; */
        SET v_comm_avail_qty=-v_comm_frozen_qty-v_trade_frozen_qty-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_comm_capt_qty-v_trade_capt_qty-v_strike_capt_qty;

        /* SET @交易端可用数量#=-@交易冻结数量#-@成交冻结数量#-@冻结数量#+@解冻数量#-@交易占用数量#-@成交占用数量#; */
        SET v_trade_avail_qty=-v_trade_frozen_qty-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_trade_capt_qty-v_strike_capt_qty;

        /* SET @静态可用数量#=-@成交冻结数量#-@冻结数量#+@解冻数量#-@成交占用数量#; */
        SET v_static_avail_qty=-v_strike_frozen_qty-v_frozen_qty+v_unfroz_qty-v_strike_capt_qty;

        /* if @持仓回转天数#=0 then */
        if v_posi_reback_days=0 then

          /* SET @指令端可用数量#=@指令端可用数量#+@成交释放数量# + @成交解冻数量#; */
          SET v_comm_avail_qty=v_comm_avail_qty+v_strike_releas_qty + v_strike_unfroz_qty;

          /* SET @交易端可用数量#=@交易端可用数量#+@成交释放数量#+ @成交解冻数量#; */
          SET v_trade_avail_qty=v_trade_avail_qty+v_strike_releas_qty+ v_strike_unfroz_qty;

          /* SET @静态可用数量#=@静态可用数量#+@成交释放数量#+ @成交解冻数量#; */
          SET v_static_avail_qty=v_static_avail_qty+v_strike_releas_qty+ v_strike_unfroz_qty;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_avail_qty = v_comm_avail_qty;
    SET p_trade_avail_qty = v_trade_avail_qty;
    SET p_static_avail_qty = v_static_avail_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组资金
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpCash;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpCash(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组业务资金表][字段][{机构编号}=@机构编号# and (@产品编号# = 0 or {产品编号}=@产品编号#) and (@资产账户编号# = 0 or {资产账户编号}=@资产账户编号#) and (@交易组编号# = 0 or {交易组编号}=@交易组编号#) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#, concat(";",{交易组编号},";")) > 0) and (@交易币种# = " " or {交易币种} = @交易币种#) and {记录序号} > @记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where co_no=v_co_no and (v_pd_no = 0 or pd_no=v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no=v_asset_acco_no) and (v_exch_group_no = 0 or exch_group_no=v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";")) > 0) and (v_exch_crncy_type = " " or exch_crncy_type = v_exch_crncy_type) and row_id > v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where co_no=v_co_no and (v_pd_no = 0 or pd_no=v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no=v_asset_acco_no) and (v_exch_group_no = 0 or exch_group_no=v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";")) > 0) and (v_exch_crncy_type = " " or exch_crncy_type = v_exch_crncy_type) and row_id > v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户资金
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacCash;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacCash(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户业务资金表][字段][(@机构编号# = 0 or {机构编号}=@机构编号#) and (@产品编号# = 0 or {产品编号}=@产品编号#) and (@产品编号权限串# = " " or instr( @产品编号权限串#,concat(";",{产品编号},";"))>0) and (@资产账户编号# = 0 or {资产账户编号}=@资产账户编号#) and (@交易币种# = " " or  {交易币种} = @交易币种#) and {记录序号} > @记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where (v_co_no = 0 or co_no=v_co_no) and (v_pd_no = 0 or pd_no=v_pd_no) and (v_pd_no_rights_str = " " or instr( v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_asset_acco_no = 0 or asset_acco_no=v_asset_acco_no) and (v_exch_crncy_type = " " or  exch_crncy_type = v_exch_crncy_type) and row_id > v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where (v_co_no = 0 or co_no=v_co_no) and (v_pd_no = 0 or pd_no=v_pd_no) and (v_pd_no_rights_str = " " or instr( v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_asset_acco_no = 0 or asset_acco_no=v_asset_acco_no) and (v_exch_crncy_type = " " or  exch_crncy_type = v_exch_crncy_type) and row_id > v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no_str varchar(4096),
    IN p_stock_type_str varchar(2048),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no_str varchar(4096);
    declare v_stock_type_str varchar(2048);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no_str = p_stock_code_no_str;
    SET v_stock_type_str = p_stock_type_str;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组业务持仓表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and (@市场编号串# = "; ;" or instr(@市场编号串#, concat(";", {市场编号}, ";")) > 0) and (@股东代码编号# = 0 or {股东代码编号} = @股东代码编号#) and (@证券代码编号串# = "; ;" or instr(@证券代码编号串#, concat(";", {证券代码编号}, ";")) > 0) and (@证券类型串# = "; ;" or instr(@证券类型串#, concat(";", {证券类型}, ";")) > 0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        begin_qty, curr_qty, frozen_qty, unfroz_qty, 
        comm_frozen_qty, comm_unfroz_qty, comm_capt_qty, comm_releas_qty, 
        trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, trade_releas_qty, 
        strike_capt_qty, strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, 
        realize_pandl, cost_amt, intrst_cost_amt, intrst_pandl from db_tdsecu.tb_tdseac_exgp_busi_posi where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_exch_no_str = "; ;" or instr(v_exch_no_str, concat(";", exch_no, ";")) > 0) and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no_str = "; ;" or instr(v_stock_code_no_str, concat(";", stock_code_no, ";")) > 0) and (v_stock_type_str = "; ;" or instr(v_stock_type_str, concat(";", stock_type, ";")) > 0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        begin_qty, curr_qty, frozen_qty, unfroz_qty, 
        comm_frozen_qty, comm_unfroz_qty, comm_capt_qty, comm_releas_qty, 
        trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, trade_releas_qty, 
        strike_capt_qty, strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, 
        realize_pandl, cost_amt, intrst_cost_amt, intrst_pandl from db_tdsecu.tb_tdseac_exgp_busi_posi where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_exch_no_str = "; ;" or instr(v_exch_no_str, concat(";", exch_no, ";")) > 0) and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no_str = "; ;" or instr(v_stock_code_no_str, concat(";", stock_code_no, ";")) > 0) and (v_stock_type_str = "; ;" or instr(v_stock_type_str, concat(";", stock_type, ";")) > 0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no_str varchar(4096),
    IN p_pd_no_rights_str varchar(2048),
    IN p_row_id bigint,
    IN p_row_count int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no_str varchar(4096);
    declare v_pd_no_rights_str varchar(2048);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no_str = p_stock_code_no_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户业务持仓表][字段][(@机构编号# = 0  or {机构编号} = @机构编号#) and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@产品编号权限串# = " " or  instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号#) and (@市场编号串# = "; ;" or instr(@市场编号串#, concat(";", {市场编号}, ";")) > 0) and (@股东代码编号# = 0 or {股东代码编号} = @股东代码编号#) and (@证券代码编号串# = "; ;" or instr(@证券代码编号串#, concat(";", {证券代码编号}, ";")) > 0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, begin_qty, 
        curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
        comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl from db_tdsecu.tb_tdseac_asac_busi_posi where (v_co_no = 0  or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_pd_no_rights_str = " " or  instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_exch_no_str = "; ;" or instr(v_exch_no_str, concat(";", exch_no, ";")) > 0) and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no_str = "; ;" or instr(v_stock_code_no_str, concat(";", stock_code_no, ";")) > 0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, begin_qty, 
        curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
        comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl from db_tdsecu.tb_tdseac_asac_busi_posi where (v_co_no = 0  or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_pd_no_rights_str = " " or  instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_exch_no_str = "; ;" or instr(v_exch_no_str, concat(";", exch_no, ";")) > 0) and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no_str = "; ;" or instr(v_stock_code_no_str, concat(";", stock_code_no, ";")) > 0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取交易组债券质押转回可用数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetExgpBondImpawnBackAvailQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetExgpBondImpawnBackAvailQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_curr_qty decimal(18,2),
    OUT p_comm_reback_avail_qty decimal(18,2),
    OUT p_trade_reback_avail_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_curr_qty decimal(18,2);
    declare v_comm_reback_avail_qty decimal(18,2);
    declare v_trade_reback_avail_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_curr_qty = 0;
    SET v_comm_reback_avail_qty = 0;
    SET v_trade_reback_avail_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句两表关联][交易证券_账户_交易组债券质押表][交易证券_账户_交易组业务持仓表][a.{当前数量},b.{指令冻结数量},b.{指令解冻数量},b.{交易冻结数量},b.{交易解冻数量}][@当前数量#,@指令冻结数量#,@指令解冻数量#,@交易冻结数量#,@交易解冻数量#][a.{交易组编号}=b.{交易组编号} and a.{资产账户编号}=b.{资产账户编号} and a.{股东代码编号}=b.{股东代码编号} and a.{证券代码编号}=b.{证券代码编号} and a.{资产账户编号}=@资产账户编号# and a.{股东代码编号}=@股东代码编号# and a.{证券代码编号}=@证券代码编号# and a.{交易组编号}=@交易组编号#][4][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    select a.curr_qty,b.comm_frozen_qty,b.comm_unfroz_qty,b.trade_frozen_qty,b.trade_unfroz_qty into v_curr_qty,v_comm_frozen_qty,v_comm_unfroz_qty,v_trade_frozen_qty,v_trade_unfroz_qty from db_tdsecu.tb_tdseac_exgp_bond_impawn a,db_tdsecu.tb_tdseac_exgp_busi_posi b where a.exch_group_no=b.exch_group_no and a.asset_acco_no=b.asset_acco_no and a.stock_acco_no=b.stock_acco_no and a.stock_code_no=b.stock_code_no and a.asset_acco_no=v_asset_acco_no and a.stock_acco_no=v_stock_acco_no and a.stock_code_no=v_stock_code_no and a.exch_group_no=v_exch_group_no limit 1;

    #如果质押表没有记录，变量为空，需要判断

    /* SET @当前数量# = ifnull(@当前数量#,0); */
    SET v_curr_qty = ifnull(v_curr_qty,0);

    /* SET @指令解冻数量# = ifnull(@指令解冻数量#,0); */
    SET v_comm_unfroz_qty = ifnull(v_comm_unfroz_qty,0);

    /* SET @交易解冻数量# = ifnull(@交易解冻数量#,0); */
    SET v_trade_unfroz_qty = ifnull(v_trade_unfroz_qty,0);

    /* SET @指令端转回可用数量# = ifnull(@当前数量#-@指令解冻数量#-@交易解冻数量#,0); */
    SET v_comm_reback_avail_qty = ifnull(v_curr_qty-v_comm_unfroz_qty-v_trade_unfroz_qty,0);

    /* SET @交易端转回可用数量# = ifnull(@当前数量#-@交易解冻数量#,0); */
    SET v_trade_reback_avail_qty = ifnull(v_curr_qty-v_trade_unfroz_qty,0);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_curr_qty = v_curr_qty;
    SET p_comm_reback_avail_qty = v_comm_reback_avail_qty;
    SET p_trade_reback_avail_qty = v_trade_reback_avail_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取资产账户债券质押转回可用数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetAsacBondImpawnBackAvailQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetAsacBondImpawnBackAvailQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_curr_qty decimal(18,2),
    OUT p_comm_reback_avail_qty decimal(18,2),
    OUT p_trade_reback_avail_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_curr_qty decimal(18,2);
    declare v_comm_reback_avail_qty decimal(18,2);
    declare v_trade_reback_avail_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_curr_qty = 0;
    SET v_comm_reback_avail_qty = 0;
    SET v_trade_reback_avail_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句两表关联][交易证券_账户_资产账户债券质押表][交易证券_账户_资产账户业务持仓表][a.{当前数量},b.{指令冻结数量},b.{指令解冻数量},b.{交易冻结数量},b.{交易解冻数量}][@当前数量#,@指令冻结数量#,@指令解冻数量#,@交易冻结数量#,@交易解冻数量#][a.{资产账户编号}=b.{资产账户编号} and a.{股东代码编号}=b.{股东代码编号} and a.{证券代码编号}=b.{证券代码编号} and a.{资产账户编号}=@资产账户编号# and a.{股东代码编号}=@股东代码编号# and a.{证券代码编号}=@证券代码编号#][4][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    select a.curr_qty,b.comm_frozen_qty,b.comm_unfroz_qty,b.trade_frozen_qty,b.trade_unfroz_qty into v_curr_qty,v_comm_frozen_qty,v_comm_unfroz_qty,v_trade_frozen_qty,v_trade_unfroz_qty from db_tdsecu.tb_tdseac_asac_bond_impawn a,db_tdsecu.tb_tdseac_asac_busi_posi b where a.asset_acco_no=b.asset_acco_no and a.stock_acco_no=b.stock_acco_no and a.stock_code_no=b.stock_code_no and a.asset_acco_no=v_asset_acco_no and a.stock_acco_no=v_stock_acco_no and a.stock_code_no=v_stock_code_no limit 1;

    #如果质押表没有记录，变量为空，需要判断

    /* SET @当前数量# = ifnull(@当前数量#,0); */
    SET v_curr_qty = ifnull(v_curr_qty,0);

    /* SET @指令解冻数量# = ifnull(@指令解冻数量#,0); */
    SET v_comm_unfroz_qty = ifnull(v_comm_unfroz_qty,0);

    /* SET @交易解冻数量# = ifnull(@交易解冻数量#,0); */
    SET v_trade_unfroz_qty = ifnull(v_trade_unfroz_qty,0);

    /* SET @指令端转回可用数量# = ifnull(@当前数量#-@指令解冻数量#-@交易解冻数量#,0); */
    SET v_comm_reback_avail_qty = ifnull(v_curr_qty-v_comm_unfroz_qty-v_trade_unfroz_qty,0);

    /* SET @交易端转回可用数量# = ifnull(@当前数量#-@交易解冻数量#,0); */
    SET v_trade_reback_avail_qty = ifnull(v_curr_qty-v_trade_unfroz_qty,0);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_curr_qty = v_curr_qty;
    SET p_comm_reback_avail_qty = v_comm_reback_avail_qty;
    SET p_trade_reback_avail_qty = v_trade_reback_avail_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新指令资金持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateApprCashPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateApprCashPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_comm_id bigint,
    IN p_comm_dir int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_asset_type int,
    IN p_stock_type int,
    IN p_impawn_ratio decimal(18,12),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_trade_code_no int,
    IN p_target_code_no int,
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_occur_qty decimal(18,2),
    IN p_is_record_jour int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_comm_id bigint;
    declare v_comm_dir int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_asset_type int;
    declare v_stock_type int;
    declare v_impawn_ratio decimal(18,12);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_is_record_jour int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_order_dir int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_order_strike_id bigint;
    declare v_remark_info varchar(255);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_comm_id = p_comm_id;
    SET v_comm_dir = p_comm_dir;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_asset_type = p_asset_type;
    SET v_stock_type = p_stock_type;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_is_record_jour = p_is_record_jour;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_order_dir = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_order_strike_id = 0;
    SET v_remark_info = " ";
    SET v_trade_occur_amt = 0;
    SET v_trade_occur_qty = 0;
    SET v_strike_occur_amt = 0;
    SET v_strike_occur_qty = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令方向# = 《指令方向-新股申购》 or @指令方向# = 《指令方向-配售申购》]; */
    if v_comm_dir = 11 or v_comm_dir = 23 then
        leave label_pro;
    end if;


    /* set @期初金额#=0; */
    set v_begin_amt=0;

    /* set @当前金额#=0; */
    set v_curr_amt=0;

    /* set @冻结金额#=0; */
    set v_frozen_amt=0;

    /* set @解冻金额#=0; */
    set v_unfroz_amt=0;

    /* set @指令冻结金额#=0; */
    set v_comm_frozen_amt=0;

    /* set @指令解冻金额#=0; */
    set v_comm_unfroz_amt=0;

    /* set @交易冻结金额#=0; */
    set v_trade_frozen_amt=0;

    /* set @交易解冻金额#=0; */
    set v_trade_unfroz_amt=0;

    /* set @交易占用金额#=0; */
    set v_trade_capt_amt=0;

    /* set @交易释放金额#=0; */
    set v_trade_releas_amt=0;

    /* set @成交占用金额#=0; */
    set v_strike_capt_amt=0;

    /* set @成交释放金额#=0; */
    set v_strike_releas_amt=0;

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @当前数量#=0; */
    set v_curr_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @交易占用数量#=0; */
    set v_trade_capt_qty=0;

    /* set @交易释放数量#=0; */
    set v_trade_releas_qty=0;

    /* set @成交占用数量#=0; */
    set v_strike_capt_qty=0;

    /* set @成交释放数量#=0; */
    set v_strike_releas_qty=0;

    /* set @指令占用数量# = 0; */
    set v_comm_capt_qty = 0;

    /* set @指令释放数量# = 0; */
    set v_comm_releas_qty = 0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;

    /* set @订单方向# = @指令方向#; */
    set v_order_dir = v_comm_dir;

    /* if @订单方向# = 《订单方向-质押提交》 then */
    if v_order_dir = 21 then

      /* set @证券代码编号# = @交易代码编号#; */
      set v_stock_code_no = v_trade_code_no;

      /* set @指令冻结数量#= @指令变动数量#; */
      set v_comm_frozen_qty= v_comm_occur_qty;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;


      /* set @证券代码编号# = @标的代码编号#; */
      set v_stock_code_no = v_target_code_no;

      /* set @指令冻结数量#=0; */
      set v_comm_frozen_qty=0;

      /* set @指令解冻数量#= @指令变动数量# * @质押比例#; */
      set v_comm_unfroz_qty= v_comm_occur_qty * v_impawn_ratio;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;


    /* elseif @订单方向# = 《订单方向-质押转回》 then */
    elseif v_order_dir = 22 then

      /* set @证券代码编号# = @交易代码编号#; */
      set v_stock_code_no = v_trade_code_no;

      /* set @指令解冻数量#= @指令变动数量#; */
      set v_comm_unfroz_qty= v_comm_occur_qty;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;


      /* set @证券代码编号# = @标的代码编号#; */
      set v_stock_code_no = v_target_code_no;

      /* set @指令解冻数量#=0; */
      set v_comm_unfroz_qty=0;

      /* set @指令冻结数量#= @指令变动数量# * @质押比例#; */
      set v_comm_frozen_qty= v_comm_occur_qty * v_impawn_ratio;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.21.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

    else

      /* if @订单方向# = 《订单方向-买入》 or @订单方向# = 《订单方向-基金申购》      then */
      if v_order_dir = 1 or v_order_dir = 9      then

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;

      /* elseif @订单方向# = 《订单方向-融资买入》 then */
      elseif v_order_dir = 5 then

        /* set @指令占用金额# = 0; */
        set v_comm_capt_amt = 0;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;
     #modify by wjp20181204 增加零股卖出方向

      /* elseif @订单方向# = 《订单方向-卖出》 or @订单方向# = 《订单方向-基金赎回》 or @订单方向#=《订单方向-零股卖出》     or @订单方向#=《订单方向-卖券还款》 then */
      elseif v_order_dir = 2 or v_order_dir = 10 or v_order_dir=31     or v_order_dir=7 then

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

      /* elseif  @订单方向#=《订单方向-融券卖出》   then */
      elseif  v_order_dir=6   then

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @指令占用数量# = 0; */
        set v_comm_capt_qty = 0;

      /* elseif  @订单方向#=《订单方向-买券还券》 or @订单方向# = 《订单方向-直接还款》   then */
      elseif  v_order_dir=8 or v_order_dir = 14   then

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @指令释放数量# = 0; */
        set v_comm_releas_qty = 0;

      /* elseif  @订单方向#=《订单方向-直接还券》   then */
      elseif  v_order_dir=15   then

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

        /* set @指令释放金额# = 0; */
        set v_comm_releas_amt = 0;

      /* elseif @订单方向# = 《订单方向-融资回购》 then */
      elseif v_order_dir = 3 then

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

      /* elseif @订单方向# = 《订单方向-融券回购》 then */
      elseif v_order_dir = 4 then

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;
      end if;

      /* if @指令占用金额# <>0 or @指令释放金额# <>0 then */
      if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 then
        #修改资产账户业务资金

        /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{指令释放金额}={指令释放金额}+@指令释放金额#,{指令占用金额}={指令占用金额}+@指令占用金额#][1][@资产账户编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
            frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
            comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
            trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
            v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
            v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
            v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_amt=comm_releas_amt+v_comm_releas_amt,comm_capt_amt=comm_capt_amt+v_comm_capt_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.21.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用数量# <>0 or @指令释放数量# <>0 then */
      if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 then
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.21.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用金额# <>0 or @指令释放金额# <>0 then */
      if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 then
        #修改交易组业务资金

        /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{指令释放金额}={指令释放金额}+@指令释放金额#,{指令占用金额}={指令占用金额}+@指令占用金额#][1][@交易组编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
            curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
            comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
            trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
            strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
            v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
            v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
            v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
            v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_amt=comm_releas_amt+v_comm_releas_amt,comm_capt_amt=comm_capt_amt+v_comm_capt_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.21.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用数量# <>0 or @指令释放数量# <>0 then */
      if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 then
        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.21.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

      end if;
    end if;
    #记录流水

    /* set @订单成交序号# = 0; */
    set v_order_strike_id = 0;

    /* set @备注信息# = "指令"; */
    set v_remark_info = "指令";

    /* set @交易变动金额# = 0; */
    set v_trade_occur_amt = 0;

    /* set @交易变动数量# = 0; */
    set v_trade_occur_qty = 0;

    /* set @成交变动金额# = 0; */
    set v_strike_occur_amt = 0;

    /* set @成交变动数量# = 0; */
    set v_strike_occur_qty = 0;

    /* 调用【原子_交易证券_账户_增加资产账户业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddAsacBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.21.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加资产账户业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_账户_增加交易组业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddExgpBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.21.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加交易组业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新交易资金持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateExchCashPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateExchCashPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_id bigint,
    IN p_trade_capt_amt decimal(18,4),
    IN p_trade_capt_qty decimal(18,2),
    IN p_trade_releas_amt decimal(18,4),
    IN p_trade_releas_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_id bigint;
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_amt decimal(18,4);
    declare v_trade_releas_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_amt decimal(18,4);
    declare v_comm_releas_qty decimal(18,2);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_id = p_comm_id;
    SET v_trade_capt_amt = p_trade_capt_amt;
    SET v_trade_capt_qty = p_trade_capt_qty;
    SET v_trade_releas_amt = p_trade_releas_amt;
    SET v_trade_releas_qty = p_trade_releas_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_amt = 0;
    SET v_comm_releas_qty = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* set @期初金额#=0; */
    set v_begin_amt=0;

    /* set @当前金额#=0; */
    set v_curr_amt=0;

    /* set @冻结金额#=0; */
    set v_frozen_amt=0;

    /* set @解冻金额#=0; */
    set v_unfroz_amt=0;

    /* set @指令冻结金额#=0; */
    set v_comm_frozen_amt=0;

    /* set @指令解冻金额#=0; */
    set v_comm_unfroz_amt=0;

    /* set @交易冻结金额#=0; */
    set v_trade_frozen_amt=0;

    /* set @交易解冻金额#=0; */
    set v_trade_unfroz_amt=0;

    /* set @成交占用金额#=0; */
    set v_strike_capt_amt=0;

    /* set @成交释放金额#=0; */
    set v_strike_releas_amt=0;

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @当前数量#=0; */
    set v_curr_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @成交占用数量#=0; */
    set v_strike_capt_qty=0;

    /* set @成交释放数量#=0; */
    set v_strike_releas_qty=0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;
    #如果是根据指令执行的订单，则需要考虑反冲指令相应资金持仓

    /* if @指令序号# = 0 then */
    if v_comm_id = 0 then

        /* set @指令占用金额# = 0; */
        set v_comm_capt_amt = 0;

        /* set @指令占用数量# = 0; */
        set v_comm_capt_qty = 0;

        /* set @指令释放金额# = 0; */
        set v_comm_releas_amt = 0;

        /* set @指令释放数量# = 0; */
        set v_comm_releas_qty = 0;
    else

        /* set @指令占用金额# = -@交易占用金额#; */
        set v_comm_capt_amt = -v_trade_capt_amt;

        /* set @指令占用数量# = -@交易占用数量#; */
        set v_comm_capt_qty = -v_trade_capt_qty;

        /* set @指令释放金额# = -@交易释放金额#; */
        set v_comm_releas_amt = -v_trade_releas_amt;

        /* set @指令释放数量# = -@交易释放数量#; */
        set v_comm_releas_qty = -v_trade_releas_qty;
    end if;

    /* if @指令占用金额# <>0 or @指令释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
    if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
        #修改资产账户业务资金

        /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{指令占用金额}={指令占用金额}+@指令占用金额#,{指令释放金额}={指令释放金额}+@指令释放金额#,{交易占用金额}={交易占用金额}+@交易占用金额#,{交易释放金额}={交易释放金额}+@交易释放金额#][1][@资产账户编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
            frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
            comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
            trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
            v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
            v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
            v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_amt=comm_capt_amt+v_comm_capt_amt,comm_releas_amt=comm_releas_amt+v_comm_releas_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.22.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @指令占用数量# <>0 or @指令释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 then */
    if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 then
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.22.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @指令占用金额# <>0 or @指令释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
    if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
        #修改交易组业务资金

        /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{指令占用金额}={指令占用金额}+@指令占用金额#,{指令释放金额}={指令释放金额}+@指令释放金额#,{交易占用金额}={交易占用金额}+@交易占用金额#,{交易释放金额}={交易释放金额}+@交易释放金额#][1][@交易组编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
            curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
            comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
            trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
            strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
            v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
            v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
            v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
            v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_amt=comm_capt_amt+v_comm_capt_amt,comm_releas_amt=comm_releas_amt+v_comm_releas_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.22.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @指令占用数量# <>0 or @指令释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 then */
    if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 then
        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.22.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新成交资金持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateStrikeCashPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateStrikeCashPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_order_dir int,
    IN p_comm_id bigint,
    IN p_strike_id bigint,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_trade_code_no int,
    IN p_target_code_no int,
    IN p_asset_type int,
    IN p_stock_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_impawn_ratio decimal(18,12),
    IN p_repo_order_id bigint,
    IN p_repo_strike_id bigint,
    IN p_strike_no varchar(64),
    IN p_strike_date int,
    IN p_strike_time int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_price decimal(16,9),
    IN p_strike_amt decimal(18,4),
    IN p_strike_fee decimal(18,4),
    IN p_par_value decimal(16,9),
    IN p_net_price_flag int,
    IN p_intrst_days int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_repo_days int,
    IN p_repo_cale_days int,
    IN p_repo_back_date int,
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    IN p_is_record_jour int,
    IN p_order_oper_way varchar(2),
    IN p_cost_calc_type int,
    IN p_exgp_cost_amt decimal(18,4),
    IN p_exgp_intrst_cost_amt decimal(18,4),
    IN p_exgp_curr_qty decimal(18,2),
    IN p_asac_cost_amt decimal(18,4),
    IN p_asac_intrst_cost_amt decimal(18,4),
    IN p_asac_curr_qty decimal(18,2),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_combo_code varchar(32),
    IN p_combo_posi_id bigint,
    IN p_order_date int,
    IN p_target_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_open_posi_date int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_order_dir int;
    declare v_comm_id bigint;
    declare v_strike_id bigint;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_asset_type int;
    declare v_stock_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_impawn_ratio decimal(18,12);
    declare v_repo_order_id bigint;
    declare v_repo_strike_id bigint;
    declare v_strike_no varchar(64);
    declare v_strike_date int;
    declare v_strike_time int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_price decimal(16,9);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_par_value decimal(16,9);
    declare v_net_price_flag int;
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_repo_days int;
    declare v_repo_cale_days int;
    declare v_repo_back_date int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_is_record_jour int;
    declare v_order_oper_way varchar(2);
    declare v_cost_calc_type int;
    declare v_exgp_cost_amt decimal(18,4);
    declare v_exgp_intrst_cost_amt decimal(18,4);
    declare v_exgp_curr_qty decimal(18,2);
    declare v_asac_cost_amt decimal(18,4);
    declare v_asac_intrst_cost_amt decimal(18,4);
    declare v_asac_curr_qty decimal(18,2);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_order_date int;
    declare v_target_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_open_posi_date int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_exch_rate decimal(18,12);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_occur_qty decimal(18,2);
    declare v_tmp_stock_code_no int;
    declare v_strike_capt_amt decimal(18,4);
    declare v_tmp_trade_capt_amt decimal(18,4);
    declare v_tmp_trade_capt_qty decimal(18,2);
    declare v_pre_settle_qty decimal(18,2);
    declare v_posi_qty decimal(18,2);
    declare v_posi_status varchar(2);
    declare v_combo_posi_sum_id bigint;
    declare v_repo_trade_date int;
    declare v_repo_qty decimal(18,2);
    declare v_repo_back_amt decimal(18,4);
    declare v_repo_amt decimal(18,4);
    declare v_repo_rate decimal(18,12);
    declare v_repo_back_intrst decimal(18,4);
    declare v_order_strike_id bigint;
    declare v_remark_info varchar(255);
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_order_dir = p_order_dir;
    SET v_comm_id = p_comm_id;
    SET v_strike_id = p_strike_id;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_asset_type = p_asset_type;
    SET v_stock_type = p_stock_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_repo_order_id = p_repo_order_id;
    SET v_repo_strike_id = p_repo_strike_id;
    SET v_strike_no = p_strike_no;
    SET v_strike_date = p_strike_date;
    SET v_strike_time = p_strike_time;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_price = p_strike_price;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_fee = p_strike_fee;
    SET v_par_value = p_par_value;
    SET v_net_price_flag = p_net_price_flag;
    SET v_intrst_days = p_intrst_days;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_repo_days = p_repo_days;
    SET v_repo_cale_days = p_repo_cale_days;
    SET v_repo_back_date = p_repo_back_date;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_is_record_jour = p_is_record_jour;
    SET v_order_oper_way = p_order_oper_way;
    SET v_cost_calc_type = p_cost_calc_type;
    SET v_exgp_cost_amt = p_exgp_cost_amt;
    SET v_exgp_intrst_cost_amt = p_exgp_intrst_cost_amt;
    SET v_exgp_curr_qty = p_exgp_curr_qty;
    SET v_asac_cost_amt = p_asac_cost_amt;
    SET v_asac_intrst_cost_amt = p_asac_intrst_cost_amt;
    SET v_asac_curr_qty = p_asac_curr_qty;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_combo_code = p_combo_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_order_date = p_order_date;
    SET v_target_stock_code_no = p_target_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_exch_rate = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_occur_qty = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_strike_capt_amt = 0;
    SET v_tmp_trade_capt_amt = 0;
    SET v_tmp_trade_capt_qty = 0;
    SET v_pre_settle_qty = 0;
    SET v_posi_qty = 0;
    SET v_posi_status = "0";
    SET v_combo_posi_sum_id = 0;
    SET v_repo_trade_date = date_format(curdate(),'%Y%m%d');
    SET v_repo_qty = 0;
    SET v_repo_back_amt = 0;
    SET v_repo_amt = 0;
    SET v_repo_rate = 0;
    SET v_repo_back_intrst = 0;
    SET v_order_strike_id = 0;
    SET v_remark_info = " ";
    SET v_comm_occur_amt = 0;
    SET v_comm_occur_qty = 0;

    
    label_pro:BEGIN
    

    /* set @期初金额#=0; */
    set v_begin_amt=0;

    /* set @当前金额#=0; */
    set v_curr_amt=0;

    /* set @冻结金额#=0; */
    set v_frozen_amt=0;

    /* set @解冻金额#=0; */
    set v_unfroz_amt=0;

    /* set @指令冻结金额#=0; */
    set v_comm_frozen_amt=0;

    /* set @指令解冻金额#=0; */
    set v_comm_unfroz_amt=0;

    /* set @指令占用金额#=0; */
    set v_comm_capt_amt=0;

    /* set @指令释放金额#=0; */
    set v_comm_releas_amt=0;

    /* set @交易冻结金额#=0; */
    set v_trade_frozen_amt=0;

    /* set @交易解冻金额#=0; */
    set v_trade_unfroz_amt=0;

    /* set @交易占用金额#=0; */
    set v_trade_capt_amt=0;

    /* set @交易释放金额#=0; */
    set v_trade_releas_amt=0;

    /* set @成交释放金额#=0; */
    set v_strike_releas_amt=0;

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @当前数量#=0; */
    set v_curr_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @指令占用数量#=0; */
    set v_comm_capt_qty=0;

    /* set @指令释放数量#=0; */
    set v_comm_releas_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @交易占用数量#=0; */
    set v_trade_capt_qty=0;

    /* set @交易释放数量#=0; */
    set v_trade_releas_qty=0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @成交占用数量# = 0; */
    set v_strike_capt_qty = 0;

    /* set @成交释放数量# = 0; */
    set v_strike_releas_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;

    /* set @汇率# = 1; */
    set v_exch_rate = 1;
    #还需要处理质押表记录、成本变化，记录流水，后面在完成; 还有一点 交易业务配置参数问题

    /* if @订单方向# = 《订单方向-质押提交》 then */
    if v_order_dir = 21 then

        /* set @证券代码编号# = @交易代码编号#; */
        set v_stock_code_no = v_trade_code_no;

        /* set @交易冻结数量# = @交易变动数量#; */
        set v_trade_frozen_qty = v_trade_occur_qty;

        /* set @成交冻结数量# = @成交变动数量#; */
        set v_strike_frozen_qty = v_strike_occur_qty;

        /* if @成交冻结数量# <>0 or @交易冻结数量# <>0 then */
        if v_strike_frozen_qty <>0 or v_trade_frozen_qty <>0 then
          #修改资产账户业务持仓

          /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交冻结数量}={成交冻结数量}+@成交冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_asac_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
              stock_type, asset_type, begin_qty, curr_qty, 
              frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
              comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
              trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
              strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
              intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
              v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
              v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
              v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
              v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
              v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
              v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_frozen_qty=strike_frozen_qty+v_strike_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* if @成交冻结数量# <>0 or @交易冻结数量# <>0 then */
        if v_strike_frozen_qty <>0 or v_trade_frozen_qty <>0 then
          #修改交易组业务持仓

          /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交冻结数量}={成交冻结数量}+@成交冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
              stock_code_no, stock_type, asset_type, begin_qty, 
              curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
              comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
              trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
              strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
              cost_amt, intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
              v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
              v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
              v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
              v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
              v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
              v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_frozen_qty=strike_frozen_qty+v_strike_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @交易解冻数量# = @交易变动数量# * @质押比例#; */
        set v_trade_unfroz_qty = v_trade_occur_qty * v_impawn_ratio;

        /* set @成交解冻数量# = @成交变动数量# * @质押比例#; */
        set v_strike_unfroz_qty = v_strike_occur_qty * v_impawn_ratio;

        /* if @成交解冻数量# <>0 or @交易解冻数量# <>0 then */
        if v_strike_unfroz_qty <>0 or v_trade_unfroz_qty <>0 then
          #修改资产账户业务持仓

          /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交解冻数量}={成交解冻数量}+@成交解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_asac_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
              stock_type, asset_type, begin_qty, curr_qty, 
              frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
              comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
              trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
              strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
              intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
              v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
              v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
              v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
              v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
              v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
              v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_unfroz_qty=strike_unfroz_qty+v_strike_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* if @成交解冻数量# <>0 or @交易解冻数量# <>0 then */
        if v_strike_unfroz_qty <>0 or v_trade_unfroz_qty <>0 then
          #修改交易组业务持仓

          /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交解冻数量}={成交解冻数量}+@成交解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
              stock_code_no, stock_type, asset_type, begin_qty, 
              curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
              comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
              trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
              strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
              cost_amt, intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
              v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
              v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
              v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
              v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
              v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
              v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_unfroz_qty=strike_unfroz_qty+v_strike_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;
        #质押记录处理

        /* set @证券代码编号# = @交易代码编号#; */
        set v_stock_code_no = v_trade_code_no;

        /* set @变动数量# = @成交变动数量#; */
        set v_occur_qty = v_strike_occur_qty;

        /* 调用【原子_交易证券_账户_提交债券质押】*/
        call db_tdsecu.pra_tdseac_BondImpawn(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_no,
            v_stock_acco_no,
            v_stock_code_no,
            v_target_code_no,
            v_occur_qty,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.23.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_提交债券质押出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-质押转回》 then */
    elseif v_order_dir = 22 then

        /* set @证券代码编号# = @交易代码编号#; */
        set v_stock_code_no = v_trade_code_no;

        /* set @交易解冻数量# = @交易变动数量#; */
        set v_trade_unfroz_qty = v_trade_occur_qty;

        /* set @成交解冻数量# = @成交变动数量#; */
        set v_strike_unfroz_qty = v_strike_occur_qty;

        /* if @成交解冻数量# <>0 or @交易解冻数量# <>0 then */
        if v_strike_unfroz_qty <>0 or v_trade_unfroz_qty <>0 then
          #修改资产账户业务持仓

          /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交解冻数量}={成交解冻数量}+@成交解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_asac_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
              stock_type, asset_type, begin_qty, curr_qty, 
              frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
              comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
              trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
              strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
              intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
              v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
              v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
              v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
              v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
              v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
              v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_unfroz_qty=strike_unfroz_qty+v_strike_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* if @成交解冻数量# <>0 or @交易解冻数量# <>0 then */
        if v_strike_unfroz_qty <>0 or v_trade_unfroz_qty <>0 then
          #修改交易组业务持仓

          /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交解冻数量}={成交解冻数量}+@成交解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
              stock_code_no, stock_type, asset_type, begin_qty, 
              curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
              comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
              trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
              strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
              cost_amt, intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
              v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
              v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
              v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
              v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
              v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
              v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_unfroz_qty=strike_unfroz_qty+v_strike_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @交易冻结数量# = @交易变动数量#  * @质押比例#; */
        set v_trade_frozen_qty = v_trade_occur_qty  * v_impawn_ratio;

        /* set @成交冻结数量# = @成交变动数量#  * @质押比例#; */
        set v_strike_frozen_qty = v_strike_occur_qty  * v_impawn_ratio;

        /* if @成交冻结数量# <>0 or @交易冻结数量# <>0 then */
        if v_strike_frozen_qty <>0 or v_trade_frozen_qty <>0 then
          #修改资产账户业务持仓

          /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交冻结数量}={成交冻结数量}+@成交冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_asac_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
              stock_type, asset_type, begin_qty, curr_qty, 
              frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
              comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
              trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
              strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
              intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
              v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
              v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
              v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
              v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
              v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
              v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_frozen_qty=strike_frozen_qty+v_strike_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;

        /* if @成交冻结数量# <>0 or @交易冻结数量# <>0 then */
        if v_strike_frozen_qty <>0 or v_trade_frozen_qty <>0 then
          #修改交易组业务持仓

          /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交冻结数量}={成交冻结数量}+@成交冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
          set v_create_date = date_format(curdate(),'%Y%m%d');
          set v_create_time = date_format(curtime(),'%H%i%s');
          set v_update_date = v_create_date;
          set v_update_time = v_create_time;
          set v_update_times = 1;
          insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
              create_date, create_time, update_date, 
              update_time, update_times, co_no, pd_no, 
              exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
              stock_code_no, stock_type, asset_type, begin_qty, 
              curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
              comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
              trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
              strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
              cost_amt, intrst_cost_amt, intrst_pandl) 
          values(
              v_create_date, v_create_time, v_update_date, 
              v_update_time, v_update_times, v_co_no, v_pd_no, 
              v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
              v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
              v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
              v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
              v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
              v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
              v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
          ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_frozen_qty=strike_frozen_qty+v_strike_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
          if v_error_code = "1" then
                      
              SET v_error_code = "tdsecuA.2.23.1";
              if v_mysql_message <> "" then
                  SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
              else
                  SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
              end if;
              leave label_pro;
          end if;

        end if;
        #质押记录处理

        /* set @证券代码编号# = @交易代码编号#; */
        set v_stock_code_no = v_trade_code_no;

        /* set @变动数量# = @成交变动数量#; */
        set v_occur_qty = v_strike_occur_qty;

        /* 调用【原子_交易证券_账户_转回债券质押】*/
        call db_tdsecu.pra_tdseac_BondImpawnBack(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_no,
            v_stock_acco_no,
            v_stock_code_no,
            v_target_code_no,
            v_occur_qty,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.23.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_转回债券质押出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-基金转换》 then */
    elseif v_order_dir = 12 then

        /* if @订单日期# <>@初始化日期# then */
        if v_order_date <>v_init_date then

            /* set @成交占用数量# = @成交变动数量#; */
            set v_strike_capt_qty = v_strike_occur_qty;

            /* set @冻结数量# = -@成交变动数量#; */
            set v_frozen_qty = -v_strike_occur_qty;

            /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交占用数量}={成交占用数量}+@成交占用数量#,{冻结数量}={冻结数量}+@成交占用数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                stock_type, asset_type, begin_qty, curr_qty, 
                frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_qty=strike_capt_qty+v_strike_capt_qty,frozen_qty=frozen_qty+v_strike_capt_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交占用数量}={成交占用数量}+@成交占用数量#,{冻结数量}={冻结数量}-@成交占用数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code_no, stock_type, asset_type, begin_qty, 
                curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                cost_amt, intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_qty=strike_capt_qty+v_strike_capt_qty,frozen_qty=frozen_qty-v_strike_capt_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* set @证券代码编号# = @目标证券代码编号#; */
            set v_stock_code_no = v_target_stock_code_no;

            /* set @成交释放数量# = @成交占用数量#; */
            set v_strike_releas_qty = v_strike_capt_qty;

            /* set @成交占用数量# = 0; */
            set v_strike_capt_qty = 0;

            /* set @冻结数量# = 0; */
            set v_frozen_qty = 0;

            /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交释放数量}={成交释放数量}+@成交释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                stock_type, asset_type, begin_qty, curr_qty, 
                frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_releas_qty=strike_releas_qty+v_strike_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交释放数量}={成交释放数量}+@成交释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code_no, stock_type, asset_type, begin_qty, 
                curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                cost_amt, intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_releas_qty=strike_releas_qty+v_strike_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;

        else

            /* set @成交占用数量# = @成交变动数量#; */
            set v_strike_capt_qty = v_strike_occur_qty;

            /* set @交易占用数量# = @交易变动数量#; */
            set v_trade_capt_qty = v_trade_occur_qty;

            /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交占用数量}={成交占用数量}+@成交占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                stock_type, asset_type, begin_qty, curr_qty, 
                frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_qty=strike_capt_qty+v_strike_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交占用数量}={成交占用数量}+@成交占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code_no, stock_type, asset_type, begin_qty, 
                curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                cost_amt, intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_qty=strike_capt_qty+v_strike_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* set @证券代码编号# = @目标证券代码编号#; */
            set v_stock_code_no = v_target_stock_code_no;

            /* set @交易释放数量# = @交易占用数量#; */
            set v_trade_releas_qty = v_trade_capt_qty;

            /* set @成交释放数量# = @成交占用数量#; */
            set v_strike_releas_qty = v_strike_capt_qty;

            /* set @成交占用数量# = 0; */
            set v_strike_capt_qty = 0;

            /* set @交易占用数量# = 0; */
            set v_trade_capt_qty = 0;

            /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{成交释放数量}={成交释放数量}+@成交释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                stock_type, asset_type, begin_qty, curr_qty, 
                frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{成交释放数量}={成交释放数量}+@成交释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code_no, stock_type, asset_type, begin_qty, 
                curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                cost_amt, intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;

        end if;
    else

        /* set @临时_证券代码编号# = @证券代码编号#; */
        set v_tmp_stock_code_no = v_stock_code_no;

        /* set @冻结数量# = 0; */
        set v_frozen_qty = 0;

        /* if @订单方向# = 《订单方向-买入》   or @订单方向# = 《订单方向-基金申购》  then */
        if v_order_dir = 1   or v_order_dir = 9  then

            /* set @成交占用金额# = @成交变动金额#; */
            set v_strike_capt_amt = v_strike_occur_amt;

            /* set @交易占用金额# = @交易变动金额#; */
            set v_trade_capt_amt = v_trade_occur_amt;

            /* set @成交释放数量# = @成交变动数量#; */
            set v_strike_releas_qty = v_strike_occur_qty;

            /* set @交易释放数量# = @交易变动数量#; */
            set v_trade_releas_qty = v_trade_occur_qty;
            #隔天不影响交易字段

            /* if @订单日期# <>@初始化日期# then */
            if v_order_date <>v_init_date then

                /* set @临时_交易占用金额# = @交易占用金额#; */
                set v_tmp_trade_capt_amt = v_trade_capt_amt;

                /* set @交易占用金额# = 0; */
                set v_trade_capt_amt = 0;

                /* set @交易释放数量# = 0; */
                set v_trade_releas_qty = 0;
            end if;

        /* elseif @订单方向# = 《订单方向-融资买入》   then */
        elseif v_order_dir = 5   then

            /* set @成交占用金额# = 0; */
            set v_strike_capt_amt = 0;

            /* set @交易占用金额# = 0; */
            set v_trade_capt_amt = 0;

            /* set @成交释放数量# = @成交变动数量#; */
            set v_strike_releas_qty = v_strike_occur_qty;

            /* set @交易释放数量# = @交易变动数量#; */
            set v_trade_releas_qty = v_trade_occur_qty;

        /* elseif @订单方向# = 《订单方向-卖出》 or @订单方向# = 《订单方向-零股卖出》  or @订单方向# = 《订单方向-基金赎回》 or @订单方向# = 《订单方向-卖券还款》  then */
        elseif v_order_dir = 2 or v_order_dir = 31  or v_order_dir = 10 or v_order_dir = 7  then

            /* set @成交释放金额# = @成交变动金额#; */
            set v_strike_releas_amt = v_strike_occur_amt;

            /* set @交易释放金额# = @交易变动金额#; */
            set v_trade_releas_amt = v_trade_occur_amt;

            /* set @成交占用数量# = @成交变动数量#; */
            set v_strike_capt_qty = v_strike_occur_qty;

            /* set @交易占用数量# = @交易变动数量#; */
            set v_trade_capt_qty = v_trade_occur_qty;
            #隔天不影响交易字段

            /* if @订单日期# <>@初始化日期# then */
            if v_order_date <>v_init_date then

                /* set @临时_交易占用数量# = @交易占用数量#; */
                set v_tmp_trade_capt_qty = v_trade_capt_qty;

                /* set @交易释放金额# = 0; */
                set v_trade_releas_amt = 0;

                /* set @交易占用数量# = 0; */
                set v_trade_capt_qty = 0;
            end if;

        /* elseif @订单方向# = 《订单方向-融券卖出》  then */
        elseif v_order_dir = 6  then

            /* set @成交释放金额# = @成交变动金额#; */
            set v_strike_releas_amt = v_strike_occur_amt;

            /* set @交易释放金额# = @交易变动金额#; */
            set v_trade_releas_amt = v_trade_occur_amt;

            /* set @成交占用数量# = 0; */
            set v_strike_capt_qty = 0;

            /* set @交易占用数量# = 0; */
            set v_trade_capt_qty = 0;

        /* elseif @订单方向# = 《订单方向-买券还券》 or @订单方向# = 《订单方向-直接还款》  then */
        elseif v_order_dir = 8 or v_order_dir = 14  then

            /* set @成交占用金额# = @成交变动金额#; */
            set v_strike_capt_amt = v_strike_occur_amt;

            /* set @交易占用金额# = @交易变动金额#; */
            set v_trade_capt_amt = v_trade_occur_amt;

            /* set @成交释放数量# = 0; */
            set v_strike_releas_qty = 0;

            /* set @交易释放数量# = 0; */
            set v_trade_releas_qty = 0;

        /* elseif @订单方向# = 《订单方向-直接还券》  then */
        elseif v_order_dir = 15  then

            /* set @成交占用数量# = @成交变动数量#; */
            set v_strike_capt_qty = v_strike_occur_qty;

            /* set @交易占用数量# = @交易变动数量#; */
            set v_trade_capt_qty = v_trade_occur_qty;

            /* set @成交释放金额# = 0; */
            set v_strike_releas_amt = 0;

            /* set @交易释放金额# = 0; */
            set v_trade_releas_amt = 0;

        /* elseif @订单方向# = 《订单方向-融资回购》 then */
        elseif v_order_dir = 3 then

            /* set @证券代码编号# = @标的代码编号#; */
            set v_stock_code_no = v_target_code_no;

            /* set @成交释放金额# = @成交变动金额#; */
            set v_strike_releas_amt = v_strike_occur_amt;

            /* set @交易释放金额# = @交易变动金额#; */
            set v_trade_releas_amt = v_trade_occur_amt;

            /* set @成交占用数量# = @成交变动数量#; */
            set v_strike_capt_qty = v_strike_occur_qty;

            /* set @交易占用数量# = @交易变动数量#; */
            set v_trade_capt_qty = v_trade_occur_qty;

        /* elseif @订单方向# = 《订单方向-融券回购》 then */
        elseif v_order_dir = 4 then

            /* set @证券代码编号# = @标的代码编号#; */
            set v_stock_code_no = v_target_code_no;

            /* set @成交占用金额# = @成交变动金额#; */
            set v_strike_capt_amt = v_strike_occur_amt;

            /* set @交易占用金额# = @交易变动金额#; */
            set v_trade_capt_amt = v_trade_occur_amt;

            /* set @成交释放数量# = @成交变动数量#; */
            set v_strike_releas_qty = v_strike_occur_qty;

            /* set @交易释放数量# = @交易变动数量#; */
            set v_trade_releas_qty = v_trade_occur_qty;
            #需要冻结标准券不能用来做正回购

            /* set @冻结数量# = @成交变动数量#; */
            set v_frozen_qty = v_strike_occur_qty;
        end if;

        /* if @成交占用金额# <>0 or @成交释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
        if v_strike_capt_amt <>0 or v_strike_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
            #修改资产账户业务资金

            /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{成交占用金额}={成交占用金额}+@成交占用金额#,{成交释放金额}={成交释放金额}+@成交释放金额#,{交易占用金额}={交易占用金额}+@交易占用金额#,{交易释放金额}={交易释放金额}+@交易释放金额#][1][@资产账户编号#,@交易币种#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_capit (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
                frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
                comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
                trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
                v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
                v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
                v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt+v_strike_capt_amt,strike_releas_amt=strike_releas_amt+v_strike_releas_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
                end if;
                leave label_pro;
            end if;


            /* if @订单日期# <>@初始化日期# and @订单方向# = 《订单方向-基金申购》 then */
            if v_order_date <>v_init_date and v_order_dir = 9 then

                /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{冻结金额}={冻结金额} + @临时_交易占用金额#][1][@资产账户编号#,@交易币种#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_asac_busi_capit (
                    create_date, create_time, update_date, 
                    update_time, update_times, co_no, pd_no, 
                    asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
                    frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
                    comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
                    trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_co_no, v_pd_no, 
                    v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
                    v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
                    v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
                    v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_amt=frozen_amt + v_tmp_trade_capt_amt;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if @成交占用数量# <>0 or @成交释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 or @冻结数量# <> 0 then */
        if v_strike_capt_qty <>0 or v_strike_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 or v_frozen_qty <> 0 then
            #修改资产账户业务持仓

            /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                stock_type, asset_type, begin_qty, curr_qty, 
                frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* if @订单日期# <>@初始化日期# and @订单方向# = 《订单方向-基金赎回》 then */
            if v_order_date <>v_init_date and v_order_dir = 10 then

                /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{冻结数量}={冻结数量} - @成交占用数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_asac_busi_posi (
                    create_date, create_time, update_date, 
                    update_time, update_times, co_no, pd_no, 
                    asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
                    stock_type, asset_type, begin_qty, curr_qty, 
                    frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
                    comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
                    trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                    strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                    intrst_cost_amt, intrst_pandl) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_co_no, v_pd_no, 
                    v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
                    v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
                    v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
                    v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                    v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                    v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                    v_intrst_cost_amt, v_intrst_pandl) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_qty=frozen_qty - v_strike_capt_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if @订单方向# = 《订单方向-买入》  or @订单方向# = 《订单方向-融资买入》  or @订单方向# = 《订单方向-基金申购》  then */
        if v_order_dir = 1  or v_order_dir = 5  or v_order_dir = 9  then

            /* 调用【原子_交易证券_账户_更新资产账户买入成本】*/
            call db_tdsecu.pra_tdseac_UpdateAsacBuyCost(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_net_price_flag,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_order_oper_way,
                v_error_code,
                v_error_info);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.23.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新资产账户买入成本出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


        /* elseif @订单方向# = 《订单方向-卖出》 or @订单方向# = 《订单方向-零股卖出》  or @订单方向# = 《订单方向-基金赎回》  or @订单方向# = 《订单方向-卖券还款》  then */
        elseif v_order_dir = 2 or v_order_dir = 31  or v_order_dir = 10  or v_order_dir = 7  then

            /* 调用【原子_交易证券_账户_更新资产账户卖出成本】*/
            call db_tdsecu.pra_tdseac_UpdateAsacSaleCost(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_net_price_flag,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_cost_calc_type,
                v_asac_cost_amt,
                v_asac_intrst_cost_amt,
                v_asac_curr_qty,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_error_code,
                v_error_info);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.23.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新资产账户卖出成本出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;

        /* if @成交占用金额# <>0 or @成交释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
        if v_strike_capt_amt <>0 or v_strike_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
            #修改交易组业务资金

            /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{成交占用金额}={成交占用金额}+@成交占用金额#,{成交释放金额}={成交释放金额}+@成交释放金额#,{交易占用金额}={交易占用金额}+@交易占用金额#,{交易释放金额}={交易释放金额}+@交易释放金额#][1][@交易组编号#,@交易币种#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
                curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
                comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
                trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
                strike_releas_amt) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
                v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
                v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
                v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
                v_strike_releas_amt) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt+v_strike_capt_amt,strike_releas_amt=strike_releas_amt+v_strike_releas_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type);
                end if;
                leave label_pro;
            end if;


            /* if @订单日期# <>@初始化日期# and @订单方向# = 《订单方向-基金申购》 then */
            if v_order_date <>v_init_date and v_order_dir = 9 then

                /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{冻结金额}={冻结金额} + @临时_交易占用金额#][1][@资产账户编号#,@交易币种#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
                    create_date, create_time, update_date, 
                    update_time, update_times, co_no, pd_no, 
                    exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
                    curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
                    comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
                    trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
                    strike_releas_amt) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_co_no, v_pd_no, 
                    v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
                    v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
                    v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
                    v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
                    v_strike_releas_amt) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_amt=frozen_amt + v_tmp_trade_capt_amt;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if @成交占用数量# <>0 or @成交释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 or @冻结数量# <> 0  then */
        if v_strike_capt_qty <>0 or v_strike_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 or v_frozen_qty <> 0  then
            #修改交易组业务持仓

            /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                create_date, create_time, update_date, 
                update_time, update_times, co_no, pd_no, 
                exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code_no, stock_type, asset_type, begin_qty, 
                curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                cost_amt, intrst_cost_amt, intrst_pandl) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_co_no, v_pd_no, 
                v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.23.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* if @订单日期# <>@初始化日期# and @订单方向# = 《订单方向-基金赎回》 then */
            if v_order_date <>v_init_date and v_order_dir = 10 then

                /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{冻结数量}={冻结数量} - @成交占用数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
                    create_date, create_time, update_date, 
                    update_time, update_times, co_no, pd_no, 
                    exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
                    stock_code_no, stock_type, asset_type, begin_qty, 
                    curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
                    comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
                    trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
                    strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
                    cost_amt, intrst_cost_amt, intrst_pandl) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_co_no, v_pd_no, 
                    v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                    v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
                    v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
                    v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
                    v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
                    v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
                    v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, frozen_qty=frozen_qty - v_strike_capt_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                    end if;
                    leave label_pro;
                end if;

            end if;

            /* set @开仓日期# =@订单日期#; */
            set v_open_posi_date =v_order_date;

            /* set @待交收数量# =0; */
            set v_pre_settle_qty =0;

            /* set @持仓数量# =@成交释放数量# - @成交占用数量#; */
            set v_posi_qty =v_strike_releas_qty - v_strike_capt_qty;

            /* if @订单操作方式# = 《订单操作方式-组合买入》 then */
            if v_order_oper_way = "26" then

                /* set @持仓状态# = 《持仓状态-未平仓》; */
                set v_posi_status = "1";

                /* [插入重复更新][交易证券_账户_组合持仓表][字段][字段变量][{持仓数量} = {持仓数量} +@持仓数量#,{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_comboposi (
                    create_date, create_time, update_date, 
                    update_time, update_times, init_date, co_no, 
                    pd_no, exch_group_no, asset_acco_no, stock_acco_no, 
                    combo_code, stock_code, exch_no, stock_code_no, 
                    open_posi_date, posi_qty, curr_qty, frozen_qty, 
                    unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
                    trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                    strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                    intrst_cost_amt, intrst_pandl, posi_status) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_init_date, v_co_no, 
                    v_pd_no, v_exch_group_no, v_asset_acco_no, v_stock_acco_no, 
                    v_combo_code, v_stock_code, v_exch_no, v_stock_code_no, 
                    v_open_posi_date, v_posi_qty, v_curr_qty, v_frozen_qty, 
                    v_unfroz_qty, v_pre_settle_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                    v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                    v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                    v_intrst_cost_amt, v_intrst_pandl, v_posi_status) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, posi_qty = posi_qty +v_posi_qty,frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量][交易证券_账户_组合持仓表][{记录序号}][@组合持仓序号#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
                select row_id into v_combo_posi_id from db_tdsecu.tb_tdseac_comboposi where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
                    end if;
                    leave label_pro;
                end if;


                /* [更新表记录][交易证券_账户_组合持仓表][{持仓状态} = @持仓状态#][{记录序号} = @组合持仓序号#][1][@组合持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = v_posi_status where row_id = v_combo_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [插入重复更新][交易证券_账户_组合持仓汇总表][字段][字段变量][{持仓数量} = {持仓数量} +@持仓数量#,{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_comboposisum (
                    create_date, create_time, update_date, 
                    update_time, update_times, init_date, co_no, 
                    pd_no, exch_group_no, asset_acco_no, stock_acco_no, 
                    combo_code, stock_code, exch_no, stock_code_no, 
                    posi_qty, curr_qty, frozen_qty, unfroz_qty, 
                    pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, 
                    trade_releas_qty, strike_capt_qty, strike_releas_qty, strike_frozen_qty, 
                    strike_unfroz_qty, realize_pandl, cost_amt, intrst_cost_amt, 
                    intrst_pandl, posi_status) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_init_date, v_co_no, 
                    v_pd_no, v_exch_group_no, v_asset_acco_no, v_stock_acco_no, 
                    v_combo_code, v_stock_code, v_exch_no, v_stock_code_no, 
                    v_posi_qty, v_curr_qty, v_frozen_qty, v_unfroz_qty, 
                    v_pre_settle_qty, v_trade_frozen_qty, v_trade_unfroz_qty, v_trade_capt_qty, 
                    v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, v_strike_frozen_qty, 
                    v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, v_intrst_cost_amt, 
                    v_intrst_pandl, v_posi_status) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, posi_qty = posi_qty +v_posi_qty,frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量][交易证券_账户_组合持仓汇总表][{记录序号}][@组合持仓汇总序号#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
                select row_id into v_combo_posi_sum_id from db_tdsecu.tb_tdseac_comboposisum where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
                    end if;
                    leave label_pro;
                end if;


                /* [更新表记录][交易证券_账户_组合持仓汇总表][{持仓状态} = @持仓状态#][{记录序号} = @组合持仓汇总序号#][1][@组合持仓汇总序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = v_posi_status where row_id = v_combo_posi_sum_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("组合持仓汇总序号=",v_combo_posi_sum_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("组合持仓汇总序号=",v_combo_posi_sum_id);
                    end if;
                    leave label_pro;
                end if;


            /* elseif  @订单操作方式# = 《订单操作方式-组合调仓》  or  @订单操作方式# = 《订单操作方式-组合卖出》 then */
            elseif  v_order_oper_way = "28"  or  v_order_oper_way = "27" then

                /* [更新表记录][交易证券_账户_组合持仓表][{持仓数量} = {持仓数量} +@持仓数量#,{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][{记录序号} = @组合持仓序号#][1][@组合持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_qty = posi_qty +v_posi_qty,frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty where row_id = v_combo_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [更新表记录][交易证券_账户_组合持仓汇总表][{持仓数量} = {持仓数量} +@持仓数量#,{冻结数量}={冻结数量}+@冻结数量#,{成交占用数量}={成交占用数量}+@成交占用数量#,{成交释放数量}={成交释放数量}+@成交释放数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][{交易组编号} = @交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_qty = posi_qty +v_posi_qty,frozen_qty=frozen_qty+v_frozen_qty,strike_capt_qty=strike_capt_qty+v_strike_capt_qty,strike_releas_qty=strike_releas_qty+v_strike_releas_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty where exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量][交易证券_账户_组合持仓表][{开仓日期},{持仓数量}][@开仓日期#,@持仓数量#][{记录序号}=@组合持仓序号#][1][@组合持仓序号#] */
                select open_posi_date,posi_qty into v_open_posi_date,v_posi_qty from db_tdsecu.tb_tdseac_comboposi where row_id=v_combo_posi_id limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* if @持仓数量# = 0 then */
                if v_posi_qty = 0 then

                    /* [更新表记录][交易证券_账户_组合持仓表][{持仓状态} = 《持仓状态-已平仓》][{记录序号} = @组合持仓序号#][1][@组合持仓序号#] */
                    set v_update_date = date_format(curdate(),'%Y%m%d');
                    set v_update_time = date_format(curtime(),'%H%i%s');
                    update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = "2" where row_id = v_combo_posi_id;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.23.1";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                        end if;
                        leave label_pro;
                    end if;

                end if;

                /* [获取表记录变量][交易证券_账户_组合持仓汇总表][{持仓数量}][@持仓数量#][{交易组编号} = @交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][1][{交易组编号} = @交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#] */
                select posi_qty into v_posi_qty from db_tdsecu.tb_tdseac_comboposisum where exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.23.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("exch_group_no = 交易组编号 and asset_acco_no=资产账户编号 and stock_acco_no = 股东代码编号 and combo_code = 组合代码 and stock_code_no = 证券代码编号 and init_date = 初始化日期=",exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("exch_group_no = 交易组编号 and asset_acco_no=资产账户编号 and stock_acco_no = 股东代码编号 and combo_code = 组合代码 and stock_code_no = 证券代码编号 and init_date = 初始化日期=",exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date);
                    end if;
                    leave label_pro;
                end if;


                /* if @持仓数量# = 0 then */
                if v_posi_qty = 0 then

                    /* [更新表记录][交易证券_账户_组合持仓汇总表][{持仓状态} = 《持仓状态-已平仓》][{交易组编号} = @交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][1][{交易组编号} = @交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#] */
                    set v_update_date = date_format(curdate(),'%Y%m%d');
                    set v_update_time = date_format(curtime(),'%H%i%s');
                    update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = "2" where exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.23.1";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("exch_group_no = 交易组编号 and asset_acco_no=资产账户编号 and stock_acco_no = 股东代码编号 and combo_code = 组合代码 and stock_code_no = 证券代码编号 and init_date = 初始化日期=",exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("exch_group_no = 交易组编号 and asset_acco_no=资产账户编号 and stock_acco_no = 股东代码编号 and combo_code = 组合代码 and stock_code_no = 证券代码编号 and init_date = 初始化日期=",exch_group_no = v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date);
                        end if;
                        leave label_pro;
                    end if;

                end if;
            end if;
        end if;

        /* if @订单方向# = 《订单方向-买入》  or @订单方向# = 《订单方向-融资买入》  or @订单方向# = 《订单方向-基金申购》   then */
        if v_order_dir = 1  or v_order_dir = 5  or v_order_dir = 9   then

            /* 调用【原子_交易证券_账户_更新交易组买入成本】*/
            call db_tdsecu.pra_tdseac_UpdateExgpBuyCost(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_net_price_flag,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_combo_code,
                v_combo_posi_id,
                v_order_oper_way,
                v_order_date,
                v_error_code,
                v_error_info);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.23.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新交易组买入成本出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


        /* elseif @订单方向# = 《订单方向-卖出》 or @订单方向# = 《订单方向-零股卖出》  or @订单方向# = 《订单方向-基金赎回》   or @订单方向# = 《订单方向-卖券还款》 then */
        elseif v_order_dir = 2 or v_order_dir = 31  or v_order_dir = 10   or v_order_dir = 7 then

            /* 调用【原子_交易证券_账户_更新交易组卖出成本】*/
            call db_tdsecu.pra_tdseac_UpdateExgpSaleCost(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_net_price_flag,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_cost_calc_type,
                v_exgp_cost_amt,
                v_exgp_intrst_cost_amt,
                v_exgp_curr_qty,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_combo_code,
                v_combo_posi_id,
                v_order_oper_way,
                v_error_code,
                v_error_info);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.23.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新交易组卖出成本出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* if  @订单操作方式# = 《订单操作方式-组合调仓》  or  @订单操作方式# = 《订单操作方式-组合卖出》 then */
            if  v_order_oper_way = "28"  or  v_order_oper_way = "27" then

                /* 调用【原子_交易证券_账户_更新组合卖出成本】*/
                call db_tdsecu.pra_tdseac_UpdateComboSaleCost(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_init_date,
                    v_co_no,
                    v_pd_no,
                    v_exch_group_no,
                    v_asset_acco_no,
                    v_exch_no,
                    v_stock_code,
                    v_stock_type,
                    v_order_dir,
                    v_stock_acco_no,
                    v_stock_code_no,
                    v_net_price_flag,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_strike_occur_amt,
                    v_strike_occur_qty,
                    v_cost_calc_type,
                    v_buy_ref_rate,
                    v_sell_ref_rate,
                    v_combo_code,
                    v_combo_posi_id,
                    v_order_oper_way,
                    v_error_code,
                    v_error_info);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.23.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新组合卖出成本出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if @订单方向# = 《订单方向-融资回购》 or @订单方向# = 《订单方向-融券回购》 then */
        if v_order_dir = 3 or v_order_dir = 4 then

            /* set @证券代码编号# = @临时_证券代码编号#; */
            set v_stock_code_no = v_tmp_stock_code_no;

            /* set @回购交易日期# = @成交日期#; */
            set v_repo_trade_date = v_strike_date;

            /* set @回购数量# = @成交数量#; */
            set v_repo_qty = v_strike_qty;

            /* set @回购购回金额# = (@票面面值# * @成交数量#); */
            set v_repo_back_amt = (v_par_value * v_strike_qty);

            /* set @回购金额# =@回购购回金额#; */
            set v_repo_amt =v_repo_back_amt;

            /* set @回购利率# = @成交价格#; */
            set v_repo_rate = v_strike_price;
            #set @回购天数# = @计息天数#;
            #以下字段有问题,要考虑怎么算

            /* set @回购购回利息#=Round(@回购金额#*@回购利率#*@回购实际天数#/36500,2); */
            set v_repo_back_intrst=Round(v_repo_amt*v_repo_rate*v_repo_cale_days/36500,2);

            /* if @成交数量# > 0 then */
            if v_strike_qty > 0 then

                /* 调用【原子_交易证券_账户_债券回购成交处理】*/
                call db_tdsecu.pra_tdseac_DealStrikeBondRepo(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_init_date,
                    v_co_no,
                    v_pd_no,
                    v_exch_group_no,
                    v_asset_acco_no,
                    v_crncy_type,
                    v_exch_crncy_type,
                    v_exch_rate,
                    v_comm_id,
                    v_exch_no,
                    v_stock_acco_no,
                    v_stock_code_no,
                    v_stock_type,
                    v_order_dir,
                    v_repo_qty,
                    v_repo_amt,
                    v_repo_rate,
                    v_repo_trade_date,
                    v_repo_order_id,
                    v_repo_strike_id,
                    v_repo_days,
                    v_repo_cale_days,
                    v_repo_back_date,
                    v_repo_back_amt,
                    v_repo_back_intrst,
                    v_trade_code_no,
                    v_target_code_no,
                    v_capit_reback_days,
                    v_posi_reback_days,
                    v_error_code,
                    v_error_info);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.23.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_债券回购成交处理出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            else

                /* 调用【原子_交易证券_账户_债券回购成交回溯处理】*/
                call db_tdsecu.pra_tdseac_BackDealStrikeBondRepo(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_init_date,
                    v_co_no,
                    v_pd_no,
                    v_exch_group_no,
                    v_asset_acco_no,
                    v_exch_no,
                    v_stock_acco_no,
                    v_stock_code_no,
                    v_stock_type,
                    v_order_dir,
                    v_repo_trade_date,
                    v_repo_order_id,
                    v_repo_strike_id,
                    v_trade_code_no,
                    v_target_code_no,
                    v_error_code,
                    v_error_info);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.23.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_债券回购成交回溯处理出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    #记录流水

    /* set @订单成交序号# = @成交序号#; */
    set v_order_strike_id = v_strike_id;

    /* set @备注信息# = "成交"; */
    set v_remark_info = "成交";

    /* set @指令变动金额# = 0; */
    set v_comm_occur_amt = 0;

    /* set @指令变动数量# = 0; */
    set v_comm_occur_qty = 0;

    /* 调用【原子_交易证券_账户_增加资产账户业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddAsacBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.23.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加资产账户业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_账户_增加交易组业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddExgpBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.23.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加交易组业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_open_posi_date = v_open_posi_date;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新指令交易资金持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateApprExchCashPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateApprExchCashPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_comm_id bigint,
    IN p_order_id bigint,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_order_dir int,
    IN p_impawn_ratio decimal(18,12),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_trade_code_no int,
    IN p_target_code_no int,
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_is_record_jour int,
    IN p_order_oper_way varchar(2),
    IN p_busi_opor_no int,
    IN p_open_close_permission int,
    IN p_avail_cal_flag int,
    IN p_combo_code varchar(32),
    IN p_combo_posi_id bigint,
    IN p_target_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_open_posi_date int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_comm_id bigint;
    declare v_order_id bigint;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_order_dir int;
    declare v_impawn_ratio decimal(18,12);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_is_record_jour int;
    declare v_order_oper_way varchar(2);
    declare v_busi_opor_no int;
    declare v_open_close_permission int;
    declare v_avail_cal_flag int;
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_target_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_open_posi_date int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_pre_settle_qty decimal(18,2);
    declare v_posi_qty decimal(18,2);
    declare v_posi_status varchar(2);
    declare v_order_strike_id bigint;
    declare v_remark_info varchar(255);
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_total_realize_pandl decimal(18,4);
    declare v_total_open_posi_fee decimal(18,4);
    declare v_total_close_posi_fee decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_comm_id = p_comm_id;
    SET v_order_id = p_order_id;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_order_dir = p_order_dir;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_is_record_jour = p_is_record_jour;
    SET v_order_oper_way = p_order_oper_way;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_open_close_permission = p_open_close_permission;
    SET v_avail_cal_flag = p_avail_cal_flag;
    SET v_combo_code = p_combo_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_target_stock_code_no = p_target_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_pre_settle_qty = 0;
    SET v_posi_qty = 0;
    SET v_posi_status = "0";
    SET v_order_strike_id = 0;
    SET v_remark_info = " ";
    SET v_strike_occur_amt = 0;
    SET v_strike_occur_qty = 0;
    SET v_total_realize_pandl = 0;
    SET v_total_open_posi_fee = 0;
    SET v_total_close_posi_fee = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* set @期初金额#=0; */
    set v_begin_amt=0;

    /* set @当前金额#=0; */
    set v_curr_amt=0;

    /* set @冻结金额#=0; */
    set v_frozen_amt=0;

    /* set @解冻金额#=0; */
    set v_unfroz_amt=0;

    /* set @指令冻结金额#=0; */
    set v_comm_frozen_amt=0;

    /* set @指令解冻金额#=0; */
    set v_comm_unfroz_amt=0;

    /* set @交易冻结金额#=0; */
    set v_trade_frozen_amt=0;

    /* set @交易解冻金额#=0; */
    set v_trade_unfroz_amt=0;

    /* set @交易占用金额#=0; */
    set v_trade_capt_amt=0;

    /* set @交易释放金额#=0; */
    set v_trade_releas_amt=0;

    /* set @成交占用金额#=0; */
    set v_strike_capt_amt=0;

    /* set @成交释放金额#=0; */
    set v_strike_releas_amt=0;

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @当前数量#=0; */
    set v_curr_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @交易占用数量#=0; */
    set v_trade_capt_qty=0;

    /* set @交易释放数量#=0; */
    set v_trade_releas_qty=0;

    /* set @成交占用数量#=0; */
    set v_strike_capt_qty=0;

    /* set @成交释放数量#=0; */
    set v_strike_releas_qty=0;

    /* set @指令占用数量# = 0; */
    set v_comm_capt_qty = 0;

    /* set @指令释放数量# = 0; */
    set v_comm_releas_qty = 0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;

    /* if @订单方向# = 《订单方向-质押提交》 then */
    if v_order_dir = 21 then

        /* set @证券代码编号# = @交易代码编号#; */
        set v_stock_code_no = v_trade_code_no;

        /* set @指令冻结数量#= @指令变动数量#; */
        set v_comm_frozen_qty= v_comm_occur_qty;

        /* set @交易冻结数量#= @交易变动数量#; */
        set v_trade_frozen_qty= v_trade_occur_qty;
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;


        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @指令冻结数量#=0; */
        set v_comm_frozen_qty=0;

        /* set @交易冻结数量#=0; */
        set v_trade_frozen_qty=0;

        /* set @指令解冻数量#= @指令变动数量# * @质押比例#; */
        set v_comm_unfroz_qty= v_comm_occur_qty * v_impawn_ratio;

        /* set @交易解冻数量#= @交易变动数量# * @质押比例#; */
        set v_trade_unfroz_qty= v_trade_occur_qty * v_impawn_ratio;
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-质押转回》 then */
    elseif v_order_dir = 22 then

      /* set @证券代码编号# = @交易代码编号#; */
      set v_stock_code_no = v_trade_code_no;

      /* set @指令解冻数量#= @指令变动数量#; */
      set v_comm_unfroz_qty= v_comm_occur_qty;

      /* set @交易解冻数量#= @交易变动数量#; */
      set v_trade_unfroz_qty= v_trade_occur_qty;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.24.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令解冻数量}={指令解冻数量}+@指令解冻数量#,{交易解冻数量}={交易解冻数量}+@交易解冻数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_unfroz_qty=comm_unfroz_qty+v_comm_unfroz_qty,trade_unfroz_qty=trade_unfroz_qty+v_trade_unfroz_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.24.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;


      /* set @证券代码编号# = @标的代码编号#; */
      set v_stock_code_no = v_target_code_no;

      /* set @指令解冻数量#=0; */
      set v_comm_unfroz_qty=0;

      /* set @交易解冻数量#=0; */
      set v_trade_unfroz_qty=0;

      /* set @指令冻结数量#= @指令变动数量# * @质押比例#; */
      set v_comm_frozen_qty= v_comm_occur_qty * v_impawn_ratio;

      /* set @交易冻结数量#= @交易变动数量# * @质押比例#; */
      set v_trade_frozen_qty= v_trade_occur_qty * v_impawn_ratio;
      #修改资产账户业务持仓

      /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
          stock_type, asset_type, begin_qty, curr_qty, 
          frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
          comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
          trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
          strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
          intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
          v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
          v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
          v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
          v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
          v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
          v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.24.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

      #修改交易组业务持仓

      /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令冻结数量}={指令冻结数量}+@指令冻结数量#,{交易冻结数量}={交易冻结数量}+@交易冻结数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
          create_date, create_time, update_date, 
          update_time, update_times, co_no, pd_no, 
          exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
          stock_code_no, stock_type, asset_type, begin_qty, 
          curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
          comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
          trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
          strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
          cost_amt, intrst_cost_amt, intrst_pandl) 
      values(
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_co_no, v_pd_no, 
          v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
          v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
          v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
          v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
          v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
          v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
          v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
      ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_frozen_qty=comm_frozen_qty+v_comm_frozen_qty,trade_frozen_qty=trade_frozen_qty+v_trade_frozen_qty;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.24.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;


    /* elseif @订单方向# = 《订单方向-基金转换》 then */
    elseif v_order_dir = 12 then

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

        /* set @交易占用数量# = @交易变动数量#; */
        set v_trade_capt_qty = v_trade_occur_qty;
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;


        /* set @证券代码编号# = @目标证券代码编号#; */
        set v_stock_code_no = v_target_stock_code_no;

        /* set @指令释放数量#= @指令占用数量#; */
        set v_comm_releas_qty= v_comm_capt_qty;

        /* set @交易释放数量#= @交易占用数量#; */
        set v_trade_releas_qty= v_trade_capt_qty;

        /* set @指令占用数量# = 0; */
        set v_comm_capt_qty = 0;

        /* set @交易占用数量# = 0; */
        set v_trade_capt_qty = 0;
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

    else

      /* if @订单方向# = 《订单方向-买入》   or @订单方向# = 《订单方向-基金申购》   then */
      if v_order_dir = 1   or v_order_dir = 9   then

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @交易占用金额# = @交易变动金额#; */
        set v_trade_capt_amt = v_trade_occur_amt;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;

        /* set @交易释放数量# = @交易变动数量#; */
        set v_trade_releas_qty = v_trade_occur_qty;

      /* elseif @订单方向# = 《订单方向-融资买入》  then */
      elseif v_order_dir = 5  then

        /* set @指令占用金额# =0; */
        set v_comm_capt_amt =0;

        /* set @交易占用金额# = 0; */
        set v_trade_capt_amt = 0;

        /* set @交易变动金额# = 0; */
        set v_trade_occur_amt = 0;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;

        /* set @交易释放数量# = @交易变动数量#; */
        set v_trade_releas_qty = v_trade_occur_qty;

      /* elseif @订单方向# = 《订单方向-卖出》 or @订单方向# = 《订单方向-零股卖出》 or @订单方向# = 《订单方向-基金赎回》 or @订单方向# = 《订单方向-卖券还款》  then */
      elseif v_order_dir = 2 or v_order_dir = 31 or v_order_dir = 10 or v_order_dir = 7  then

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @交易释放金额# = @交易变动金额#; */
        set v_trade_releas_amt = v_trade_occur_amt;

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

        /* set @交易占用数量# = @交易变动数量#; */
        set v_trade_capt_qty = v_trade_occur_qty;

      /* elseif @订单方向# = 《订单方向-融券卖出》  then */
      elseif v_order_dir = 6  then

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @交易释放金额# = @交易变动金额#; */
        set v_trade_releas_amt = v_trade_occur_amt;

        /* set @指令占用数量# = 0; */
        set v_comm_capt_qty = 0;

        /* set @交易占用数量# = 0; */
        set v_trade_capt_qty = 0;

      /* elseif @订单方向# = 《订单方向-买券还券》  or @订单方向# = 《订单方向-直接还款》 then */
      elseif v_order_dir = 8  or v_order_dir = 14 then

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @交易占用金额# = @交易变动金额#; */
        set v_trade_capt_amt = v_trade_occur_amt;

        /* set @指令释放数量# = 0; */
        set v_comm_releas_qty = 0;

        /* set @交易释放数量# = 0; */
        set v_trade_releas_qty = 0;

      /* elseif @订单方向# = 《订单方向-直接还券》  then */
      elseif v_order_dir = 15  then

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

        /* set @交易占用数量# = @交易变动数量#; */
        set v_trade_capt_qty = v_trade_occur_qty;

        /* set @指令释放金额# = 0; */
        set v_comm_releas_amt = 0;

        /* set @交易释放金额# = 0; */
        set v_trade_releas_amt = 0;

      /* elseif @订单方向# = 《订单方向-融资回购》 then */
      elseif v_order_dir = 3 then

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @指令释放金额# = @指令变动金额#; */
        set v_comm_releas_amt = v_comm_occur_amt;

        /* set @交易释放金额# = @交易变动金额#; */
        set v_trade_releas_amt = v_trade_occur_amt;

        /* set @指令占用数量# = @指令变动数量#; */
        set v_comm_capt_qty = v_comm_occur_qty;

        /* set @交易占用数量# = @交易变动数量#; */
        set v_trade_capt_qty = v_trade_occur_qty;

      /* elseif @订单方向# = 《订单方向-融券回购》 then */
      elseif v_order_dir = 4 then
        #逆回购持仓记录的是标准券的持仓,证券类型为27,这边直接手动更改

        /* set @证券类型#=27; */
        set v_stock_type=27;

        /* set @证券代码编号# = @标的代码编号#; */
        set v_stock_code_no = v_target_code_no;

        /* set @指令占用金额# = @指令变动金额#; */
        set v_comm_capt_amt = v_comm_occur_amt;

        /* set @交易占用金额# = @交易变动金额#; */
        set v_trade_capt_amt = v_trade_occur_amt;

        /* set @指令释放数量# = @指令变动数量#; */
        set v_comm_releas_qty = v_comm_occur_qty;

        /* set @交易释放数量# = @交易变动数量#; */
        set v_trade_releas_qty = v_trade_occur_qty;
      end if;

      /* if @指令占用金额# <>0 or @指令释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
      if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
        #修改资产账户业务资金

        /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{指令释放金额}={指令释放金额}+@指令释放金额#,{交易释放金额}={交易释放金额}+@交易释放金额#,{指令占用金额}={指令占用金额}+@指令占用金额#,{交易占用金额}={交易占用金额}+@交易占用金额#][1][@资产账户编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
            frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
            comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
            trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
            v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
            v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
            v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_amt=comm_releas_amt+v_comm_releas_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt,comm_capt_amt=comm_capt_amt+v_comm_capt_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用数量# <>0 or @指令释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 then */
      if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 then
        #修改资产账户业务持仓

        /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
            stock_type, asset_type, begin_qty, curr_qty, 
            frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
            comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
            v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
            v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
            v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
            v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
            v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
            v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用金额# <>0 or @指令释放金额# <>0 or @交易占用金额# <>0 or @交易释放金额# <>0 then */
      if v_comm_capt_amt <>0 or v_comm_releas_amt <>0 or v_trade_capt_amt <>0 or v_trade_releas_amt <>0 then
        #修改交易组业务资金

        /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{指令释放金额}={指令释放金额}+@指令释放金额#,{交易释放金额}={交易释放金额}+@交易释放金额#,{指令占用金额}={指令占用金额}+@指令占用金额#,{交易占用金额}={交易占用金额}+@交易占用金额#][1][@交易组编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
            curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
            comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
            trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
            strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
            v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
            v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
            v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
            v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_releas_amt=comm_releas_amt+v_comm_releas_amt,trade_releas_amt=trade_releas_amt+v_trade_releas_amt,comm_capt_amt=comm_capt_amt+v_comm_capt_amt,trade_capt_amt=trade_capt_amt+v_trade_capt_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;

      end if;

      /* if @指令占用数量# <>0 or @指令释放数量# <>0 or @交易占用数量# <>0 or @交易释放数量# <>0 then */
      if v_comm_capt_qty <>0 or v_comm_releas_qty <>0 or v_trade_capt_qty <>0 or v_trade_releas_qty <>0 then
        #修改交易组业务持仓

        /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{指令占用数量}={指令占用数量}+@指令占用数量#,{交易占用数量}={交易占用数量}+@交易占用数量#,{指令释放数量}={指令释放数量}+@指令释放数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, begin_qty, 
            curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
            comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
            v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
            v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
            v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
            v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
            v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_capt_qty=comm_capt_qty+v_comm_capt_qty,trade_capt_qty=trade_capt_qty+v_trade_capt_qty,comm_releas_qty=comm_releas_qty+v_comm_releas_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.24.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;


        /* if @订单操作方式# = 《订单操作方式-组合买入》  then */
        if v_order_oper_way = "26"  then

            /* set @开仓日期# = @初始化日期#; */
            set v_open_posi_date = v_init_date;

            /* set @待交收数量# = 0; */
            set v_pre_settle_qty = 0;

            /* set @持仓数量# =0; */
            set v_posi_qty =0;

            /* set @持仓状态# = 《持仓状态-已平仓》; */
            set v_posi_status = "2";

            /* [插入重复更新][交易证券_账户_组合持仓表][字段][字段变量][{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][2][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_comboposi (
                create_date, create_time, update_date, 
                update_time, update_times, init_date, co_no, 
                pd_no, exch_group_no, asset_acco_no, stock_acco_no, 
                combo_code, stock_code, exch_no, stock_code_no, 
                open_posi_date, posi_qty, curr_qty, frozen_qty, 
                unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
                trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
                strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
                intrst_cost_amt, intrst_pandl, posi_status) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_init_date, v_co_no, 
                v_pd_no, v_exch_group_no, v_asset_acco_no, v_stock_acco_no, 
                v_combo_code, v_stock_code, v_exch_no, v_stock_code_no, 
                v_open_posi_date, v_posi_qty, v_curr_qty, v_frozen_qty, 
                v_unfroz_qty, v_pre_settle_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
                v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
                v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
                v_intrst_cost_amt, v_intrst_pandl, v_posi_status) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.24.2";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_组合持仓汇总表][字段][字段变量][{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][3][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_comboposisum (
                create_date, create_time, update_date, 
                update_time, update_times, init_date, co_no, 
                pd_no, exch_group_no, asset_acco_no, stock_acco_no, 
                combo_code, stock_code, exch_no, stock_code_no, 
                posi_qty, curr_qty, frozen_qty, unfroz_qty, 
                pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, 
                trade_releas_qty, strike_capt_qty, strike_releas_qty, strike_frozen_qty, 
                strike_unfroz_qty, realize_pandl, cost_amt, intrst_cost_amt, 
                intrst_pandl, posi_status) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_init_date, v_co_no, 
                v_pd_no, v_exch_group_no, v_asset_acco_no, v_stock_acco_no, 
                v_combo_code, v_stock_code, v_exch_no, v_stock_code_no, 
                v_posi_qty, v_curr_qty, v_frozen_qty, v_unfroz_qty, 
                v_pre_settle_qty, v_trade_frozen_qty, v_trade_unfroz_qty, v_trade_capt_qty, 
                v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, v_strike_frozen_qty, 
                v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, v_intrst_cost_amt, 
                v_intrst_pandl, v_posi_status) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.24.3";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
                end if;
                leave label_pro;
            end if;


        /* elseif  @订单操作方式# = 《订单操作方式-组合调仓》 or  @订单操作方式# = 《订单操作方式-组合卖出》 then */
        elseif  v_order_oper_way = "28" or  v_order_oper_way = "27" then

            /* [更新表记录][交易证券_账户_组合持仓表][{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][{记录序号} = @组合持仓序号#][4][@组合持仓序号#] */
            set v_update_date = date_format(curdate(),'%Y%m%d');
            set v_update_time = date_format(curtime(),'%H%i%s');
            update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty where row_id = v_combo_posi_id;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.24.4";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                else
                    SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                end if;
                leave label_pro;
            end if;


            /* [获取表记录变量][交易证券_账户_组合持仓表][{开仓日期}][@开仓日期#][{记录序号}=@组合持仓序号#][1][@组合持仓序号#] */
            select open_posi_date into v_open_posi_date from db_tdsecu.tb_tdseac_comboposi where row_id=v_combo_posi_id limit 1;
            if FOUND_ROWS() = 0 then
                        
                SET v_error_code = "tdsecuA.2.24.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
                else
                    SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
                end if;
                leave label_pro;
            end if;


            /* [更新表记录][交易证券_账户_组合持仓汇总表][{交易占用数量}={交易占用数量}+@交易占用数量#,{交易释放数量}={交易释放数量}+@交易释放数量#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and {初始化日期} = @初始化日期#][5][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
            set v_update_date = date_format(curdate(),'%Y%m%d');
            set v_update_time = date_format(curtime(),'%H%i%s');
            update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, trade_capt_qty=trade_capt_qty+v_trade_capt_qty,trade_releas_qty=trade_releas_qty+v_trade_releas_qty where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and init_date = v_init_date;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.24.5";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
                end if;
                leave label_pro;
            end if;

        end if;
      end if;
    end if;
    #记录流水

    /* set @订单成交序号# = @订单序号#; */
    set v_order_strike_id = v_order_id;

    /* set @备注信息# = "订单"; */
    set v_remark_info = "订单";

    /* if @交易变动金额# = 0 and @交易变动数量# = 0 and (@指令变动金额#>0 or @指令变动数量# >0) then */
    if v_trade_occur_amt = 0 and v_trade_occur_qty = 0 and (v_comm_occur_amt>0 or v_comm_occur_qty >0) then

        /* set @备注信息# = "指令"; */
        set v_remark_info = "指令";
    end if;

    /* if @功能编码# = "tdsecuL.10.74"  then */
    if v_func_code = "tdsecuL.10.74"  then

       /* set @备注信息# = "撤单回退"; */
       set v_remark_info = "撤单回退";

    /* elseif @功能编码# = "tdsecuL.5.11" or @功能编码# = "tdsecuL.4.12"   then */
    elseif v_func_code = "tdsecuL.5.11" or v_func_code = "tdsecuL.4.12"   then

       /* set @备注信息# = "撤单"; */
       set v_remark_info = "撤单";

    /* elseif @功能编码# = "tdsecuL.5.41"  then */
    elseif v_func_code = "tdsecuL.5.41"  then

       /* set @备注信息# = "错单修改"; */
       set v_remark_info = "错单修改";

    /* elseif @功能编码# = "tdsecuL.10.75"  then */
    elseif v_func_code = "tdsecuL.10.75"  then

       /* set @备注信息# = "废单回退"; */
       set v_remark_info = "废单回退";
    end if;

    /* set @成交变动金额# = 0; */
    set v_strike_occur_amt = 0;

    /* set @成交变动数量# = 0; */
    set v_strike_occur_qty = 0;

    /* 调用【原子_交易证券_账户_增加资产账户业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddAsacBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.24.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加资产账户业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_账户_增加交易组业务资金持仓变动流水】*/
    call db_tdsecu.pra_tdseac_AddExgpBusiCapitPosiJour(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_comm_id,
        v_order_strike_id,
        v_order_dir,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_trade_occur_amt,
        v_trade_occur_qty,
        v_strike_occur_amt,
        v_strike_occur_qty,
        v_remark_info,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.24.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_增加交易组业务资金持仓变动流水出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @总实现盈亏# = 0; */
    set v_total_realize_pandl = 0;

    /* set @总开仓费用# = 0; */
    set v_total_open_posi_fee = 0;

    /* set @总平仓费用# = 0; */
    set v_total_close_posi_fee = 0;

    /* if @订单操作方式# = 《订单操作方式-增强交易》 or @订单操作方式# = 《订单操作方式-增强交易平仓》 then */
    if v_order_oper_way = "14" or v_order_oper_way = "51" then

        /* 调用【原子_交易证券_T0_操作员开平仓权限判断】*/
        call db_tdsecu.pra_tdset0_OpenClosePermissionCheck(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_busi_opor_no,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_stock_code_no,
            v_stock_acco_no,
            v_exch_no,
            v_trade_occur_qty,
            v_order_dir,
            v_open_close_permission,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.24.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_T0_操作员开平仓权限判断出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @成交变动数量# = 0; */
        set v_strike_occur_qty = 0;

        /* 调用【原子_交易证券_T0_操作员券源限额设置持仓资金变化】*/
        call db_tdsecu.pra_tdset0_OporStockLimitPosiCapitalChange(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_stock_acco_no,
            v_stock_code,
            v_exch_no,
            v_stock_type,
            v_order_dir,
            v_stock_code_no,
            v_trade_occur_qty,
            v_strike_occur_qty,
            v_total_realize_pandl,
            v_total_open_posi_fee,
            v_total_close_posi_fee,
            v_busi_opor_no,
            v_trade_occur_amt,
            v_strike_occur_amt,
            v_order_oper_way,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.24.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_T0_操作员券源限额设置持仓资金变化出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

        #下单时判断可用。 可用校验移至 下单事务中。
        #if @可用计算标志# = 1 then
            #资金持仓变化完后，再判断可用，防止多并发
        #    [原子_交易证券_T0_计算T0券源持仓资金可用]
        #end if;

    /* elseif @订单操作方式# = 《订单操作方式-手工补单》 or @订单操作方式# = 《订单操作方式-报盘机补单》 then */
    elseif v_order_oper_way = "31" or v_order_oper_way = "33" then

        /* set @成交变动数量# = 0; */
        set v_strike_occur_qty = 0;

        /* 调用【原子_交易证券_T0_体外交易操作员券源限额设置持仓变化】*/
        call db_tdsecu.pra_tdset0_OutOporStockLimitPosiChange(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_stock_acco_no,
            v_asset_acco_no,
            v_exch_no,
            v_stock_type,
            v_order_dir,
            v_stock_code,
            v_stock_code_no,
            v_trade_occur_qty,
            v_strike_occur_qty,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.24.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_T0_体外交易操作员券源限额设置持仓变化出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_open_posi_date = v_open_posi_date;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新交易组买入成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateExgpBuyCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateExgpBuyCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_combo_code varchar(32),
    IN p_combo_posi_id bigint,
    IN p_order_oper_way varchar(2),
    IN p_order_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_order_oper_way varchar(2);
    declare v_order_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;
    declare v_open_posi_date int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_combo_code = p_combo_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_order_oper_way = p_order_oper_way;
    SET v_order_date = p_order_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_intrst_cost_amt = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* if @证券类型# > 20 and @证券类型# < 50 then */
    if v_stock_type > 20 and v_stock_type < 50 then

        /* if @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
        if v_net_price_flag = 1 and v_bond_rate_type <> 3 then

            /* SET @利息成本金额# = Round((@债券计提利息# * @成交变动数量#),2); */
            SET v_intrst_cost_amt = Round((v_bond_accr_intrst * v_strike_occur_qty),2);
        end if;
    end if;

    /* SET @成交变动金额# = @成交变动金额# - @利息成本金额#; */
    SET v_strike_occur_amt = v_strike_occur_amt - v_intrst_cost_amt;

    /* if @市场编号#=《市场编号-沪港通证券交易所》 or @市场编号# = 《市场编号-深港通证券交易所》 then */
    if v_exch_no=3 or v_exch_no = 4 then

        /* SET @利息成本金额# = Round((@利息成本金额# * @卖出参考汇率#),2); */
        SET v_intrst_cost_amt = Round((v_intrst_cost_amt * v_sell_ref_rate),2);

        /* SET @成交变动金额# = Round((@成交变动金额# * @卖出参考汇率#),2); */
        SET v_strike_occur_amt = Round((v_strike_occur_amt * v_sell_ref_rate),2);
    end if;

    /* [更新表记录][交易证券_账户_交易组业务持仓表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_exgp_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.25.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;


    /* if @订单操作方式# = 《订单操作方式-组合买入》  then */
    if v_order_oper_way = "26"  then

        /* set @开仓日期# = @订单日期#; */
        set v_open_posi_date = v_order_date;

        /* [更新表记录][交易证券_账户_组合持仓表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{交易组编号} = @交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号# and {开仓日期} = @开仓日期# and {组合代码} = @组合代码#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#,@组合代码#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where exch_group_no = v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no and open_posi_date = v_open_posi_date and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益表][{组合成本}={组合成本}+@成交变动金额#+@利息成本金额#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} = @开仓日期#][1][@交易组编号#,@组合代码#,@开仓日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost+v_strike_occur_amt+v_intrst_cost_amt where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date = v_open_posi_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合持仓汇总表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{交易组编号} = @交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号# and {组合代码} = @组合代码#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#,@组合代码#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where exch_group_no = v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合成本}={组合成本}+@成交变动金额#+@利息成本金额#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][1][@交易组编号#,@组合代码#,@初始化日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost+v_strike_occur_amt+v_intrst_cost_amt where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date);
            end if;
            leave label_pro;
        end if;


    /* elseif @订单操作方式# = 《订单操作方式-组合调仓》  then */
    elseif v_order_oper_way = "28"  then

        /* [更新表记录][交易证券_账户_组合持仓表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{记录序号} = @组合持仓序号#][1][@组合持仓序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where row_id = v_combo_posi_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
            end if;
            leave label_pro;
        end if;


        /* [获取表记录变量语句][交易证券_账户_组合持仓表][{开仓日期}][@开仓日期#][{记录序号} = @组合持仓序号#] */
        select open_posi_date into v_open_posi_date from db_tdsecu.tb_tdseac_comboposi where row_id = v_combo_posi_id limit 1;


        /* [更新表记录][交易证券_账户_组合收益表][{组合成本}={组合成本}+@成交变动金额#+@利息成本金额#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} = @开仓日期#][1][@交易组编号#,@组合代码#,@开仓日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost+v_strike_occur_amt+v_intrst_cost_amt where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date = v_open_posi_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合持仓汇总表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{交易组编号} = @交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号# and {组合代码} = @组合代码#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#,@组合代码#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where exch_group_no = v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合成本}={组合成本}+@成交变动金额#+@利息成本金额#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][1][@交易组编号#,@组合代码#,@成交变动金额#,@利息成本金额#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost+v_strike_occur_amt+v_intrst_cost_amt where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.25.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","成交变动金额=",v_strike_occur_amt,",","利息成本金额=",v_intrst_cost_amt),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","成交变动金额=",v_strike_occur_amt,",","利息成本金额=",v_intrst_cost_amt);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新交易组卖出成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateExgpSaleCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateExgpSaleCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_cost_calc_type int,
    IN p_exgp_cost_amt decimal(18,4),
    IN p_exgp_intrst_cost_amt decimal(18,4),
    IN p_exgp_curr_qty decimal(18,2),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_combo_code varchar(32),
    IN p_combo_posi_id bigint,
    IN p_order_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_cost_calc_type int;
    declare v_exgp_cost_amt decimal(18,4);
    declare v_exgp_intrst_cost_amt decimal(18,4);
    declare v_exgp_curr_qty decimal(18,2);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_order_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_posi_qty decimal(18,2);
    declare v_curr_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_cost_calc_type = p_cost_calc_type;
    SET v_exgp_cost_amt = p_exgp_cost_amt;
    SET v_exgp_intrst_cost_amt = p_exgp_intrst_cost_amt;
    SET v_exgp_curr_qty = p_exgp_curr_qty;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_combo_code = p_combo_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_order_oper_way = p_order_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_posi_qty = 0;
    SET v_curr_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_realize_pandl = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_账户_交易组业务持仓表][{成本金额},{利息成本金额},{成交占用数量},{成交释放数量}][@成本金额#, @利息成本金额#,@成交占用数量#,@成交释放数量#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    select cost_amt,intrst_cost_amt,strike_capt_qty,strike_releas_qty into v_cost_amt, v_intrst_cost_amt,v_strike_capt_qty,v_strike_releas_qty from db_tdsecu.tb_tdseac_exgp_busi_posi where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.26.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;


    /* SET @持仓数量#=@交易组当前数量#-@成交占用数量#+@成交释放数量# + @成交变动数量#; */
    SET v_posi_qty=v_exgp_curr_qty-v_strike_capt_qty+v_strike_releas_qty + v_strike_occur_qty;

    /* SET @成本金额#=@交易组成本金额#+@成本金额#; */
    SET v_cost_amt=v_exgp_cost_amt+v_cost_amt;

    /* SET @利息成本金额#=@交易组利息成本金额#+@利息成本金额#; */
    SET v_intrst_cost_amt=v_exgp_intrst_cost_amt+v_intrst_cost_amt;

    /* if @持仓数量#=0 then */
    if v_posi_qty=0 then

      /* set @当前成本金额#=0; */
      set v_curr_cost_amt=0;
    else

      /* SET @当前成本金额#=Round(@成本金额#*@成交变动数量#/@持仓数量#,2); */
      SET v_curr_cost_amt=Round(v_cost_amt*v_strike_occur_qty/v_posi_qty,2);
    end if;

    /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
    if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

        /* SET @利息收益# = Round((@债券计提利息# * @成交变动数量#),2); */
        SET v_intrst_pandl = Round((v_bond_accr_intrst * v_strike_occur_qty),2);

        /* SET @利息成本金额#=Round(ifnull(@利息成本金额#*@成交变动数量#/@持仓数量#,0),2); */
        SET v_intrst_cost_amt=Round(ifnull(v_intrst_cost_amt*v_strike_occur_qty/v_posi_qty,0),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@债券计提利息# * @成交变动数量#),2); */
            SET v_intrst_cost_amt=Round((v_bond_accr_intrst * v_strike_occur_qty),2);
        end if;
    else

        /* SET @利息收益# = 0; */
        SET v_intrst_pandl = 0;

        /* SET @利息成本金额#=0; */
        SET v_intrst_cost_amt=0;
    end if;

    /* if @市场编号#=《市场编号-沪港通证券交易所》 or @市场编号# = 《市场编号-深港通证券交易所》 then */
    if v_exch_no=3 or v_exch_no = 4 then

        /* SET @利息收益# = Round((@利息收益# * @买入参考汇率#),2); */
        SET v_intrst_pandl = Round((v_intrst_pandl * v_buy_ref_rate),2);

        /* SET @成交变动金额# = Round((@成交变动金额# * @买入参考汇率#),2); */
        SET v_strike_occur_amt = Round((v_strike_occur_amt * v_buy_ref_rate),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@利息成本金额# * @买入参考汇率#),2); */
            SET v_intrst_cost_amt=Round((v_intrst_cost_amt * v_buy_ref_rate),2);
        end if;
    end if;

    /* if @成本计算方式#=《成本计算方式-盈亏不冲减成本》 then */
    if v_cost_calc_type=2 then

        /* SET @实现盈亏#=round(@成交变动金额# - @利息收益# - @当前成本金额#,2); */
        SET v_realize_pandl=round(v_strike_occur_amt - v_intrst_pandl - v_curr_cost_amt,2);

        /* SET @利息收益#=round(@利息收益# - @利息成本金额#,2); */
        SET v_intrst_pandl=round(v_intrst_pandl - v_intrst_cost_amt,2);

        /* SET @当前成本金额#=Round(@当前成本金额#,2); */
        SET v_curr_cost_amt=Round(v_curr_cost_amt,2);

        /* SET @利息成本金额#=Round(@利息成本金额#,2); */
        SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

        /* [更新表记录][交易证券_账户_交易组业务持仓表][{成本金额}={成本金额}-@当前成本金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_exgp_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_curr_cost_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.26.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

    else
        #set @实现盈亏#=round(@成交变动金额# - @利息收益#  - @当前成本金额#,2);

        /* set @实现盈亏#=0; */
        set v_realize_pandl=0;

        /* set @成交变动金额#=round(@成交变动金额#-@利息收益#,2); */
        set v_strike_occur_amt=round(v_strike_occur_amt-v_intrst_pandl,2);
        #SET @利息收益#=round(@利息收益# - @利息成本金额#,2);

        /* SET @利息收益#=0; */
        SET v_intrst_pandl=0;

        /* SET @利息成本金额#=Round(@利息成本金额#,2); */
        SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

        /* [更新表记录][交易证券_账户_交易组业务持仓表][{成本金额}={成本金额}-@成交变动金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_exgp_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.26.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新资产账户买入成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateAsacBuyCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateAsacBuyCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_order_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_order_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_order_oper_way = p_order_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_intrst_cost_amt = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* if @证券类型# > 20 and @证券类型# < 50 then */
    if v_stock_type > 20 and v_stock_type < 50 then

        /* if @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
        if v_net_price_flag = 1 and v_bond_rate_type <> 3 then

            /* SET @利息成本金额# = Round((@债券计提利息# * @成交变动数量#),2); */
            SET v_intrst_cost_amt = Round((v_bond_accr_intrst * v_strike_occur_qty),2);
        end if;
    end if;

    /* SET @成交变动金额# = @成交变动金额# - @利息成本金额#; */
    SET v_strike_occur_amt = v_strike_occur_amt - v_intrst_cost_amt;

    /* if @市场编号#=《市场编号-沪港通证券交易所》 or @市场编号# = 《市场编号-深港通证券交易所》 then */
    if v_exch_no=3 or v_exch_no = 4 then

        /* SET @利息成本金额# = Round((@利息成本金额# * @卖出参考汇率#),2); */
        SET v_intrst_cost_amt = Round((v_intrst_cost_amt * v_sell_ref_rate),2);

        /* SET @成交变动金额# = Round((@成交变动金额# * @卖出参考汇率#),2); */
        SET v_strike_occur_amt = Round((v_strike_occur_amt * v_sell_ref_rate),2);
    end if;

    /* [更新表记录][交易证券_账户_资产账户业务持仓表][{成本金额}={成本金额}+@成交变动金额#,{利息成本金额}={利息成本金额}+@利息成本金额#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_asac_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt+v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt+v_intrst_cost_amt where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.27.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新资产账户卖出成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateAsacSaleCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateAsacSaleCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_cost_calc_type int,
    IN p_asac_cost_amt decimal(18,4),
    IN p_asac_intrst_cost_amt decimal(18,4),
    IN p_asac_curr_qty decimal(18,2),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_cost_calc_type int;
    declare v_asac_cost_amt decimal(18,4);
    declare v_asac_intrst_cost_amt decimal(18,4);
    declare v_asac_curr_qty decimal(18,2);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_posi_qty decimal(18,2);
    declare v_curr_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_cost_calc_type = p_cost_calc_type;
    SET v_asac_cost_amt = p_asac_cost_amt;
    SET v_asac_intrst_cost_amt = p_asac_intrst_cost_amt;
    SET v_asac_curr_qty = p_asac_curr_qty;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_posi_qty = 0;
    SET v_curr_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_realize_pandl = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_账户_资产账户业务持仓表][{成本金额},{利息成本金额},{成交占用数量},{成交释放数量}][@成本金额#, @利息成本金额#,@成交占用数量#,@成交释放数量#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    select cost_amt,intrst_cost_amt,strike_capt_qty,strike_releas_qty into v_cost_amt, v_intrst_cost_amt,v_strike_capt_qty,v_strike_releas_qty from db_tdsecu.tb_tdseac_asac_busi_posi where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.28.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;


    /* SET @持仓数量#=@资产账户当前数量#-@成交占用数量#+@成交释放数量# + @成交变动数量#; */
    SET v_posi_qty=v_asac_curr_qty-v_strike_capt_qty+v_strike_releas_qty + v_strike_occur_qty;

    /* SET @成本金额#=@资产账户成本金额#+@成本金额#; */
    SET v_cost_amt=v_asac_cost_amt+v_cost_amt;

    /* SET @利息成本金额#=@资产账户利息成本金额#+@利息成本金额#; */
    SET v_intrst_cost_amt=v_asac_intrst_cost_amt+v_intrst_cost_amt;

    /* if @持仓数量#=0 then */
    if v_posi_qty=0 then

      /* set @当前成本金额#=0; */
      set v_curr_cost_amt=0;
    else

      /* SET @当前成本金额#=Round(@成本金额#*@成交变动数量#/@持仓数量#,2); */
      SET v_curr_cost_amt=Round(v_cost_amt*v_strike_occur_qty/v_posi_qty,2);
    end if;

    /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
    if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

        /* SET @利息收益# = Round((@债券计提利息# * @成交变动数量#),2); */
        SET v_intrst_pandl = Round((v_bond_accr_intrst * v_strike_occur_qty),2);

        /* SET @利息成本金额#=Round(ifnull(@利息成本金额#*@成交变动数量#/@持仓数量#,0),2); */
        SET v_intrst_cost_amt=Round(ifnull(v_intrst_cost_amt*v_strike_occur_qty/v_posi_qty,0),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@债券计提利息# * @成交变动数量#),2); */
            SET v_intrst_cost_amt=Round((v_bond_accr_intrst * v_strike_occur_qty),2);
        end if;
    else

        /* SET @利息收益# = 0; */
        SET v_intrst_pandl = 0;

        /* SET @利息成本金额#=0; */
        SET v_intrst_cost_amt=0;
    end if;

    /* if @市场编号#=《市场编号-沪港通证券交易所》 or @市场编号# = 《市场编号-深港通证券交易所》 then */
    if v_exch_no=3 or v_exch_no = 4 then

        /* SET @利息收益# = Round((@利息收益# * @买入参考汇率#),2); */
        SET v_intrst_pandl = Round((v_intrst_pandl * v_buy_ref_rate),2);

        /* SET @成交变动金额# = Round((@成交变动金额# * @买入参考汇率#),2); */
        SET v_strike_occur_amt = Round((v_strike_occur_amt * v_buy_ref_rate),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@利息成本金额# * @买入参考汇率#),2); */
            SET v_intrst_cost_amt=Round((v_intrst_cost_amt * v_buy_ref_rate),2);
        end if;
    end if;

    /* if @成本计算方式#=2 then */
    if v_cost_calc_type=2 then

      /* SET @实现盈亏#=round(@成交变动金额# - @利息收益# - @当前成本金额#,2); */
      SET v_realize_pandl=round(v_strike_occur_amt - v_intrst_pandl - v_curr_cost_amt,2);

      /* SET @利息收益#=round(@利息收益# - @利息成本金额#,2); */
      SET v_intrst_pandl=round(v_intrst_pandl - v_intrst_cost_amt,2);

      /* SET @当前成本金额#=Round(@当前成本金额#,2); */
      SET v_curr_cost_amt=Round(v_curr_cost_amt,2);

      /* SET @利息成本金额#=Round(@利息成本金额#,2); */
      SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

      /* [更新表记录][交易证券_账户_资产账户业务持仓表][{成本金额}={成本金额}-@当前成本金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_update_date = date_format(curdate(),'%Y%m%d');
      set v_update_time = date_format(curtime(),'%H%i%s');
      update db_tdsecu.tb_tdseac_asac_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_curr_cost_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.28.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

    else
      #set @实现盈亏#=round(@成交变动金额# - @利息收益#  - @当前成本金额#,2);

      /* set @实现盈亏#=0; */
      set v_realize_pandl=0;

      /* set @成交变动金额#=round(@成交变动金额#-@利息收益#,2); */
      set v_strike_occur_amt=round(v_strike_occur_amt-v_intrst_pandl,2);
      #SET @利息收益#=round(@利息收益# - @利息成本金额#,2);

      /* SET @利息收益#=0; */
      SET v_intrst_pandl=0;

      /* SET @利息成本金额#=Round(@利息成本金额#,2); */
      SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

      /* [更新表记录][交易证券_账户_资产账户业务持仓表][{成本金额}={成本金额}-@成交变动金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
      set v_update_date = date_format(curdate(),'%Y%m%d');
      set v_update_time = date_format(curtime(),'%H%i%s');
      update db_tdsecu.tb_tdseac_asac_busi_posi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.28.1";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
          else
              SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
          end if;
          leave label_pro;
      end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_提交债券质押
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_BondImpawn;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_BondImpawn(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_target_code_no int,
    IN p_occur_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_target_code_no int;
    declare v_occur_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_put_impawn_qty decimal(18,2);
    declare v_get_impawn_qty decimal(18,2);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_occur_qty = p_occur_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_put_impawn_qty = 0;
    SET v_get_impawn_qty = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* SET @期初数量# = 0; */
    SET v_begin_qty = 0;

    /* SET @当前数量# = @变动数量#; */
    SET v_curr_qty = v_occur_qty;

    /* SET @提交质押数量# = @变动数量#; */
    SET v_put_impawn_qty = v_occur_qty;

    /* SET @转回质押数量# = 0; */
    SET v_get_impawn_qty = 0;

    /* [插入重复更新][交易证券_账户_资产账户债券质押表][字段][字段变量][{当前数量}={当前数量}+@变动数量#,{提交质押数量}={提交质押数量}+@变动数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_bond_impawn (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
        begin_qty, curr_qty, put_impawn_qty, get_impawn_qty, 
        target_code_no) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
        v_begin_qty, v_curr_qty, v_put_impawn_qty, v_get_impawn_qty, 
        v_target_code_no) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty+v_occur_qty,put_impawn_qty=put_impawn_qty+v_occur_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.31.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;


    /* [插入重复更新][交易证券_账户_交易组债券质押表][字段][字段变量][{当前数量}={当前数量}+@变动数量#,{提交质押数量}={提交质押数量}+@变动数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_bond_impawn (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, begin_qty, curr_qty, put_impawn_qty, 
        get_impawn_qty, target_code_no) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_begin_qty, v_curr_qty, v_put_impawn_qty, 
        v_get_impawn_qty, v_target_code_no) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty+v_occur_qty,put_impawn_qty=put_impawn_qty+v_occur_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.31.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_转回债券质押
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_BondImpawnBack;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_BondImpawnBack(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_target_code_no int,
    IN p_occur_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_target_code_no int;
    declare v_occur_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_put_impawn_qty decimal(18,2);
    declare v_get_impawn_qty decimal(18,2);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_occur_qty = p_occur_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_put_impawn_qty = 0;
    SET v_get_impawn_qty = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* SET @期初数量# = 0; */
    SET v_begin_qty = 0;

    /* SET @当前数量# = 0 - @变动数量#; */
    SET v_curr_qty = 0 - v_occur_qty;

    /* SET @提交质押数量# = 0; */
    SET v_put_impawn_qty = 0;

    /* SET @转回质押数量# = @变动数量#; */
    SET v_get_impawn_qty = v_occur_qty;

    /* [插入重复更新][交易证券_账户_资产账户债券质押表][字段][字段变量][{当前数量}={当前数量}-@变动数量#,{转回质押数量}={转回质押数量}+@变动数量#][{资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号# ][2][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_bond_impawn (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
        begin_qty, curr_qty, put_impawn_qty, get_impawn_qty, 
        target_code_no) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
        v_begin_qty, v_curr_qty, v_put_impawn_qty, v_get_impawn_qty, 
        v_target_code_no) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty-v_occur_qty,get_impawn_qty=get_impawn_qty+v_occur_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.32.asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no ";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(2,"#",v_mysql_message);
        else
            SET v_error_info = 2;
        end if;
        leave label_pro;
    end if;


    /* [插入重复更新][交易证券_账户_交易组债券质押表][字段][字段变量][{当前数量}={当前数量}-@变动数量#,{转回质押数量}={转回质押数量}+@变动数量#][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号# ][2][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_bond_impawn (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, begin_qty, curr_qty, put_impawn_qty, 
        get_impawn_qty, target_code_no) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_begin_qty, v_curr_qty, v_put_impawn_qty, 
        v_get_impawn_qty, v_target_code_no) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty-v_occur_qty,get_impawn_qty=get_impawn_qty+v_occur_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.32.exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no ";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(2,"#",v_mysql_message);
        else
            SET v_error_info = 2;
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组债券质押
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBondImpawn;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBondImpawn(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组债券质押表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@股东代码编号#=0 or {股东代码编号}=@股东代码编号#) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@机构编号权限串# = " " or instr(@机构编号权限串#,concat(";",{机构编号},";"))>0) and (@产品编号权限串# = " " or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and (@交易组编号权限串#= " " or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, begin_qty, curr_qty, 
        put_impawn_qty, get_impawn_qty, target_code_no from db_tdsecu.tb_tdseac_exgp_bond_impawn where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str = " " or instr(v_co_no_rights_str,concat(";",co_no,";"))>0) and (v_pd_no_rights_str = " " or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str= " " or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, begin_qty, curr_qty, 
        put_impawn_qty, get_impawn_qty, target_code_no from db_tdsecu.tb_tdseac_exgp_bond_impawn where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str = " " or instr(v_co_no_rights_str,concat(";",co_no,";"))>0) and (v_pd_no_rights_str = " " or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str= " " or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户债券质押
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacBondImpawn;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacBondImpawn(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户债券质押表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#)  and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@股东代码编号#=0 or {股东代码编号}=@股东代码编号#) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@产品编号权限串# = " " or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, begin_qty, curr_qty, put_impawn_qty, 
        get_impawn_qty, target_code_no from db_tdsecu.tb_tdseac_asac_bond_impawn where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no)  and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_pd_no_rights_str = " " or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, begin_qty, curr_qty, put_impawn_qty, 
        get_impawn_qty, target_code_no from db_tdsecu.tb_tdseac_asac_bond_impawn where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no)  and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_pd_no_rights_str = " " or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取债券质押信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetBondImpawnInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetBondImpawnInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_query_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_begin_qty decimal(18,2),
    OUT p_curr_qty decimal(18,2),
    OUT p_put_impawn_qty decimal(18,2),
    OUT p_get_impawn_qty decimal(18,2),
    OUT p_target_code_no int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_query_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_put_impawn_qty decimal(18,2);
    declare v_get_impawn_qty decimal(18,2);
    declare v_target_code_no int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_query_row_id = p_query_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_put_impawn_qty = 0;
    SET v_get_impawn_qty = 0;
    SET v_target_code_no = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_账户_交易组债券质押表][字段][字段变量][{记录序号}>@查询记录序号# and {当前数量}>0][4][@查询记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, begin_qty, curr_qty, 
        put_impawn_qty, get_impawn_qty, target_code_no into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code_no, v_begin_qty, v_curr_qty, 
        v_put_impawn_qty, v_get_impawn_qty, v_target_code_no from db_tdsecu.tb_tdseac_exgp_bond_impawn where row_id>v_query_row_id and curr_qty>0 limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.35.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("查询记录序号=",v_query_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("查询记录序号=",v_query_row_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_begin_qty = v_begin_qty;
    SET p_curr_qty = v_curr_qty;
    SET p_put_impawn_qty = v_put_impawn_qty;
    SET p_get_impawn_qty = v_get_impawn_qty;
    SET p_target_code_no = v_target_code_no;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新债券质押标准券数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateBondImpawnQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateBondImpawnQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_curr_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_curr_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_begin_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_curr_qty = p_curr_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_begin_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @指令占用数量#=0; */
    set v_comm_capt_qty=0;

    /* set @指令释放数量#=0; */
    set v_comm_releas_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @交易占用数量#=0; */
    set v_trade_capt_qty=0;

    /* set @交易释放数量#=0; */
    set v_trade_releas_qty=0;

    /* set @成交占用数量#=0; */
    set v_strike_capt_qty=0;

    /* set @成交释放数量#=0; */
    set v_strike_releas_qty=0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;

    /* set @证券类型# = 0; */
    set v_stock_type = 0;

    /* set @资产类型# = 0; */
    set v_asset_type = 0;

    /* [插入重复更新][交易证券_账户_资产账户业务持仓表][字段][字段变量][{当前数量}={当前数量}+@当前数量#][1][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_busi_posi (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code_no, 
        stock_type, asset_type, begin_qty, curr_qty, 
        frozen_qty, unfroz_qty, comm_frozen_qty, comm_unfroz_qty, 
        comm_capt_qty, comm_releas_qty, trade_frozen_qty, trade_unfroz_qty, 
        trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
        strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
        intrst_cost_amt, intrst_pandl) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code_no, 
        v_stock_type, v_asset_type, v_begin_qty, v_curr_qty, 
        v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, v_comm_unfroz_qty, 
        v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
        v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
        v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
        v_intrst_cost_amt, v_intrst_pandl) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty+v_curr_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.36.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;


    /* [插入重复更新][交易证券_账户_交易组业务持仓表][字段][字段变量][{当前数量}={当前数量}+@当前数量#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_busi_posi (
        create_date, create_time, update_date, 
        update_time, update_times, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, begin_qty, 
        curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
        comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
        v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
        v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
        v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
        v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
        v_cost_amt, v_intrst_cost_amt, v_intrst_pandl) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, curr_qty=curr_qty+v_curr_qty;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.36.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组债券质押转回可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBondImpawnBackAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBondImpawnBackAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @指定行数# = -1 then */
    if v_row_count = -1 then

        /* select a.{机构编号},a.{产品编号},a.{交易组编号},a.{资产账户编号},a.{市场编号},a.{股东代码编号},a.{证券代码编号},ifnull(b.{当前数量},0)-ifnull(a.{指令解冻数量},0)-ifnull(a.{交易解冻数量},0) as {指令端转回可用数量},ifnull(b.{当前数量},0)-ifnull(a.{交易解冻数量},0) as {交易端转回可用数量} from ~交易证券_账户_交易组业务持仓表^ a left join ~交易证券_账户_交易组债券质押表^ b on  a.{交易组编号}=b.{交易组编号} and a.{资产账户编号}=b.{资产账户编号} and a.{股东代码编号}=b.{股东代码编号} and a.{证券代码编号}=b.{证券代码编号} where (@机构编号#=0 or a.{机构编号}=@机构编号#) and (@产品编号#=0 or a.{产品编号}=@产品编号#) and (@交易组编号#=0 or a.{交易组编号}=@交易组编号#) and (@资产账户编号#=0 or a.{资产账户编号}=@资产账户编号#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",a.{市场编号},";"))>0) and (@股东代码编号#=0 or a.{股东代码编号}=@股东代码编号#) and (@证券代码编号#=0 or a.{证券代码编号}=@证券代码编号#)and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",a.{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",a.{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",a.{交易组编号},";"))>0) and a.{记录序号}>@记录序号# order by a.{记录序号}; */
        select a.co_no,a.pd_no,a.exch_group_no,a.asset_acco_no,a.exch_no,a.stock_acco_no,a.stock_code_no,ifnull(b.curr_qty,0)-ifnull(a.comm_unfroz_qty,0)-ifnull(a.trade_unfroz_qty,0) as comm_reback_avail_qty,ifnull(b.curr_qty,0)-ifnull(a.trade_unfroz_qty,0) as trade_reback_avail_qty from db_tdsecu.tb_tdseac_exgp_busi_posi a left join db_tdsecu.tb_tdseac_exgp_bond_impawn b on  a.exch_group_no=b.exch_group_no and a.asset_acco_no=b.asset_acco_no and a.stock_acco_no=b.stock_acco_no and a.stock_code_no=b.stock_code_no where (v_co_no=0 or a.co_no=v_co_no) and (v_pd_no=0 or a.pd_no=v_pd_no) and (v_exch_group_no=0 or a.exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or a.asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",a.exch_no,";"))>0) and (v_stock_acco_no=0 or a.stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or a.stock_code_no=v_stock_code_no)and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",a.co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",a.pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",a.exch_group_no,";"))>0) and a.row_id>v_row_id order by a.row_id;
    else

        /* select a.{机构编号},a.{产品编号},a.{交易组编号},a.{资产账户编号},a.{市场编号},a.{股东代码编号},a.{证券代码编号},ifnull(b.{当前数量},0)-ifnull(a.{指令解冻数量},0)-ifnull(a.{交易解冻数量},0) as {指令端转回可用数量},ifnull(b.{当前数量},0)-ifnull(a.{交易解冻数量},0) as {交易端转回可用数量} from ~交易证券_账户_交易组业务持仓表^ a left join ~交易证券_账户_交易组债券质押表^ b on  a.{交易组编号}=b.{交易组编号} and a.{资产账户编号}=b.{资产账户编号} and a.{股东代码编号}=b.{股东代码编号} and a.{证券代码编号}=b.{证券代码编号} where (@机构编号#=0 or a.{机构编号}=@机构编号#) and (@产品编号#=0 or a.{产品编号}=@产品编号#) and (@交易组编号#=0 or a.{交易组编号}=@交易组编号#) and (@资产账户编号#=0 or a.{资产账户编号}=@资产账户编号#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",a.{市场编号},";"))>0) and (@股东代码编号#=0 or a.{股东代码编号}=@股东代码编号#) and (@证券代码编号#=0 or a.{证券代码编号}=@证券代码编号#)and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",a.{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",a.{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",a.{交易组编号},";"))>0) and a.{记录序号}>@记录序号# order by a.{记录序号} limit @指定行数#; */
        select a.co_no,a.pd_no,a.exch_group_no,a.asset_acco_no,a.exch_no,a.stock_acco_no,a.stock_code_no,ifnull(b.curr_qty,0)-ifnull(a.comm_unfroz_qty,0)-ifnull(a.trade_unfroz_qty,0) as comm_reback_avail_qty,ifnull(b.curr_qty,0)-ifnull(a.trade_unfroz_qty,0) as trade_reback_avail_qty from db_tdsecu.tb_tdseac_exgp_busi_posi a left join db_tdsecu.tb_tdseac_exgp_bond_impawn b on  a.exch_group_no=b.exch_group_no and a.asset_acco_no=b.asset_acco_no and a.stock_acco_no=b.stock_acco_no and a.stock_code_no=b.stock_code_no where (v_co_no=0 or a.co_no=v_co_no) and (v_pd_no=0 or a.pd_no=v_pd_no) and (v_exch_group_no=0 or a.exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or a.asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",a.exch_no,";"))>0) and (v_stock_acco_no=0 or a.stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or a.stock_code_no=v_stock_code_no)and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",a.co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",a.pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",a.exch_group_no,";"))>0) and a.row_id>v_row_id order by a.row_id limit v_row_count;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_处理日初债券回购到期
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealInitBondRepo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealInitBondRepo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_occur_date int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_rate decimal(18,12);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_target_code_no int;
    declare v_comm_id bigint;
    declare v_order_dir int;
    declare v_repo_qty decimal(18,2);
    declare v_repo_amt decimal(18,4);
    declare v_repo_rate decimal(18,12);
    declare v_repo_trade_date int;
    declare v_repo_order_id bigint;
    declare v_repo_strike_id bigint;
    declare v_repo_days int;
    declare v_repo_cale_days int;
    declare v_repo_back_date int;
    declare v_repo_back_amt decimal(18,4);
    declare v_repo_back_intrst decimal(18,4);
    declare v_repo_back_trade_date int;
    declare v_repo_status varchar(2);
    declare v_busi_flag int;
    declare v_remark_info varchar(255);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_amt decimal(18,4);
    declare v_trade_releas_qty decimal(18,2);
    declare v_stock_type int;
    declare v_asset_type int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_occur_date = date_format(curdate(),'%Y%m%d');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_crncy_type = "CNY";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_rate = 0;
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_target_code_no = 0;
    SET v_comm_id = 0;
    SET v_order_dir = 0;
    SET v_repo_qty = 0;
    SET v_repo_amt = 0;
    SET v_repo_rate = 0;
    SET v_repo_trade_date = date_format(curdate(),'%Y%m%d');
    SET v_repo_order_id = 0;
    SET v_repo_strike_id = 0;
    SET v_repo_days = 0;
    SET v_repo_cale_days = 0;
    SET v_repo_back_date = 0;
    SET v_repo_back_amt = 0;
    SET v_repo_back_intrst = 0;
    SET v_repo_back_trade_date = 0;
    SET v_repo_status = "0";
    SET v_busi_flag = 0;
    SET v_remark_info = " ";
    SET v_trade_capt_amt = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_amt = 0;
    SET v_trade_releas_qty = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;

    
    label_pro:BEGIN
    

    /* set @发生日期#=@初始化日期#; */
    set v_occur_date=v_init_date;

    /* [声明游标][交易证券_账户_债券回购表][字段][{实际回购到期日期}=@初始化日期# and {回购处理状态}=《回购处理状态-未处理》][cur_repoback] */
    cur_repoback:BEGIN
    DECLARE v_cursor_done int default false;
    DECLARE cur_repoback CURSOR FOR
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        crncy_type, exch_crncy_type, exch_rate, exch_no, 
        stock_acco_no, stock_code_no, target_code_no, comm_id, 
        order_dir, repo_qty, repo_amt, repo_rate, 
        repo_trade_date, repo_order_id, repo_strike_id, repo_days, 
        repo_cale_days, repo_back_date, repo_back_amt, repo_back_intrst, 
        repo_back_trade_date, repo_status 
        from db_tdsecu.tb_tdseac_bond_repo 
        where repo_back_trade_date=v_init_date and repo_status="2";
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_cursor_done = TRUE;


    /* [打开游标][字段变量][cur_repoback][loop_repoback] */
    open cur_repoback;
    loop_repoback: LOOP
    fetch cur_repoback into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_crncy_type, v_exch_crncy_type, v_exch_rate, v_exch_no, 
        v_stock_acco_no, v_stock_code_no, v_target_code_no, v_comm_id, 
        v_order_dir, v_repo_qty, v_repo_amt, v_repo_rate, 
        v_repo_trade_date, v_repo_order_id, v_repo_strike_id, v_repo_days, 
        v_repo_cale_days, v_repo_back_date, v_repo_back_amt, v_repo_back_intrst, 
        v_repo_back_trade_date, v_repo_status;
        IF v_cursor_done THEN
            LEAVE loop_repoback;
        END IF;


        /* if @订单方向#=《订单方向-融资回购》 then */
        if v_order_dir=3 then

            /* set @业务标志#=《业务标志-融资回购到期》; */
            set v_busi_flag=2004003;

            /* set @备注信息#="融资回购到期处理"; */
            set v_remark_info="融资回购到期处理";

            /* set @交易占用金额#=0; */
            set v_trade_capt_amt=0;

            /* set @交易占用数量#=0; */
            set v_trade_capt_qty=0;

            /* set @交易释放金额#=-(@回购购回金额#+@回购购回利息#); */
            set v_trade_releas_amt=-(v_repo_back_amt+v_repo_back_intrst);

            /* set @交易释放数量#=@回购数量#; */
            set v_trade_releas_qty=v_repo_qty;

        /* elseif @订单方向#=《订单方向-融券回购》 then */
        elseif v_order_dir=4 then

            /* set @业务标志#=《业务标志-融券回购到期》; */
            set v_busi_flag=2004004;

            /* set @备注信息#="融券回购到期处理"; */
            set v_remark_info="融券回购到期处理";

            /* set @交易占用金额#=0; */
            set v_trade_capt_amt=0;

            /* set @交易占用数量#=0; */
            set v_trade_capt_qty=0;

            /* set @交易释放金额#=@回购购回金额#+@回购购回利息#; */
            set v_trade_releas_amt=v_repo_back_amt+v_repo_back_intrst;

            /* set @交易释放数量#=-@回购数量#; */
            set v_trade_releas_qty=-v_repo_qty;
        end if;

        /* set @证券类型# = 0; */
        set v_stock_type = 0;

        /* set @资产类型# = 0; */
        set v_asset_type = 0;

        /* 调用【原子_交易证券_账户_更新交易资金持仓】*/
        call db_tdsecu.pra_tdseac_UpdateExchCashPosi(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_acco_no,
            v_stock_code_no,
            v_stock_type,
            v_asset_type,
            v_comm_id,
            v_trade_capt_amt,
            v_trade_capt_qty,
            v_trade_releas_amt,
            v_trade_releas_qty,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.41.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新交易资金持仓出现错误！',v_mysql_message);
            end if;
            close cur_repoback;
            leave label_pro;
        elseif v_error_code <> "0" then
            close cur_repoback;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_债券回购表][{回购处理状态}=《回购处理状态-已处理》][{记录序号}=@记录序号#][2][@记录序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_bond_repo set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, repo_status="1" where row_id=v_row_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.41.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("记录序号=",v_row_id);
            end if;
            close cur_repoback;
            leave label_pro;
        end if;


    /* [关闭游标][cur_repoback] */
        IF v_cursor_done THEN
            set v_cursor_done = false;
        END IF;
    END LOOP;
    close cur_repoback;
    end cur_repoback;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_债券回购处理
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealBondRepo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealBondRepo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_rate decimal(18,12),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_order_dir int,
    IN p_repo_qty decimal(18,2),
    IN p_repo_amt decimal(18,4),
    IN p_repo_rate decimal(18,12),
    IN p_repo_trade_date int,
    IN p_repo_order_id bigint,
    IN p_repo_strike_id bigint,
    IN p_repo_days int,
    IN p_repo_cale_days int,
    IN p_repo_back_date int,
    IN p_repo_back_amt decimal(18,4),
    IN p_repo_back_intrst decimal(18,4),
    IN p_trade_code_no int,
    IN p_target_code_no int,
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_rate decimal(18,12);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_order_dir int;
    declare v_repo_qty decimal(18,2);
    declare v_repo_amt decimal(18,4);
    declare v_repo_rate decimal(18,12);
    declare v_repo_trade_date int;
    declare v_repo_order_id bigint;
    declare v_repo_strike_id bigint;
    declare v_repo_days int;
    declare v_repo_cale_days int;
    declare v_repo_back_date int;
    declare v_repo_back_amt decimal(18,4);
    declare v_repo_back_intrst decimal(18,4);
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_id bigint;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_remark_info varchar(255);
    declare v_busi_flag int;
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_amt decimal(18,4);
    declare v_trade_releas_qty decimal(18,2);
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_exgp_avail_amt decimal(18,4);
    declare v_repo_status varchar(2);
    declare v_repo_back_trade_date int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_rate = p_exch_rate;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_order_dir = p_order_dir;
    SET v_repo_qty = p_repo_qty;
    SET v_repo_amt = p_repo_amt;
    SET v_repo_rate = p_repo_rate;
    SET v_repo_trade_date = p_repo_trade_date;
    SET v_repo_order_id = p_repo_order_id;
    SET v_repo_strike_id = p_repo_strike_id;
    SET v_repo_days = p_repo_days;
    SET v_repo_cale_days = p_repo_cale_days;
    SET v_repo_back_date = p_repo_back_date;
    SET v_repo_back_amt = p_repo_back_amt;
    SET v_repo_back_intrst = p_repo_back_intrst;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_id = 0;
    SET v_buy_ref_rate = 0;
    SET v_sell_ref_rate = 0;
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_remark_info = " ";
    SET v_busi_flag = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_amt = 0;
    SET v_trade_releas_qty = 0;
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_exgp_avail_amt = 0;
    SET v_repo_status = "0";
    SET v_repo_back_trade_date = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* set @指令序号#=0; */
    set v_comm_id=0;

    /* set @证券代码编号#=@标的代码编号#; */
    set v_stock_code_no=v_target_code_no;

    /* set @买入参考汇率# = @汇率#; */
    set v_buy_ref_rate = v_exch_rate;

    /* set @卖出参考汇率# = @汇率#; */
    set v_sell_ref_rate = v_exch_rate;

    /* if @订单方向# = 《订单方向-融资回购》 then */
    if v_order_dir = 3 then

        /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_no,
            v_stock_acco_no,
            v_stock_code_no,
            v_posi_reback_days,
            v_error_code,
            v_error_info,
            v_comm_avail_qty,
            v_trade_avail_qty,
            v_static_avail_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.42.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [检查报错返回][@回购数量# > @交易端可用数量#][1][@交易端可用数量#, @回购数量#] */
        if v_repo_qty > v_trade_avail_qty then
            
            SET v_error_code = "tdsecuA.2.42.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易端可用数量=",v_trade_avail_qty,","," 回购数量=", v_repo_qty),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易端可用数量=",v_trade_avail_qty,","," 回购数量=", v_repo_qty);
            end if;
            leave label_pro;
        end if;


        /* set @备注信息#="手工融资回购(正回购)处理"; */
        set v_remark_info="手工融资回购(正回购)处理";

        /* set @业务标志#=《业务标志-债券融资回购》; */
        set v_busi_flag=2004001;

        /* set @交易占用金额#=0; */
        set v_trade_capt_amt=0;

        /* set @交易占用数量#=0; */
        set v_trade_capt_qty=0;

        /* set @交易释放金额#=@回购金额#; */
        set v_trade_releas_amt=v_repo_amt;

        /* set @交易释放数量#=-@回购数量#; */
        set v_trade_releas_qty=-v_repo_qty;

    /* elseif  @订单方向# = 《订单方向-融券回购》 then */
    elseif  v_order_dir = 4 then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.42.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [检查报错返回][@回购金额# > @交易端可用金额#][30][@交易组可用金额#,@回购金额#] */
        if v_repo_amt > v_trade_avail_amt then
            
            SET v_error_code = "tdsecuA.2.42.30";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组可用金额=",v_exgp_avail_amt,",","回购金额=",v_repo_amt),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组可用金额=",v_exgp_avail_amt,",","回购金额=",v_repo_amt);
            end if;
            leave label_pro;
        end if;


        /* set @备注信息#="手工融券回购(正回购)处理"; */
        set v_remark_info="手工融券回购(正回购)处理";

        /* set @业务标志#=《业务标志-债券融券回购》; */
        set v_busi_flag=2004002;

        /* set @交易占用金额#=0; */
        set v_trade_capt_amt=0;

        /* set @交易占用数量#=0; */
        set v_trade_capt_qty=0;

        /* set @交易释放金额#=-@回购金额#; */
        set v_trade_releas_amt=-v_repo_amt;

        /* set @交易释放数量#=@回购数量#; */
        set v_trade_releas_qty=v_repo_qty;
    end if;

    /* 调用【原子_交易证券_账户_更新交易资金持仓】*/
    call db_tdsecu.pra_tdseac_UpdateExchCashPosi(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_acco_no,
        v_stock_code_no,
        v_stock_type,
        v_asset_type,
        v_comm_id,
        v_trade_capt_amt,
        v_trade_capt_qty,
        v_trade_releas_amt,
        v_trade_releas_qty,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.2.42.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新交易资金持仓出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @回购处理状态#=《回购处理状态-未处理》; */
    set v_repo_status="2";

    /* set @实际回购到期日期#=@回购到期日期#; */
    set v_repo_back_trade_date=v_repo_back_date;

    /* [插入表记录][交易证券_账户_债券回购表][字段][字段变量][1][@初始化日期#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@订单方向#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_bond_repo(
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, crncy_type, 
        exch_crncy_type, exch_rate, exch_no, stock_acco_no, 
        stock_code_no, target_code_no, comm_id, order_dir, 
        repo_qty, repo_amt, repo_rate, repo_trade_date, 
        repo_order_id, repo_strike_id, repo_days, repo_cale_days, 
        repo_back_date, repo_back_amt, repo_back_intrst, repo_back_trade_date, 
        repo_status) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_crncy_type, 
        v_exch_crncy_type, v_exch_rate, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_target_code_no, v_comm_id, v_order_dir, 
        v_repo_qty, v_repo_amt, v_repo_rate, v_repo_trade_date, 
        v_repo_order_id, v_repo_strike_id, v_repo_days, v_repo_cale_days, 
        v_repo_back_date, v_repo_back_amt, v_repo_back_intrst, v_repo_back_trade_date, 
        v_repo_status);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.42.1";
        SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir),"#",v_mysql_message);
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_债券回购成交处理
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealStrikeBondRepo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealStrikeBondRepo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_rate decimal(18,12),
    IN p_comm_id bigint,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_repo_qty decimal(18,2),
    IN p_repo_amt decimal(18,4),
    IN p_repo_rate decimal(18,12),
    IN p_repo_trade_date int,
    IN p_repo_order_id bigint,
    IN p_repo_strike_id bigint,
    IN p_repo_days int,
    IN p_repo_cale_days int,
    IN p_repo_back_date int,
    IN p_repo_back_amt decimal(18,4),
    IN p_repo_back_intrst decimal(18,4),
    IN p_trade_code_no int,
    IN p_target_code_no int,
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_rate decimal(18,12);
    declare v_comm_id bigint;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_repo_qty decimal(18,2);
    declare v_repo_amt decimal(18,4);
    declare v_repo_rate decimal(18,12);
    declare v_repo_trade_date int;
    declare v_repo_order_id bigint;
    declare v_repo_strike_id bigint;
    declare v_repo_days int;
    declare v_repo_cale_days int;
    declare v_repo_back_date int;
    declare v_repo_back_amt decimal(18,4);
    declare v_repo_back_intrst decimal(18,4);
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_repo_status varchar(2);
    declare v_repo_back_trade_date int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_rate = p_exch_rate;
    SET v_comm_id = p_comm_id;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_repo_qty = p_repo_qty;
    SET v_repo_amt = p_repo_amt;
    SET v_repo_rate = p_repo_rate;
    SET v_repo_trade_date = p_repo_trade_date;
    SET v_repo_order_id = p_repo_order_id;
    SET v_repo_strike_id = p_repo_strike_id;
    SET v_repo_days = p_repo_days;
    SET v_repo_cale_days = p_repo_cale_days;
    SET v_repo_back_date = p_repo_back_date;
    SET v_repo_back_amt = p_repo_back_amt;
    SET v_repo_back_intrst = p_repo_back_intrst;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_repo_status = "0";
    SET v_repo_back_trade_date = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* set @回购处理状态#=《回购处理状态-未处理》; */
    set v_repo_status="2";

    /* set @实际回购到期日期#=@回购到期日期#; */
    set v_repo_back_trade_date=v_repo_back_date;

    /* [插入表记录][交易证券_账户_债券回购表][字段][字段变量][1][@初始化日期#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@订单方向#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_bond_repo(
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, crncy_type, 
        exch_crncy_type, exch_rate, exch_no, stock_acco_no, 
        stock_code_no, target_code_no, comm_id, order_dir, 
        repo_qty, repo_amt, repo_rate, repo_trade_date, 
        repo_order_id, repo_strike_id, repo_days, repo_cale_days, 
        repo_back_date, repo_back_amt, repo_back_intrst, repo_back_trade_date, 
        repo_status) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_crncy_type, 
        v_exch_crncy_type, v_exch_rate, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_target_code_no, v_comm_id, v_order_dir, 
        v_repo_qty, v_repo_amt, v_repo_rate, v_repo_trade_date, 
        v_repo_order_id, v_repo_strike_id, v_repo_days, v_repo_cale_days, 
        v_repo_back_date, v_repo_back_amt, v_repo_back_intrst, v_repo_back_trade_date, 
        v_repo_status);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.43.1";
        SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir),"#",v_mysql_message);
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_债券回购成交回溯处理
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_BackDealStrikeBondRepo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_BackDealStrikeBondRepo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_repo_trade_date int,
    IN p_repo_order_id bigint,
    IN p_repo_strike_id bigint,
    IN p_trade_code_no int,
    IN p_target_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_repo_trade_date int;
    declare v_repo_order_id bigint;
    declare v_repo_strike_id bigint;
    declare v_trade_code_no int;
    declare v_target_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_repo_status varchar(2);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_repo_trade_date = p_repo_trade_date;
    SET v_repo_order_id = p_repo_order_id;
    SET v_repo_strike_id = p_repo_strike_id;
    SET v_trade_code_no = p_trade_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_repo_status = "0";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* set @回购处理状态#=《回购处理状态-已回滚》; */
    set v_repo_status="4";

    /* [更新表记录][交易证券_账户_债券回购表][{回购处理状态}=@回购处理状态#][{初始化日期}=@初始化日期# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#  and {订单方向}=@订单方向# and {回购交易日期}=@回购交易日期# and {回购成交序号}=@回购成交序号#][2][@初始化日期#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@订单方向#,@回购交易日期#,@回购成交序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_bond_repo set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, repo_status=v_repo_status where init_date=v_init_date and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no  and order_dir=v_order_dir and repo_trade_date=v_repo_trade_date and repo_strike_id=v_repo_strike_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.44.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("初始化日期=",v_init_date,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir,",","回购交易日期=",v_repo_trade_date,",","回购成交序号=",v_repo_strike_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("初始化日期=",v_init_date,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir,",","回购交易日期=",v_repo_trade_date,",","回购成交序号=",v_repo_strike_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组债券回购
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBondRepo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBondRepo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_comm_id bigint,
    IN p_order_id bigint,
    IN p_strike_id bigint,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_comm_id bigint;
    declare v_order_id bigint;
    declare v_strike_id bigint;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_comm_id = p_comm_id;
    SET v_order_id = p_order_id;
    SET v_strike_id = p_strike_id;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_债券回购表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@股东代码编号#=0 or {股东代码编号}=@股东代码编号#) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@订单序号#=0 or {回购委托序号}=@订单序号#) and (@成交序号#=0 or {回购成交序号}=@成交序号#) and instr(@机构编号权限串#,concat(";",{机构编号},";"))>0 and instr(@产品编号权限串#,concat(";",{产品编号},";"))>0 and instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0 and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        crncy_type, exch_crncy_type, exch_rate, exch_no, 
        stock_acco_no, stock_code_no, target_code_no, comm_id, 
        order_dir, repo_qty, repo_amt, repo_rate, 
        repo_trade_date, repo_order_id, repo_strike_id, repo_days, 
        repo_cale_days, repo_back_date, repo_back_amt, repo_back_intrst, 
        repo_back_trade_date, repo_status from db_tdsecu.tb_tdseac_bond_repo where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_id=0 or comm_id=v_comm_id) and (v_order_id=0 or repo_order_id=v_order_id) and (v_strike_id=0 or repo_strike_id=v_strike_id) and instr(v_co_no_rights_str,concat(";",co_no,";"))>0 and instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0 and instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0 and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        crncy_type, exch_crncy_type, exch_rate, exch_no, 
        stock_acco_no, stock_code_no, target_code_no, comm_id, 
        order_dir, repo_qty, repo_amt, repo_rate, 
        repo_trade_date, repo_order_id, repo_strike_id, repo_days, 
        repo_cale_days, repo_back_date, repo_back_amt, repo_back_intrst, 
        repo_back_trade_date, repo_status from db_tdsecu.tb_tdseac_bond_repo where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_acco_no=0 or stock_acco_no=v_stock_acco_no) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_id=0 or comm_id=v_comm_id) and (v_order_id=0 or repo_order_id=v_order_id) and (v_strike_id=0 or repo_strike_id=v_strike_id) and instr(v_co_no_rights_str,concat(";",co_no,";"))>0 and instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0 and instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0 and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_增加交易组业务资金持仓变动流水
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_AddExgpBusiCapitPosiJour;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_AddExgpBusiCapitPosiJour(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_comm_id bigint,
    IN p_order_strike_id bigint,
    IN p_order_dir int,
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_remark_info varchar(255),
    IN p_is_record_jour int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_comm_id bigint;
    declare v_order_strike_id bigint;
    declare v_order_dir int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_remark_info varchar(255);
    declare v_is_record_jour int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_comm_id = p_comm_id;
    SET v_order_strike_id = p_order_strike_id;
    SET v_order_dir = p_order_dir;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_remark_info = p_remark_info;
    SET v_is_record_jour = p_is_record_jour;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* if @是否记录流水# = 《是否记录流水-记录》 then */
    if v_is_record_jour = 1 then

        /* [插入表记录][交易证券_账户_交易组业务资金持仓变动流水表][字段][字段变量][1][@初始化日期#,@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@订单方向#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capit_posi_jour(
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
            exch_no, stock_acco_no, stock_code_no, stock_type, 
            comm_id, order_strike_id, order_dir, comm_occur_amt, 
            comm_occur_qty, trade_occur_amt, trade_occur_qty, strike_occur_amt, 
            strike_occur_qty, remark_info) 
        value( 
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
            v_exch_no, v_stock_acco_no, v_stock_code_no, v_stock_type, 
            v_comm_id, v_order_strike_id, v_order_dir, v_comm_occur_amt, 
            v_comm_occur_qty, v_trade_occur_amt, v_trade_occur_qty, v_strike_occur_amt, 
            v_strike_occur_qty, v_remark_info);
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.51.1";
            SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir),"#",v_mysql_message);
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_增加资产账户业务资金持仓变动流水
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_AddAsacBusiCapitPosiJour;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_AddAsacBusiCapitPosiJour(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_comm_id bigint,
    IN p_order_strike_id bigint,
    IN p_order_dir int,
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_remark_info varchar(255),
    IN p_is_record_jour int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_comm_id bigint;
    declare v_order_strike_id bigint;
    declare v_order_dir int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_remark_info varchar(255);
    declare v_is_record_jour int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_comm_id = p_comm_id;
    SET v_order_strike_id = p_order_strike_id;
    SET v_order_dir = p_order_dir;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_remark_info = p_remark_info;
    SET v_is_record_jour = p_is_record_jour;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* if @是否记录流水# = 《是否记录流水-记录》 then */
    if v_is_record_jour = 1 then

      /* [插入表记录][交易证券_账户_资产账户业务资金持仓变动流水表][字段][字段变量][1][@初始化日期#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@订单方向#] */
      set v_create_date = date_format(curdate(),'%Y%m%d');
      set v_create_time = date_format(curtime(),'%H%i%s');
      set v_update_date = v_create_date;
      set v_update_time = v_create_time;
      set v_update_times = 1;
      insert into db_tdsecu.tb_tdseac_asac_busi_capit_posi_jour(
          create_date, create_time, update_date, 
          update_time, update_times, init_date, co_no, 
          pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
          exch_no, stock_acco_no, stock_code_no, stock_type, 
          comm_id, order_strike_id, order_dir, comm_occur_amt, 
          comm_occur_qty, trade_occur_amt, trade_occur_qty, strike_occur_amt, 
          strike_occur_qty, remark_info) 
      value( 
          v_create_date, v_create_time, v_update_date, 
          v_update_time, v_update_times, v_init_date, v_co_no, 
          v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
          v_exch_no, v_stock_acco_no, v_stock_code_no, v_stock_type, 
          v_comm_id, v_order_strike_id, v_order_dir, v_comm_occur_amt, 
          v_comm_occur_qty, v_trade_occur_amt, v_trade_occur_qty, v_strike_occur_amt, 
          v_strike_occur_qty, v_remark_info);
      if v_error_code = "1" then
                  
          SET v_error_code = "tdsecuA.2.52.1";
          SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","订单方向=",v_order_dir),"#",v_mysql_message);
          leave label_pro;
      end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算T0有权限交易组汇总资金可用
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcT0AuthExgpSumCashAvail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcT0AuthExgpSumCashAvail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_capit_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_avail_amt decimal(18,4),
    OUT p_trade_avail_amt decimal(18,4),
    OUT p_static_avail_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_capit_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_co_no_rights_str = " ";
    SET v_pd_no_rights_str = " ";
    SET v_exch_group_no_rights_str = " ";

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用金额

    /* set @指令端可用金额# = 0; */
    set v_comm_avail_amt = 0;

    /* set @交易端可用金额# = 0; */
    set v_trade_avail_amt = 0;

    /* set @静态可用金额# = 0; */
    set v_static_avail_amt = 0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][sum({指令冻结金额}),sum({交易冻结金额}),sum({指令占用金额}),sum({交易占用金额}),sum({成交占用金额}),sum({成交释放金额})][@指令冻结金额#,@交易冻结金额#,@指令占用金额#,@交易占用金额#,@成交占用金额#,@成交释放金额#][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {交易币种}=@本币币种#] */
    select sum(comm_frozen_amt),sum(trade_frozen_amt),sum(comm_capt_amt),sum(trade_capt_amt),sum(strike_capt_amt),sum(strike_releas_amt) into v_comm_frozen_amt,v_trade_frozen_amt,v_comm_capt_amt,v_trade_capt_amt,v_strike_capt_amt,v_strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and exch_crncy_type=v_crncy_type limit 1;

    if FOUND_ROWS() <> 0 then

        /* set @指令冻结金额# = ifnull(@指令冻结金额#,0); */
        set v_comm_frozen_amt = ifnull(v_comm_frozen_amt,0);

        /* set @交易冻结金额# = ifnull(@交易冻结金额#,0); */
        set v_trade_frozen_amt = ifnull(v_trade_frozen_amt,0);

        /* set @指令占用金额# = ifnull(@指令占用金额#,0); */
        set v_comm_capt_amt = ifnull(v_comm_capt_amt,0);

        /* set @交易占用金额# = ifnull(@交易占用金额#,0); */
        set v_trade_capt_amt = ifnull(v_trade_capt_amt,0);

        /* set @成交占用金额# = ifnull(@成交占用金额#,0); */
        set v_strike_capt_amt = ifnull(v_strike_capt_amt,0);

        /* set @成交释放金额# = ifnull(@成交释放金额#,0); */
        set v_strike_releas_amt = ifnull(v_strike_releas_amt,0);

        /* SET @指令端可用金额#=-@指令冻结金额#-@交易冻结金额#-@指令占用金额#-@交易占用金额#-@成交占用金额#; */
        SET v_comm_avail_amt=-v_comm_frozen_amt-v_trade_frozen_amt-v_comm_capt_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @交易端可用金额#=-@交易冻结金额#-@交易占用金额#-@成交占用金额#; */
        SET v_trade_avail_amt=-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @静态可用金额#=-@成交占用金额#; */
        SET v_static_avail_amt=-v_strike_capt_amt;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @指令端可用金额#=@指令端可用金额#+@成交释放金额#; */
            set v_comm_avail_amt=v_comm_avail_amt+v_strike_releas_amt;

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt;
        end if;
    end if;

    /* set @指令端可用金额# = Round(ifnull(@指令端可用金额#,0),2); */
    set v_comm_avail_amt = Round(ifnull(v_comm_avail_amt,0),2);

    /* set @交易端可用金额# = Round(ifnull(@交易端可用金额#,0),2); */
    set v_trade_avail_amt = Round(ifnull(v_trade_avail_amt,0),2);

    /* set @静态可用金额# = Round(ifnull(@静态可用金额#,0),2); */
    set v_static_avail_amt = Round(ifnull(v_static_avail_amt,0),2);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_avail_amt = v_comm_avail_amt;
    SET p_trade_avail_amt = v_trade_avail_amt;
    SET p_static_avail_amt = v_static_avail_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算交易组持仓数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcExgpPosiQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcExgpPosiQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_posi_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_posi_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_posi_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用数量

    /* SET @持仓数量#=0; */
    SET v_posi_qty=0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务持仓表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        begin_qty, curr_qty, frozen_qty, unfroz_qty, 
        comm_frozen_qty, comm_unfroz_qty, comm_capt_qty, comm_releas_qty, 
        trade_frozen_qty, trade_unfroz_qty, trade_capt_qty, trade_releas_qty, 
        strike_capt_qty, strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, 
        realize_pandl, cost_amt, intrst_cost_amt, intrst_pandl into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code_no, v_stock_type, v_asset_type, 
        v_begin_qty, v_curr_qty, v_frozen_qty, v_unfroz_qty, 
        v_comm_frozen_qty, v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, 
        v_trade_frozen_qty, v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, 
        v_strike_capt_qty, v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, 
        v_realize_pandl, v_cost_amt, v_intrst_cost_amt, v_intrst_pandl from db_tdsecu.tb_tdseac_exgp_busi_posi where exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no limit 1;

    if FOUND_ROWS() = 0 then
        #如果证券业务持仓表记录不存在，则当天交易产生的可用数量为0

        /* SET @持仓数量#=0; */
        SET v_posi_qty=0;
    else

        /* SET @持仓数量#= @成交解冻数量# - @成交冻结数量# +@成交释放数量# - @成交占用数量#; */
        SET v_posi_qty= v_strike_unfroz_qty - v_strike_frozen_qty +v_strike_releas_qty - v_strike_capt_qty;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_posi_qty = v_posi_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算资产账户持仓数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcAsacPosiQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcAsacPosiQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_posi_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_posi_qty decimal(18,2);
    declare v_avail_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_posi_qty = 0;
    SET v_avail_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用数量

    /* SET @可用数量#=0; */
    SET v_avail_qty=0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务持仓表][字段][字段变量][{资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, begin_qty, 
        curr_qty, frozen_qty, unfroz_qty, comm_frozen_qty, 
        comm_unfroz_qty, comm_capt_qty, comm_releas_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_begin_qty, 
        v_curr_qty, v_frozen_qty, v_unfroz_qty, v_comm_frozen_qty, 
        v_comm_unfroz_qty, v_comm_capt_qty, v_comm_releas_qty, v_trade_frozen_qty, 
        v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
        v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
        v_cost_amt, v_intrst_cost_amt, v_intrst_pandl from db_tdsecu.tb_tdseac_asac_busi_posi where asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no limit 1;

    if FOUND_ROWS() = 0 then
        #如果证券业务持仓表记录不存在，则当天交易产生的可用数量为0

        /* SET @持仓数量#=0; */
        SET v_posi_qty=0;
    else

        /* SET @持仓数量#=@成交解冻数量#-@成交冻结数量#+@成交释放数量#-@成交占用数量#; */
        SET v_posi_qty=v_strike_unfroz_qty-v_strike_frozen_qty+v_strike_releas_qty-v_strike_capt_qty;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_posi_qty = v_posi_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_调整组合持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_AdustComboPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_AdustComboPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_posi_id bigint,
    IN p_occur_cost_amt decimal(18,4),
    IN p_occur_qty decimal(18,2),
    IN p_combo_code varchar(32),
    IN p_open_posi_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_posi_id bigint;
    declare v_occur_cost_amt decimal(18,4);
    declare v_occur_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_open_posi_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_update_date int;
    declare v_update_time int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_times int;
    declare v_init_date int;
    declare v_asset_acco_no int;
    declare v_stock_acco_no int;
    declare v_stock_code varchar(6);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_posi_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_pre_settle_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_posi_status varchar(2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_occur_cost_amt = p_occur_cost_amt;
    SET v_occur_qty = p_occur_qty;
    SET v_combo_code = p_combo_code;
    SET v_open_posi_date = p_open_posi_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_asset_acco_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code = " ";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_posi_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_pre_settle_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_posi_status = "0";

    
    label_pro:BEGIN
    

    /* [更新表记录][交易证券_账户_组合持仓表][{成本金额} = {成本金额} + @变动成本金额#,{持仓数量} = {持仓数量} +@变动数量#,{当前数量} = {当前数量} + @变动数量#][{记录序号} = @组合持仓序号#][1][@组合持仓序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt = cost_amt + v_occur_cost_amt,posi_qty = posi_qty +v_occur_qty,curr_qty = curr_qty + v_occur_qty where row_id = v_combo_posi_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.64.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_账户_组合持仓表][字段][字段变量][{记录序号}=@组合持仓序号#][2][@组合持仓序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        stock_acco_no, combo_code, stock_code, exch_no, 
        stock_code_no, open_posi_date, posi_qty, curr_qty, 
        frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl, posi_status into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_stock_acco_no, v_combo_code, v_stock_code, v_exch_no, 
        v_stock_code_no, v_open_posi_date, v_posi_qty, v_curr_qty, 
        v_frozen_qty, v_unfroz_qty, v_pre_settle_qty, v_trade_frozen_qty, 
        v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
        v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
        v_cost_amt, v_intrst_cost_amt, v_intrst_pandl, v_posi_status from db_tdsecu.tb_tdseac_comboposi where row_id=v_combo_posi_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.64.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@持仓数量# < 0][712][@持仓数量#] */
    if v_posi_qty < 0 then
        
        SET v_error_code = "tdsecuA.2.64.712";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("持仓数量=",v_posi_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("持仓数量=",v_posi_qty);
        end if;
        leave label_pro;
    end if;


    /* if @持仓数量# = 0 then */
    if v_posi_qty = 0 then

        /* [更新表记录][交易证券_账户_组合持仓表][{持仓状态} = 《持仓状态-已平仓》][{记录序号} = @组合持仓序号#][3][@组合持仓序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = "2" where row_id = v_combo_posi_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.64.3";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
            end if;
            leave label_pro;
        end if;

    end if;

    /* [更新表记录][交易证券_账户_组合持仓汇总表][{成本金额} = {成本金额} + @变动成本金额#,{持仓数量} = {持仓数量} +@变动数量#,{当前数量} = {当前数量} + @变动数量#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号#  and {初始化日期} = @初始化日期#][4][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt = cost_amt + v_occur_cost_amt,posi_qty = posi_qty +v_occur_qty,curr_qty = curr_qty + v_occur_qty where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no  and init_date = v_init_date;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.64.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
        end if;
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_账户_组合持仓汇总表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号#  and {初始化日期} = @初始化日期#][5][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        stock_acco_no, combo_code, stock_code, exch_no, 
        stock_code_no, posi_qty, curr_qty, frozen_qty, 
        unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
        trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
        strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
        intrst_cost_amt, intrst_pandl, posi_status into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_stock_acco_no, v_combo_code, v_stock_code, v_exch_no, 
        v_stock_code_no, v_posi_qty, v_curr_qty, v_frozen_qty, 
        v_unfroz_qty, v_pre_settle_qty, v_trade_frozen_qty, v_trade_unfroz_qty, 
        v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, v_strike_releas_qty, 
        v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, v_cost_amt, 
        v_intrst_cost_amt, v_intrst_pandl, v_posi_status from db_tdsecu.tb_tdseac_comboposisum where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no  and init_date = v_init_date limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.64.5";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
        end if;
        leave label_pro;
    end if;


    /* if @持仓数量# = 0 then */
    if v_posi_qty = 0 then

        /* [更新表记录][交易证券_账户_组合持仓汇总表][{持仓状态} = 《持仓状态-已平仓》][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号#  and {初始化日期} = @初始化日期#][6][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, posi_status = "2" where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no  and init_date = v_init_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.64.6";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
            end if;
            leave label_pro;
        end if;

    end if;

    /* [更新表记录][交易证券_账户_组合收益表][{组合成本} = {组合成本} + @变动成本金额#][{机构编号} = @机构编号# and {产品编号}=@产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} =@开仓日期#][7][@交易组编号#,@组合代码#,@开仓日期#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost = combo_cost + v_occur_cost_amt where co_no = v_co_no and pd_no=v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date =v_open_posi_date;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.64.7";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_账户_组合收益汇总表][{组合成本} = {组合成本} + @变动成本金额#][{机构编号} = @机构编号# and {产品编号}=@产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][8][@交易组编号#,@组合代码#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost = combo_cost + v_occur_cost_amt where co_no = v_co_no and pd_no=v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.64.8";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新组合市值
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateComboMarketValue;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateComboMarketValue(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_combo_market_value decimal(18,4),
    IN p_open_posi_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_combo_market_value decimal(18,4);
    declare v_open_posi_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_update_date int;
    declare v_update_time int;
    declare v_combo_posi_id bigint;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_combo_market_value = p_combo_market_value;
    SET v_open_posi_date = p_open_posi_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_combo_posi_id = 0;

    
    label_pro:BEGIN
    

    /* [更新表记录][交易证券_账户_组合收益表][{组合市值} =  {组合市值}+@组合市值#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} = @开仓日期#][2][@组合持仓序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_market_value =  combo_market_value+v_combo_market_value where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date = v_open_posi_date;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.65.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_账户_组合收益汇总表][{组合市值} =   {组合市值}+@组合市值#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][2][@组合持仓序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_market_value =   combo_market_value+v_combo_market_value where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.65.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新组合收益
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateComboIncome;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateComboIncome(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_open_posi_date int,
    IN p_combo_code varchar(32),
    IN p_combo_copies decimal(18,2),
    IN p_combo_status varchar(2),
    IN p_combo_cost decimal(18,4),
    IN p_combo_market_value decimal(18,4),
    IN p_realize_pandl decimal(18,4),
    IN p_sum_realize_pandl decimal(18,4),
    IN p_comm_batch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_open_posi_date int;
    declare v_combo_code varchar(32);
    declare v_combo_copies decimal(18,2);
    declare v_combo_status varchar(2);
    declare v_combo_cost decimal(18,4);
    declare v_combo_market_value decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_sum_realize_pandl decimal(18,4);
    declare v_comm_batch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_status_update_date int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_open_posi_date = p_open_posi_date;
    SET v_combo_code = p_combo_code;
    SET v_combo_copies = p_combo_copies;
    SET v_combo_status = p_combo_status;
    SET v_combo_cost = p_combo_cost;
    SET v_combo_market_value = p_combo_market_value;
    SET v_realize_pandl = p_realize_pandl;
    SET v_sum_realize_pandl = p_sum_realize_pandl;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* set @状态更新日期# = 0; */
    set v_status_update_date = 0;

    /* [插入重复更新][交易证券_账户_组合收益表][字段][字段变量][{组合份数} = {组合份数} + @组合份数#,{组合成本} = {组合成本} +@组合成本#,{组合市值} = {组合市值} + @组合市值#,{实现盈亏} = {实现盈亏} +@实现盈亏#,{累计实现盈亏} = {累计实现盈亏} +@累计实现盈亏#,{指令批号} = @指令批号#,{组合状态} = @组合状态#][1][@交易组编号#,@组合代码#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_comboincome (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, open_posi_date, comm_batch_no, 
        combo_code, combo_copies, combo_status, combo_cost, 
        combo_market_value, realize_pandl, sum_realize_pandl, status_update_date) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_open_posi_date, v_comm_batch_no, 
        v_combo_code, v_combo_copies, v_combo_status, v_combo_cost, 
        v_combo_market_value, v_realize_pandl, v_sum_realize_pandl, v_status_update_date) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, combo_copies = combo_copies + v_combo_copies,combo_cost = combo_cost +v_combo_cost,combo_market_value = combo_market_value + v_combo_market_value,realize_pandl = realize_pandl +v_realize_pandl,sum_realize_pandl = sum_realize_pandl +v_sum_realize_pandl,comm_batch_no = v_comm_batch_no,combo_status = v_combo_status;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.66.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code);
        end if;
        leave label_pro;
    end if;


    /* [插入重复更新][交易证券_账户_组合收益汇总表][字段][字段变量][{组合份数} = {组合份数} + @组合份数#,{组合成本} = {组合成本} +@组合成本#,{组合市值} = {组合市值} + @组合市值#,{实现盈亏} = {实现盈亏} +@实现盈亏#,{累计实现盈亏} = {累计实现盈亏} +@累计实现盈亏#,{指令批号} = @指令批号#,{组合状态} = @组合状态#][1][@交易组编号#,@组合代码#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_comboincomesum (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, comm_batch_no, combo_code, 
        combo_copies, combo_status, combo_cost, combo_market_value, 
        realize_pandl, sum_realize_pandl, status_update_date) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_comm_batch_no, v_combo_code, 
        v_combo_copies, v_combo_status, v_combo_cost, v_combo_market_value, 
        v_realize_pandl, v_sum_realize_pandl, v_status_update_date) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, combo_copies = combo_copies + v_combo_copies,combo_cost = combo_cost +v_combo_cost,combo_market_value = combo_market_value + v_combo_market_value,realize_pandl = realize_pandl +v_realize_pandl,sum_realize_pandl = sum_realize_pandl +v_sum_realize_pandl,comm_batch_no = v_comm_batch_no,combo_status = v_combo_status;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.66.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_处理组合失效
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealComboInvalid;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealComboInvalid(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_record_count int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_record_count = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #方式1-判断完成条数和总条数

    /* select count(1) into @记录个数# from ~交易证券_指令_指令表^  where {机构编号} = @机构编号# and  {指令批号}=@指令批号# and {指令完成标志} = 《指令完成标志-未完成》 and {指令状态} <> 《指令状态-全部撤销》 ; */
    select count(1) into v_record_count from db_tdsecu.tb_tdseap_command  where co_no = v_co_no and  comm_batch_no=v_comm_batch_no and comm_comple_flag = 1 and comm_status <> "6" ;

    /* if  @记录个数# > 0 then */
    if  v_record_count > 0 then

        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = 《组合状态-失效》][{指令批号} = @指令批号#][2][@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = "2" where comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.67.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

    else

        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = 《组合状态-有效》][{指令批号} = @指令批号#][2][@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = "1" where comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.67.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取汇总组合持仓数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetSumComboPosiQty;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetSumComboPosiQty(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_exch_group_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_posi_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_exch_group_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_posi_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_exch_group_no = p_exch_group_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_posi_qty = 0;

    
    label_pro:BEGIN
    

    /* select sum({持仓数量}) into @持仓数量# from ~交易证券_账户_组合持仓表^ where {交易组编号} = @交易组编号# and {证券代码编号} = @证券代码编号#; */
    select sum(posi_qty) into v_posi_qty from db_tdsecu.tb_tdseac_comboposi where exch_group_no = v_exch_group_no and stock_code_no = v_stock_code_no;

    /* set @持仓数量# = ifnull(@持仓数量#,0); */
    set v_posi_qty = ifnull(v_posi_qty,0);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_posi_qty = v_posi_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询组合持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryComboPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryComboPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_账户_组合持仓表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)   and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposi where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)   and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposi where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)   and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_账户_组合持仓表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposi where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposi where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询历史组合持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryHisComboPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryHisComboPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    IN p_begin_date int,
    IN p_end_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][历史_交易证券_账户_组合持仓表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposi_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposi_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][历史_交易证券_账户_组合持仓表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposi_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, open_posi_date, posi_qty, curr_qty, 
            frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
            trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
            strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
            cost_amt, intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposi_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询组合收益
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryComboIncome;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryComboIncome(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_账户_组合收益表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu.tb_tdseac_comboincome where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu.tb_tdseac_comboincome where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_账户_组合收益表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu.tb_tdseac_comboincome where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu.tb_tdseac_comboincome where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询历史组合收益
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryHisComboIncome;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryHisComboIncome(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_begin_date int,
    IN p_end_date int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_begin_date int;
    declare v_end_date int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][历史_交易证券_账户_组合收益表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu_his.tb_tdseac_comboincome_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu_his.tb_tdseac_comboincome_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][历史_交易证券_账户_组合收益表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu_his.tb_tdseac_comboincome_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, open_posi_date, 
            comm_batch_no, combo_code, combo_copies, combo_status, 
            combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
            status_update_date from db_tdsecu_his.tb_tdseac_comboincome_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询单条组合持仓
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QuerySingleComboPosi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QuerySingleComboPosi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_combo_posi_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_stock_acco_no int,
    OUT p_combo_code varchar(32),
    OUT p_stock_code varchar(6),
    OUT p_exch_no int,
    OUT p_stock_code_no int,
    OUT p_open_posi_date int,
    OUT p_curr_qty decimal(18,2),
    OUT p_posi_qty decimal(18,2),
    OUT p_frozen_qty decimal(18,2),
    OUT p_unfroz_qty decimal(18,2),
    OUT p_pre_settle_qty decimal(18,2),
    OUT p_trade_frozen_qty decimal(18,2),
    OUT p_trade_unfroz_qty decimal(18,2),
    OUT p_trade_capt_qty decimal(18,2),
    OUT p_trade_releas_qty decimal(18,2),
    OUT p_strike_capt_qty decimal(18,2),
    OUT p_strike_releas_qty decimal(18,2),
    OUT p_strike_frozen_qty decimal(18,2),
    OUT p_strike_unfroz_qty decimal(18,2),
    OUT p_realize_pandl decimal(18,4),
    OUT p_cost_amt decimal(18,4),
    OUT p_intrst_cost_amt decimal(18,4),
    OUT p_intrst_pandl decimal(18,4),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_combo_posi_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_stock_acco_no int;
    declare v_combo_code varchar(32);
    declare v_stock_code varchar(6);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_open_posi_date int;
    declare v_curr_qty decimal(18,2);
    declare v_posi_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_pre_settle_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_init_date int;
    declare v_posi_status varchar(2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_stock_acco_no = 0;
    SET v_combo_code = " ";
    SET v_stock_code = " ";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_curr_qty = 0;
    SET v_posi_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_pre_settle_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_posi_status = "0";

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_账户_组合持仓表][字段][字段变量][{记录序号} = @组合持仓序号#][4][@组合持仓序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        stock_acco_no, combo_code, stock_code, exch_no, 
        stock_code_no, open_posi_date, posi_qty, curr_qty, 
        frozen_qty, unfroz_qty, pre_settle_qty, trade_frozen_qty, 
        trade_unfroz_qty, trade_capt_qty, trade_releas_qty, strike_capt_qty, 
        strike_releas_qty, strike_frozen_qty, strike_unfroz_qty, realize_pandl, 
        cost_amt, intrst_cost_amt, intrst_pandl, posi_status into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_stock_acco_no, v_combo_code, v_stock_code, v_exch_no, 
        v_stock_code_no, v_open_posi_date, v_posi_qty, v_curr_qty, 
        v_frozen_qty, v_unfroz_qty, v_pre_settle_qty, v_trade_frozen_qty, 
        v_trade_unfroz_qty, v_trade_capt_qty, v_trade_releas_qty, v_strike_capt_qty, 
        v_strike_releas_qty, v_strike_frozen_qty, v_strike_unfroz_qty, v_realize_pandl, 
        v_cost_amt, v_intrst_cost_amt, v_intrst_pandl, v_posi_status from db_tdsecu.tb_tdseac_comboposi where row_id = v_combo_posi_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.73.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_combo_code = v_combo_code;
    SET p_stock_code = v_stock_code;
    SET p_exch_no = v_exch_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_open_posi_date = v_open_posi_date;
    SET p_curr_qty = v_curr_qty;
    SET p_posi_qty = v_posi_qty;
    SET p_frozen_qty = v_frozen_qty;
    SET p_unfroz_qty = v_unfroz_qty;
    SET p_pre_settle_qty = v_pre_settle_qty;
    SET p_trade_frozen_qty = v_trade_frozen_qty;
    SET p_trade_unfroz_qty = v_trade_unfroz_qty;
    SET p_trade_capt_qty = v_trade_capt_qty;
    SET p_trade_releas_qty = v_trade_releas_qty;
    SET p_strike_capt_qty = v_strike_capt_qty;
    SET p_strike_releas_qty = v_strike_releas_qty;
    SET p_strike_frozen_qty = v_strike_frozen_qty;
    SET p_strike_unfroz_qty = v_strike_unfroz_qty;
    SET p_realize_pandl = v_realize_pandl;
    SET p_cost_amt = v_cost_amt;
    SET p_intrst_cost_amt = v_intrst_cost_amt;
    SET p_intrst_pandl = v_intrst_pandl;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新组合卖出成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateComboSaleCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateComboSaleCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_cost_calc_type int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_combo_code varchar(32),
    IN p_combo_posi_id bigint,
    IN p_order_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_cost_calc_type int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_order_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_curr_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_open_posi_date int;
    declare v_posi_qty decimal(18,2);
    declare v_curr_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_cost_calc_type = p_cost_calc_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_combo_code = p_combo_code;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_order_oper_way = p_order_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_curr_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_posi_qty = 0;
    SET v_curr_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_realize_pandl = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# = 《订单方向-新股申购》 or @订单方向# = 《订单方向-配售申购》]; */
    if v_order_dir = 11 or v_order_dir = 23 then
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_账户_组合持仓表][{成本金额},{利息成本金额},{当前数量},{成交占用数量},{成交释放数量},{开仓日期}][@成本金额#,@利息成本金额#,@当前数量#,@成交占用数量#,@成交释放数量#,@开仓日期#][{记录序号}=@组合持仓序号#][1][@组合持仓序号#] */
    select cost_amt,intrst_cost_amt,curr_qty,strike_capt_qty,strike_releas_qty,open_posi_date into v_cost_amt,v_intrst_cost_amt,v_curr_qty,v_strike_capt_qty,v_strike_releas_qty,v_open_posi_date from db_tdsecu.tb_tdseac_comboposi where row_id=v_combo_posi_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.74.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
        end if;
        leave label_pro;
    end if;


    /* SET @持仓数量#=@当前数量#-@成交占用数量#+@成交释放数量# + @成交变动数量#; */
    SET v_posi_qty=v_curr_qty-v_strike_capt_qty+v_strike_releas_qty + v_strike_occur_qty;

    /* if @持仓数量#=0 then */
    if v_posi_qty=0 then

      /* set @当前成本金额#=0; */
      set v_curr_cost_amt=0;
    else

      /* SET @当前成本金额#=Round(@成本金额#*@成交变动数量#/@持仓数量#,2); */
      SET v_curr_cost_amt=Round(v_cost_amt*v_strike_occur_qty/v_posi_qty,2);
    end if;

    /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
    if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

        /* SET @利息收益# = Round((@债券计提利息# * @成交变动数量#),2); */
        SET v_intrst_pandl = Round((v_bond_accr_intrst * v_strike_occur_qty),2);

        /* SET @利息成本金额#=Round(ifnull(@利息成本金额#*@成交变动数量#/@持仓数量#,0),2); */
        SET v_intrst_cost_amt=Round(ifnull(v_intrst_cost_amt*v_strike_occur_qty/v_posi_qty,0),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@债券计提利息# * @成交变动数量#),2); */
            SET v_intrst_cost_amt=Round((v_bond_accr_intrst * v_strike_occur_qty),2);
        end if;
    else

        /* SET @利息收益# = 0; */
        SET v_intrst_pandl = 0;

        /* SET @利息成本金额#=0; */
        SET v_intrst_cost_amt=0;
    end if;

    /* if @市场编号#=《市场编号-沪港通证券交易所》 or @市场编号# = 《市场编号-深港通证券交易所》 then */
    if v_exch_no=3 or v_exch_no = 4 then

        /* SET @利息收益# = Round((@利息收益# * @买入参考汇率#),2); */
        SET v_intrst_pandl = Round((v_intrst_pandl * v_buy_ref_rate),2);

        /* SET @成交变动金额# = Round((@成交变动金额# * @买入参考汇率#),2); */
        SET v_strike_occur_amt = Round((v_strike_occur_amt * v_buy_ref_rate),2);

        /* if @成本计算方式#=《成本计算方式-盈亏冲减成本》 then */
        if v_cost_calc_type=1 then

            /* SET @利息成本金额#=Round((@利息成本金额# * @买入参考汇率#),2); */
            SET v_intrst_cost_amt=Round((v_intrst_cost_amt * v_buy_ref_rate),2);
        end if;
    end if;

    /* if @成本计算方式#=《成本计算方式-盈亏不冲减成本》 then */
    if v_cost_calc_type=2 then

        /* SET @实现盈亏#=round(@成交变动金额# - @利息收益# - @当前成本金额#,2); */
        SET v_realize_pandl=round(v_strike_occur_amt - v_intrst_pandl - v_curr_cost_amt,2);

        /* SET @利息收益#=round(@利息收益# - @利息成本金额#,2); */
        SET v_intrst_pandl=round(v_intrst_pandl - v_intrst_cost_amt,2);

        /* SET @当前成本金额#=Round(@当前成本金额#,2); */
        SET v_curr_cost_amt=Round(v_curr_cost_amt,2);

        /* SET @利息成本金额#=Round(@利息成本金额#,2); */
        SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

        /* [更新表记录][交易证券_账户_组合持仓表][{成本金额}={成本金额}-@当前成本金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{记录序号}=@组合持仓序号#][1][@组合持仓序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_curr_cost_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where row_id=v_combo_posi_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益表][{组合成本}={组合成本}-@当前成本金额#-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#+@利息收益#,{累计实现盈亏} = {累计实现盈亏} + @实现盈亏#+@利息收益#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} = @开仓日期#][1][@交易组编号#,@组合代码#,@开仓日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost-v_curr_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl+v_intrst_pandl,sum_realize_pandl = sum_realize_pandl + v_realize_pandl+v_intrst_pandl where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date = v_open_posi_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合持仓汇总表][{成本金额}={成本金额}-@当前成本金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号#  and {初始化日期} = @初始化日期#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_curr_cost_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no  and init_date = v_init_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合成本}={组合成本}-@当前成本金额#-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#+@利息收益#,{累计实现盈亏} = {累计实现盈亏} + @实现盈亏#+@利息收益#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][1][@交易组编号#,@组合代码#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost-v_curr_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl+v_intrst_pandl,sum_realize_pandl = sum_realize_pandl + v_realize_pandl+v_intrst_pandl where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;

    else

        /* set @实现盈亏#=0; */
        set v_realize_pandl=0;

        /* set @成交变动金额#=round(@成交变动金额#-@利息收益#,2); */
        set v_strike_occur_amt=round(v_strike_occur_amt-v_intrst_pandl,2);

        /* SET @利息收益#=0; */
        SET v_intrst_pandl=0;

        /* SET @利息成本金额#=Round(@利息成本金额#,2); */
        SET v_intrst_cost_amt=Round(v_intrst_cost_amt,2);

        /* [更新表记录][交易证券_账户_组合持仓表][{成本金额}={成本金额}-@成交变动金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{记录序号}=@组合持仓序号#][1][@组合持仓序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposi set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where row_id=v_combo_posi_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("组合持仓序号=",v_combo_posi_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("组合持仓序号=",v_combo_posi_id);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益表][{组合成本}={组合成本}-@成交变动金额#-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#+@利息收益#,{累计实现盈亏} = {累计实现盈亏} + @实现盈亏#+@利息收益#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码# and {开仓日期} = @开仓日期#][1][@交易组编号#,@组合代码#,@开仓日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost-v_strike_occur_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl+v_intrst_pandl,sum_realize_pandl = sum_realize_pandl + v_realize_pandl+v_intrst_pandl where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code and open_posi_date = v_open_posi_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","开仓日期=",v_open_posi_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合持仓汇总表][{成本金额}={成本金额}-@成交变动金额#,{利息成本金额}={利息成本金额}-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#,{利息收益}={利息收益}+@利息收益#][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {组合代码} = @组合代码# and {证券代码编号} = @证券代码编号# and  {初始化日期} = @初始化日期#][1][@交易组编号#,@资产账户编号#,@股东代码编号#,@组合代码#,@证券代码编号#,@初始化日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboposisum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, cost_amt=cost_amt-v_strike_occur_amt,intrst_cost_amt=intrst_cost_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl,intrst_pandl=intrst_pandl+v_intrst_pandl where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and combo_code = v_combo_code and stock_code_no = v_stock_code_no and  init_date = v_init_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","组合代码=",v_combo_code,",","证券代码编号=",v_stock_code_no,",","初始化日期=",v_init_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合成本}={组合成本}-@成交变动金额#-@利息成本金额#,{实现盈亏}={实现盈亏}+@实现盈亏#+@利息收益#,{累计实现盈亏} = {累计实现盈亏} + @实现盈亏#+@利息收益#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @交易组编号# and {组合代码} = @组合代码#][1][@交易组编号#,@组合代码#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_cost=combo_cost-v_strike_occur_amt-v_intrst_cost_amt,realize_pandl=realize_pandl+v_realize_pandl+v_intrst_pandl,sum_realize_pandl = sum_realize_pandl + v_realize_pandl+v_intrst_pandl where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_exch_group_no and combo_code = v_combo_code;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.74.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算交易组资金可用同步产品库
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcExgpCashAvailToPd;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcExgpCashAvailToPd(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_capit_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_shsz_avail_amt decimal(18,4),
    OUT p_hk_avail_amt decimal(18,4),
    OUT p_static_avail_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_capit_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_shsz_avail_amt decimal(18,4);
    declare v_hk_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_tmp_static_avail_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_shsz_avail_amt = 0;
    SET v_hk_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_tmp_static_avail_amt = 0;

    
    label_pro:BEGIN
    
    #获取交易组当日业务可用金额

    /* set @交易端可用金额# = 0; */
    set v_trade_avail_amt = 0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种}='CNY'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
        v_begin_amt, v_curr_amt, v_frozen_amt, v_unfroz_amt, 
        v_comm_frozen_amt, v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, 
        v_trade_frozen_amt, v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, 
        v_strike_capt_amt, v_strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type='CNY' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @交易端可用金额#=-@交易冻结金额#-@交易占用金额#-@成交占用金额#; */
        SET v_trade_avail_amt=-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @静态可用金额#=-@成交占用金额#; */
        SET v_static_avail_amt=-v_strike_capt_amt;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt;
        end if;
    end if;

    /* set @临时_静态可用金额#=@静态可用金额#; */
    set v_tmp_static_avail_amt=v_static_avail_amt;

    /* set @沪深可用金额#=@交易端可用金额#; */
    set v_shsz_avail_amt=v_trade_avail_amt;

    /* set @交易端可用金额#=0; */
    set v_trade_avail_amt=0;

    /* set @静态可用金额#=0; */
    set v_static_avail_amt=0;

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][字段][字段变量][{交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种}='HKD'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_crncy_type, 
        begin_amt, curr_amt, frozen_amt, unfroz_amt, 
        comm_frozen_amt, comm_unfroz_amt, comm_capt_amt, comm_releas_amt, 
        trade_frozen_amt, trade_unfroz_amt, trade_capt_amt, trade_releas_amt, 
        strike_capt_amt, strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, 
        v_begin_amt, v_curr_amt, v_frozen_amt, v_unfroz_amt, 
        v_comm_frozen_amt, v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, 
        v_trade_frozen_amt, v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, 
        v_strike_capt_amt, v_strike_releas_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type='HKD' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @交易端可用金额#=(-@交易冻结金额#-@交易占用金额#-@成交占用金额#) * @卖出参考汇率#; */
        SET v_trade_avail_amt=(-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt) * v_sell_ref_rate;

        /* SET @静态可用金额#=-@成交占用金额# * @卖出参考汇率#; */
        SET v_static_avail_amt=-v_strike_capt_amt * v_sell_ref_rate;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt * v_buy_ref_rate;
        end if;
    end if;

    /* set @港股可用金额#=@交易端可用金额#; */
    set v_hk_avail_amt=v_trade_avail_amt;

    /* set @静态可用金额# = @静态可用金额# + @临时_静态可用金额#; */
    set v_static_avail_amt = v_static_avail_amt + v_tmp_static_avail_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_shsz_avail_amt = v_shsz_avail_amt;
    SET p_hk_avail_amt = v_hk_avail_amt;
    SET p_static_avail_amt = v_static_avail_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_计算资产账户资金可用同步产品库
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CalcAsacCashAvailToPd;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CalcAsacCashAvailToPd(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_capit_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_shsz_avail_amt decimal(18,4),
    OUT p_hk_avail_amt decimal(18,4),
    OUT p_static_avail_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_capit_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_shsz_avail_amt decimal(18,4);
    declare v_hk_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_tmp_static_avail_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_shsz_avail_amt = 0;
    SET v_hk_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_tmp_static_avail_amt = 0;

    
    label_pro:BEGIN
    
    #获取资产账户当日业务可用金额

    /* set @交易端可用金额# = 0; */
    set v_trade_avail_amt = 0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务资金表][字段][字段变量][{资产账户编号}=@资产账户编号# and {交易币种}='CNY'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
        v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
        v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
        v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
        v_strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where asset_acco_no=v_asset_acco_no and exch_crncy_type='CNY' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @交易端可用金额#=-@交易冻结金额#-@交易占用金额#-@成交占用金额#; */
        SET v_trade_avail_amt=-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt;

        /* SET @静态可用金额#=-@成交占用金额#; */
        SET v_static_avail_amt=-v_strike_capt_amt;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt;
        end if;
    end if;

    /* set @临时_静态可用金额#=@静态可用金额#; */
    set v_tmp_static_avail_amt=v_static_avail_amt;

    /* set @沪深可用金额#=@交易端可用金额#; */
    set v_shsz_avail_amt=v_trade_avail_amt;

    /* set @交易端可用金额#=0; */
    set v_trade_avail_amt=0;

    /* set @静态可用金额#=0; */
    set v_static_avail_amt=0;

    /* [获取表记录变量语句][交易证券_账户_资产账户业务资金表][字段][字段变量][{资产账户编号}=@资产账户编号# and {交易币种}='HKD'] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, co_no, 
        pd_no, asset_acco_no, exch_crncy_type, begin_amt, 
        curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
        comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
        trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
        strike_releas_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
        v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
        v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
        v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
        v_strike_releas_amt from db_tdsecu.tb_tdseac_asac_busi_capit where asset_acco_no=v_asset_acco_no and exch_crncy_type='HKD' limit 1;

    if FOUND_ROWS() <> 0 then

        /* SET @交易端可用金额#=(-@交易冻结金额#-@交易占用金额#-@成交占用金额#) * @卖出参考汇率#; */
        SET v_trade_avail_amt=(-v_trade_frozen_amt-v_trade_capt_amt-v_strike_capt_amt) * v_sell_ref_rate;

        /* SET @静态可用金额#=-@成交占用金额# * @卖出参考汇率#; */
        SET v_static_avail_amt=-v_strike_capt_amt * v_sell_ref_rate;

        /* if @资金回转天数#<=1 then */
        if v_capit_reback_days<=1 then

            /* set @交易端可用金额#=@交易端可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_trade_avail_amt=v_trade_avail_amt+v_strike_releas_amt * v_buy_ref_rate;

            /* set @静态可用金额#=@静态可用金额#+@成交释放金额# * @买入参考汇率#; */
            set v_static_avail_amt=v_static_avail_amt+v_strike_releas_amt * v_buy_ref_rate;
        end if;
    end if;

    /* set @港股可用金额# = @交易端可用金额#; */
    set v_hk_avail_amt = v_trade_avail_amt;

    /* set @静态可用金额# = @静态可用金额# + @临时_静态可用金额#; */
    set v_static_avail_amt = v_static_avail_amt + v_tmp_static_avail_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_shsz_avail_amt = v_shsz_avail_amt;
    SET p_hk_avail_amt = v_hk_avail_amt;
    SET p_static_avail_amt = v_static_avail_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询组合持仓汇总
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryComboPosiSum;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryComboPosiSum(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_账户_组合持仓汇总表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)   and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposisum where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)   and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposisum where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)   and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_账户_组合持仓汇总表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposisum where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu.tb_tdseac_comboposisum where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询历史组合持仓汇总
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryHisComboPosiSum;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryHisComboPosiSum(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    IN p_begin_date int,
    IN p_end_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][历史_交易证券_账户_组合持仓汇总表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposisum_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposisum_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][历史_交易证券_账户_组合持仓汇总表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposisum_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            stock_acco_no, combo_code, stock_code, exch_no, 
            stock_code_no, posi_qty, curr_qty, frozen_qty, 
            unfroz_qty, pre_settle_qty, trade_frozen_qty, trade_unfroz_qty, 
            trade_capt_qty, trade_releas_qty, strike_capt_qty, strike_releas_qty, 
            strike_frozen_qty, strike_unfroz_qty, realize_pandl, cost_amt, 
            intrst_cost_amt, intrst_pandl, posi_status from db_tdsecu_his.tb_tdseac_comboposisum_his where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询组合收益汇总
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryComboIncomeSum;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryComboIncomeSum(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_账户_组合收益汇总表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu.tb_tdseac_comboincomesum where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu.tb_tdseac_comboincomesum where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_账户_组合收益汇总表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu.tb_tdseac_comboincomesum where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu.tb_tdseac_comboincomesum where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询历史组合收益汇总
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryHisComboIncomeSum;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryHisComboIncomeSum(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_begin_date int,
    IN p_end_date int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_begin_date int;
    declare v_end_date int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][历史_交易证券_账户_组合收益汇总表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu_his.tb_tdseac_comboincomesum_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu_his.tb_tdseac_comboincomesum_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][历史_交易证券_账户_组合收益汇总表][字段][ (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and  (@组合代码# = " " or {组合代码} = @组合代码#)  and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu_his.tb_tdseac_comboincomesum_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, init_date, 
            co_no, pd_no, exch_group_no, comm_batch_no, 
            combo_code, combo_copies, combo_status, combo_cost, 
            combo_market_value, realize_pandl, sum_realize_pandl, status_update_date from db_tdsecu_his.tb_tdseac_comboincomesum_his where  (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and  (v_combo_code = " " or combo_code = v_combo_code)  and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询N天期内可赎回数量
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryRedemptionQtyNDays;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryRedemptionQtyNDays(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_combo_code varchar(32),
    IN p_stock_code_no int,
    IN p_stat_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_stat_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_combo_code varchar(32);
    declare v_stock_code_no int;
    declare v_stat_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_stat_qty decimal(18,2);
    declare v_init_date int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_combo_code = p_combo_code;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stat_days = p_stat_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_stat_qty = 0;
    SET v_init_date = date_format(curdate(),'%Y%m%d');

    
    label_pro:BEGIN
    

    /* select sum({持仓数量}) into @统计数量# from ~交易证券_账户_组合持仓表^ where {交易组编号} = @交易组编号# and {证券代码编号} = @证券代码编号# and {组合代码} = @组合代码# and ({开仓日期} - @初始化日期#)<=@统计天数# ; */
    select sum(posi_qty) into v_stat_qty from db_tdsecu.tb_tdseac_comboposi where exch_group_no = v_exch_group_no and stock_code_no = v_stock_code_no and combo_code = v_combo_code and (open_posi_date - v_init_date)<=v_stat_days ;

    /* set @统计数量# = ifnull(@统计数量#,0); */
    set v_stat_qty = ifnull(v_stat_qty,0);
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_stat_qty = v_stat_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_新增组合持仓划转流水
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_AddComboPosiTransferLog;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_AddComboPosiTransferLog(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_stock_acco_no int,
    IN p_combo_code varchar(32),
    IN p_stock_code varchar(6),
    IN p_exch_no int,
    IN p_stock_code_no int,
    IN p_combo_posi_id bigint,
    IN p_source_date int,
    IN p_occur_cost_amt decimal(18,4),
    IN p_occur_qty decimal(18,2),
    IN p_target_combo_posi_id bigint,
    IN p_target_date int,
    IN p_target_combo_code varchar(32),
    IN p_target_exch_group_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_stock_acco_no int;
    declare v_combo_code varchar(32);
    declare v_stock_code varchar(6);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_combo_posi_id bigint;
    declare v_source_date int;
    declare v_occur_cost_amt decimal(18,4);
    declare v_occur_qty decimal(18,2);
    declare v_target_combo_posi_id bigint;
    declare v_target_date int;
    declare v_target_combo_code varchar(32);
    declare v_target_exch_group_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_combo_code = p_combo_code;
    SET v_stock_code = p_stock_code;
    SET v_exch_no = p_exch_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_combo_posi_id = p_combo_posi_id;
    SET v_source_date = p_source_date;
    SET v_occur_cost_amt = p_occur_cost_amt;
    SET v_occur_qty = p_occur_qty;
    SET v_target_combo_posi_id = p_target_combo_posi_id;
    SET v_target_date = p_target_date;
    SET v_target_combo_code = p_target_combo_code;
    SET v_target_exch_group_no = p_target_exch_group_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [插入表记录][交易证券_账户_组合持仓划转流水表][字段][字段变量][1][@交易组编号#,@目标交易组编号#,@变动成本金额#,@变动数量#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_combopositransferlog(
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, stock_acco_no, 
        combo_code, stock_code, exch_no, stock_code_no, 
        combo_posi_id, source_date, occur_cost_amt, occur_qty, 
        target_combo_posi_id, target_date, target_combo_code, target_exch_group_no) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_stock_acco_no, 
        v_combo_code, v_stock_code, v_exch_no, v_stock_code_no, 
        v_combo_posi_id, v_source_date, v_occur_cost_amt, v_occur_qty, 
        v_target_combo_posi_id, v_target_date, v_target_combo_code, v_target_exch_group_no);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.82.1";
        SET v_error_info =  CONCAT(concat("交易组编号=",v_exch_group_no,",","目标交易组编号=",v_target_exch_group_no,",","变动成本金额=",v_occur_cost_amt,",","变动数量=",v_occur_qty),"#",v_mysql_message);
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_核对可取金额差异
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_CheckDesirAmtDiff;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_CheckDesirAmtDiff(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_default_exch_group_no int,
    IN p_exgp_curr_amt decimal(18,4),
    IN p_exgp_frozen_amt decimal(18,4),
    IN p_exgp_unfroz_amt decimal(18,4),
    IN p_exgp_shsz_avail_change_amt decimal(18,4),
    IN p_exgp_amt_check_diff decimal(18,4),
    IN p_exgp_T_hk_buy_total_amt decimal(18,4),
    IN p_exgp_T_hk_sell_total_amt decimal(18,4),
    IN p_exgp_T1_hk_buy_total_amt decimal(18,4),
    IN p_exgp_T1_hk_sell_total_amt decimal(18,4),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_default_exch_group_no int;
    declare v_exgp_curr_amt decimal(18,4);
    declare v_exgp_frozen_amt decimal(18,4);
    declare v_exgp_unfroz_amt decimal(18,4);
    declare v_exgp_shsz_avail_change_amt decimal(18,4);
    declare v_exgp_amt_check_diff decimal(18,4);
    declare v_exgp_T_hk_buy_total_amt decimal(18,4);
    declare v_exgp_T_hk_sell_total_amt decimal(18,4);
    declare v_exgp_T1_hk_buy_total_amt decimal(18,4);
    declare v_exgp_T1_hk_sell_total_amt decimal(18,4);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_exch_group_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_trade_capt_amt decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_tmp_trade_capt_amt decimal(18,4);
    declare v_tmp_strike_capt_amt decimal(18,4);
    declare v_fetch_amt decimal(18,4);
    declare v_out_acco varchar(32);
    declare v_stock_acco varchar(16);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_code_no int;
    declare v_order_date int;
    declare v_order_id bigint;
    declare v_strike_date int;
    declare v_strike_id bigint;
    declare v_order_dir int;
    declare v_occur_amt decimal(18,4);
    declare v_occur_qty decimal(18,2);
    declare v_amt_diff decimal(18,4);
    declare v_diff_qty decimal(18,2);
    declare v_deal_amt_diff decimal(18,4);
    declare v_deal_diff_qty decimal(18,2);
    declare v_deal_status varchar(2);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_default_exch_group_no = p_default_exch_group_no;
    SET v_exgp_curr_amt = p_exgp_curr_amt;
    SET v_exgp_frozen_amt = p_exgp_frozen_amt;
    SET v_exgp_unfroz_amt = p_exgp_unfroz_amt;
    SET v_exgp_shsz_avail_change_amt = p_exgp_shsz_avail_change_amt;
    SET v_exgp_amt_check_diff = p_exgp_amt_check_diff;
    SET v_exgp_T_hk_buy_total_amt = p_exgp_T_hk_buy_total_amt;
    SET v_exgp_T_hk_sell_total_amt = p_exgp_T_hk_sell_total_amt;
    SET v_exgp_T1_hk_buy_total_amt = p_exgp_T1_hk_buy_total_amt;
    SET v_exgp_T1_hk_sell_total_amt = p_exgp_T1_hk_sell_total_amt;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_exch_group_no = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_trade_capt_amt = 0;
    SET v_strike_capt_amt = 0;
    SET v_tmp_trade_capt_amt = 0;
    SET v_tmp_strike_capt_amt = 0;
    SET v_fetch_amt = 0;
    SET v_out_acco = " ";
    SET v_stock_acco = " ";
    SET v_exch_no = 0;
    SET v_stock_code = " ";
    SET v_stock_code_no = 0;
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_id = 0;
    SET v_strike_date = date_format(curdate(),'%Y%m%d');
    SET v_strike_id = 0;
    SET v_order_dir = 0;
    SET v_occur_amt = 0;
    SET v_occur_qty = 0;
    SET v_amt_diff = 0;
    SET v_diff_qty = 0;
    SET v_deal_amt_diff = 0;
    SET v_deal_diff_qty = 0;
    SET v_deal_status = "0";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    
    #对比默认交易组的可取金额,如果差额为负值,那么记录差异流水,否则不记录

    /* set @交易组编号#=@默认交易组编号#; */
    set v_exch_group_no=v_default_exch_group_no;

    /* set @交易币种#="CNY"; */
    set v_exch_crncy_type="CNY";

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][{交易占用金额},{成交占用金额}][@交易占用金额#,@成交占用金额#][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {交易币种}=@交易币种#] */
    select trade_capt_amt,strike_capt_amt into v_trade_capt_amt,v_strike_capt_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and exch_crncy_type=v_exch_crncy_type limit 1;


    /* set @交易币种#="HKD"; */
    set v_exch_crncy_type="HKD";

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金表][{交易占用金额},{成交占用金额}][@临时_交易占用金额#,@临时_成交占用金额#][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {交易币种}=@交易币种#] */
    select trade_capt_amt,strike_capt_amt into v_tmp_trade_capt_amt,v_tmp_strike_capt_amt from db_tdsecu.tb_tdseac_exgp_busi_capit where exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and exch_crncy_type=v_exch_crncy_type limit 1;

    #可取金额=当前金额-冻结金额+解冻金额+金额核对差额+沪深可用调整金额+min(T日港股卖出金额-T日港股买入金额,0)+min(T1日港股卖出金额-T1日港股买入金额,0)-交易库交易占用金额-交易库成交占用金额
    #此处的可取金额是银证转账后的可取金额,如果是证券转银行,有可能会出现默认交易组转出后的可取金额为负值的情况

    /* set @可取金额#=@交易组当前金额#-@交易组冻结金额#+@交易组解冻金额#+@交易组金额核对差额#+@交易组沪深可用调整金额#-@交易占用金额#-@成交占用金额#-@临时_交易占用金额#-@临时_成交占用金额#; */
    set v_fetch_amt=v_exgp_curr_amt-v_exgp_frozen_amt+v_exgp_unfroz_amt+v_exgp_amt_check_diff+v_exgp_shsz_avail_change_amt-v_trade_capt_amt-v_strike_capt_amt-v_tmp_trade_capt_amt-v_tmp_strike_capt_amt;

    /* if @可取金额#<0 then */
    if v_fetch_amt<0 then

        /* set @外部账号#=" "; */
        set v_out_acco=" ";

        /* set @股东代码#=" "; */
        set v_stock_acco=" ";

        /* set @市场编号#=0; */
        set v_exch_no=0;

        /* set @证券代码#=" "; */
        set v_stock_code=" ";

        /* set @证券代码编号#=0; */
        set v_stock_code_no=0;

        /* set @订单日期#=@初始化日期#; */
        set v_order_date=v_init_date;

        /* set @订单序号#=0; */
        set v_order_id=0;

        /* set @成交日期#=@初始化日期#; */
        set v_strike_date=v_init_date;

        /* set @成交序号#=0; */
        set v_strike_id=0;

        /* set @订单方向#=0; */
        set v_order_dir=0;

        /* set @变动金额#=@可取金额#; */
        set v_occur_amt=v_fetch_amt;

        /* set @变动数量#=0; */
        set v_occur_qty=0;

        /* set @金额差额#=0; */
        set v_amt_diff=0;

        /* set @数量差额#=0; */
        set v_diff_qty=0;

        /* set @已处理金额差额#=0; */
        set v_deal_amt_diff=0;

        /* set @已处理数量差额#=0; */
        set v_deal_diff_qty=0;

        /* set @处理状态#="1"; */
        set v_deal_status="1";

        /* [插入表记录][交易证券_报盘_体外交易差额记录表][字段][字段变量][1][@资产账户编号#,@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdserp_outtradedifflog(
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, out_acco, 
            stock_acco, exch_no, stock_code, stock_code_no, 
            order_date, order_id, strike_date, strike_id, 
            order_dir, occur_amt, occur_qty, amt_diff, 
            diff_qty, deal_amt_diff, deal_diff_qty, deal_status) 
        value( 
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_out_acco, 
            v_stock_acco, v_exch_no, v_stock_code, v_stock_code_no, 
            v_order_date, v_order_id, v_strike_date, v_strike_id, 
            v_order_dir, v_occur_amt, v_occur_qty, v_amt_diff, 
            v_diff_qty, v_deal_amt_diff, v_deal_diff_qty, v_deal_status);
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.83.1";
            SET v_error_info =  CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易组编号=",v_exch_group_no),"#",v_mysql_message);
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_归档处理组合失效
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_BackDealComboInvalid;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_BackDealComboInvalid(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_record_count int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_record_count = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #方式1-判断完成条数和总条数

    /* select count(1) into @记录个数# from ~交易证券_指令_指令表^  where {机构编号} = @机构编号# and  {指令批号}=@指令批号# and {指令完成标志} = 《指令完成标志-未完成》 and {指令状态} <> 《指令状态-全部撤销》 and (@初始化日期# between  {指令开始日期} and {指令结束日期}); */
    select count(1) into v_record_count from db_tdsecu.tb_tdseap_command  where co_no = v_co_no and  comm_batch_no=v_comm_batch_no and comm_comple_flag = 1 and comm_status <> "6" and (v_init_date between  comm_begin_date and comm_end_date);

    /* if  @记录个数# > 0 then */
    if  v_record_count > 0 then

        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = 《组合状态-失效》][{指令批号} = @指令批号#][2][@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = "2" where comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.84.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

    else

        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = 《组合状态-有效》][{指令批号} = @指令批号#][2][@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = "1" where comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.84.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_处理组合状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealComboStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealComboStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_combo_status varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_combo_status varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_status_update_date int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_combo_status = p_combo_status;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

        /* [获取机器日期][@状态更新日期#] */
        select date_format(curdate(),'%Y%m%d') into v_status_update_date;


        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = @组合状态#,{状态更新日期} = @状态更新日期#][{机构编号} = @机构编号# and {指令批号} = @指令批号#][2][@机构编号#,@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = v_combo_status,status_update_date = v_status_update_date where co_no = v_co_no and comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.85.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合状态} = @组合状态#,{状态更新日期} = @状态更新日期#][{机构编号} = @机构编号# and {指令批号} = @指令批号#][2][@机构编号#,@指令批号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = v_combo_status,status_update_date = v_status_update_date where co_no = v_co_no and comm_batch_no = v_comm_batch_no;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.85.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_归档处理组合状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_BackDealComboStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_BackDealComboStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_combo_status varchar(2);
    declare v_combo_code varchar(32);
    declare v_status_update_date int;
    declare v_create_end_validity_date int;
    declare v_rebalance_end_validity_date int;
    declare v_repair_end_validity_date int;
    declare v_broke_validity_date int;
    declare v_inteval_days int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_combo_status = "0";
    SET v_combo_code = " ";
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_create_end_validity_date = 0;
    SET v_rebalance_end_validity_date = 0;
    SET v_repair_end_validity_date = 0;
    SET v_broke_validity_date = 0;
    SET v_inteval_days = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_账户_组合收益表][{组合状态},{组合代码},{状态更新日期}][@组合状态#,@组合代码#,@状态更新日期#][{机构编号} = @机构编号# and {指令批号}=@指令批号#][4][@机构编号#,@指令批号#] */
    select combo_status,combo_code,status_update_date into v_combo_status,v_combo_code,v_status_update_date from db_tdsecu.tb_tdseac_comboincome where co_no = v_co_no and comm_batch_no=v_comm_batch_no limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.86.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no);
        end if;
        leave label_pro;
    end if;


    /* [检查正常返回][@组合状态# <> 《组合状态-创建失败》 and @组合状态# <> 《组合状态-补单失败》 and @组合状态# <> 《组合状态-再平衡失败》 and @组合状态# <>《组合状态-破坏》] */
    if v_combo_status <> "5" and v_combo_status <> "19" and v_combo_status <> "13" and v_combo_status <>"7" then
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_公用_组合表][{创建结束有效期},{再平衡结束有效期},{补单结束有效期},{破坏有效期}][@创建结束有效期#,@再平衡结束有效期#,@补单结束有效期#,@破坏有效期#][{机构编号} = @机构编号# and {组合代码}=@组合代码#][4][@机构编号#,@组合代码#] */
    select create_end_validity_date,rebalance_end_validity_date,repair_end_validity_date,broke_validity_date into v_create_end_validity_date,v_rebalance_end_validity_date,v_repair_end_validity_date,v_broke_validity_date from db_tdsecu.tb_tdsepb_combo where co_no = v_co_no and combo_code=v_combo_code limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.86.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
        else
            SET v_error_info = concat("机构编号=",v_co_no,",","组合代码=",v_combo_code);
        end if;
        leave label_pro;
    end if;


    /* set @间隔天数# = DATEDIFF(@初始化日期#,@状态更新日期#); */
    set v_inteval_days = DATEDIFF(v_init_date,v_status_update_date);

    /* if @破坏有效期# > 0 and @间隔天数# > @破坏有效期# then */
    if v_broke_validity_date > 0 and v_inteval_days > v_broke_validity_date then

        /* set @组合状态# = 《组合状态-破坏》; */
        set v_combo_status = "7";

        /* 调用【原子_交易证券_账户_处理组合状态】*/
        call db_tdsecu.pra_tdseac_DealComboStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_comm_batch_no,
            v_combo_status,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.86.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


    /* elseif @组合状态# = 《组合状态-创建失败》 and @创建结束有效期# > 0 and @间隔天数# > @创建结束有效期# then */
    elseif v_combo_status = "5" and v_create_end_validity_date > 0 and v_inteval_days > v_create_end_validity_date then

        /* set @组合状态# = 《组合状态-结束》; */
        set v_combo_status = "20";

        /* 调用【原子_交易证券_账户_处理组合状态】*/
        call db_tdsecu.pra_tdseac_DealComboStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_comm_batch_no,
            v_combo_status,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.86.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


    /* elseif @组合状态# = 《组合状态-再平衡失败》 and @再平衡结束有效期# > 0 and @间隔天数# > @再平衡结束有效期# then */
    elseif v_combo_status = "13" and v_rebalance_end_validity_date > 0 and v_inteval_days > v_rebalance_end_validity_date then

        /* set @组合状态# = 《组合状态-结束》; */
        set v_combo_status = "20";

        /* 调用【原子_交易证券_账户_处理组合状态】*/
        call db_tdsecu.pra_tdseac_DealComboStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_comm_batch_no,
            v_combo_status,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.86.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


    /* elseif @组合状态# = 《组合状态-补单失败》 and @补单结束有效期# > 0 and @间隔天数# > @补单结束有效期# then */
    elseif v_combo_status = "19" and v_repair_end_validity_date > 0 and v_inteval_days > v_repair_end_validity_date then

        /* set @组合状态# = 《组合状态-结束》; */
        set v_combo_status = "20";

        /* 调用【原子_交易证券_账户_处理组合状态】*/
        call db_tdsecu.pra_tdseac_DealComboStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_comm_batch_no,
            v_combo_status,
            v_error_code,
            v_error_info);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.86.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_超出期限处理组合状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_OutDayDealComboStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_OutDayDealComboStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_comm_oper_way varchar(2),
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_comm_oper_way varchar(2);
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_combo_status varchar(2);
    declare v_combo_code varchar(32);
    declare v_status_update_date int;
    declare v_create_failure_validity_date int;
    declare v_rebalance_failure_validity_date int;
    declare v_repair_failure_validity_date int;
    declare v_inteval_days int;
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_combo_status = "0";
    SET v_combo_code = " ";
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_create_failure_validity_date = 0;
    SET v_rebalance_failure_validity_date = 0;
    SET v_repair_failure_validity_date = 0;
    SET v_inteval_days = 0;
    SET v_record_count = 0;

    
    label_pro:BEGIN
    

        /* [获取表记录变量][交易证券_账户_组合收益表][{组合状态},{组合代码},{状态更新日期}][@组合状态#,@组合代码#,@状态更新日期#][{机构编号} = @机构编号# and     {指令批号}=@指令批号#][4][@机构编号#,@指令批号#] */
        select combo_status,combo_code,status_update_date into v_combo_status,v_combo_code,v_status_update_date from db_tdsecu.tb_tdseac_comboincome where co_no = v_co_no and     comm_batch_no=v_comm_batch_no limit 1;
        if FOUND_ROWS() = 0 then
                    
            SET v_error_code = "tdsecuA.2.87.4";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","指令批号=",v_comm_batch_no);
            end if;
            leave label_pro;
        end if;

        #[检查正常返回][@组合状态# <> 《组合状态-创建失败》 and @组合状态# <> 《组合状态-补单失败》 and @组合状态# <> 《组合状态-再平衡失败》 and @组合状态#     <>《组合状态-破坏》]

        /* [获取表记录变量][交易证券_公用_组合表][{创建失败有效期},{再平衡失败有效期},{补单失败有效期}][@创建失败有效期#,@再平衡失败有效期#,@补单失败有效期#][{机构编号}     = @机构编号# and {组合代码}=@组合代码#][4][@机构编号#,@组合代码#] */
        select create_failure_validity_date,rebalance_failure_validity_date,repair_failure_validity_date into v_create_failure_validity_date,v_rebalance_failure_validity_date,v_repair_failure_validity_date from db_tdsecu.tb_tdsepb_combo where co_no     = v_co_no and combo_code=v_combo_code limit 1;
        if FOUND_ROWS() = 0 then
                    
            SET v_error_code = "tdsecuA.2.87.4";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","组合代码=",v_combo_code);
            end if;
            leave label_pro;
        end if;


        /* set @间隔天数# = DATEDIFF(@初始化日期#,@状态更新日期#); */
        set v_inteval_days = DATEDIFF(v_init_date,v_status_update_date);

        /* if @指令操作方式# = 《指令操作方式-中泰手机APP》 or @指令操作方式# = 《指令操作方式-中泰交易业务系统》 and @创建失败有效期# > 0 and @间隔天数# > @创建失败有效期#     then */
        if v_comm_oper_way = "31" or v_comm_oper_way = "32" and v_create_failure_validity_date > 0 and v_inteval_days > v_create_failure_validity_date     then

            /* set @组合状态# = 《组合状态-创建失败》; */
            set v_combo_status = "5";

        /* elseif @指令操作方式# = 《指令操作方式-中泰组合补指令》 and @再平衡失败有效期# > 0 and @间隔天数# > @再平衡失败有效期# then */
        elseif v_comm_oper_way = "33" and v_rebalance_failure_validity_date > 0 and v_inteval_days > v_rebalance_failure_validity_date then

            /* set @组合状态# = 《组合状态-再平衡失败》; */
            set v_combo_status = "13";

        /* elseif @指令操作方式# = 《指令操作方式-中泰组合再平衡》 and @补单失败有效期# > 0 and @间隔天数# > @补单失败有效期# then */
        elseif v_comm_oper_way = "34" and v_repair_failure_validity_date > 0 and v_inteval_days > v_repair_failure_validity_date then

            /* set @组合状态# = 《组合状态-补单失败》; */
            set v_combo_status = "19";
        end if;
        #是否存在在途交易,不存在则更新组合状态。判断指令批号下的当前订单表和历史订单表是否存在已报、待撤、部成的订单

        /* 调用【原子_交易证券_指令_判断同批指令存在在途交易】*/
        call db_tdsecu.pra_tdseap_CheckBatchCommExistOnwayOrder(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_batch_no,
            v_co_no,
            v_error_code,
            v_error_info,
            v_record_count);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.87.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_判断同批指令存在在途交易出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if @记录个数#=0 then */
        if v_record_count=0 then

            /* 调用【原子_交易证券_账户_处理组合状态】*/
            call db_tdsecu.pra_tdseac_DealComboStatus(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_comm_batch_no,
                v_combo_status,
                v_error_code,
                v_error_info);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.87.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取组合创建状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetComboCreateStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetComboCreateStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_oper_way varchar(2),
    IN p_comm_dir int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_combo_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_combo_status varchar(2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_comm_dir = p_comm_dir;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_combo_status = "0";

    
    label_pro:BEGIN
    

    /* set @组合状态# =《组合状态-创建中》; */
    set v_combo_status ="3";

    /* if @指令操作方式# = 《指令操作方式-中泰手机APP》 or @指令操作方式# = 《指令操作方式-中泰交易业务系统》 then */
    if v_comm_oper_way = "31" or v_comm_oper_way = "32" then

        /* set @组合状态# =《组合状态-创建中》; */
        set v_combo_status ="3";

    /* elseif @指令操作方式# = 《指令操作方式-中泰组合再平衡》 then */
    elseif v_comm_oper_way = "34" then

        /* if @指令方向# = 《指令方向-基金申购》 then */
        if v_comm_dir = 9 then

            /* set @组合状态# =《组合状态-再平衡申购中》; */
            set v_combo_status ="11";

        /* elseif @指令方向# = 《指令方向-基金赎回》 then */
        elseif v_comm_dir = 10 then

            /* set @组合状态# =《组合状态-再平衡赎回中》; */
            set v_combo_status ="8";
        end if;

    /* elseif @指令操作方式# = 《指令操作方式-中泰组合补指令》 then */
    elseif v_comm_oper_way = "33" then

        /* if @指令方向# = 《指令方向-基金申购》 then */
        if v_comm_dir = 9 then

            /* set @组合状态# =《组合状态-补单申购中》; */
            set v_combo_status ="17";

        /* elseif @指令方向# = 《指令方向-基金赎回》 then */
        elseif v_comm_dir = 10 then

            /* set @组合状态# =《组合状态-补单赎回中》; */
            set v_combo_status ="14";
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_combo_status = v_combo_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取组合异常状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetComboUnusualStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetComboUnusualStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_oper_way varchar(2),
    IN p_comm_dir int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_combo_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_combo_status varchar(2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_comm_dir = p_comm_dir;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_combo_status = "0";

    
    label_pro:BEGIN
    

    /* set @组合状态# =《组合状态-创建中》; */
    set v_combo_status ="3";

    /* if @指令操作方式# = 《指令操作方式-中泰手机APP》 or @指令操作方式# = 《指令操作方式-中泰交易业务系统》 then */
    if v_comm_oper_way = "31" or v_comm_oper_way = "32" then

        /* set @组合状态#=《组合状态-创建委托异常》; */
        set v_combo_status="4";

    /* elseif @指令操作方式# = 《指令操作方式-中泰组合再平衡》 then */
    elseif v_comm_oper_way = "34" then

        /* if @指令方向# = 《指令方向-基金申购》 then */
        if v_comm_dir = 9 then

            /* set @组合状态#=《组合状态-再平衡申购异常》; */
            set v_combo_status="12";

        /* elseif @指令方向# = 《指令方向-基金赎回》 then */
        elseif v_comm_dir = 10 then

            /* set @组合状态#=《组合状态-再平衡赎回异常》; */
            set v_combo_status="10";
        end if;

    /* elseif @指令操作方式# = 《指令操作方式-中泰组合补指令》 then */
    elseif v_comm_oper_way = "33" then

        /* if @指令方向# = 《指令方向-基金申购》 then */
        if v_comm_dir = 9 then

            /* set @组合状态#=《组合状态-补单申购异常》; */
            set v_combo_status="18";

        /* elseif @指令方向# = 《指令方向-基金赎回》 then */
        elseif v_comm_dir = 10 then

            /* set @组合状态#=《组合状态-补单赎回异常》; */
            set v_combo_status="16";
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_combo_status = v_combo_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_非默认交易组唯一存在持仓破坏组合
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_DealNotDefaultExgpBroke;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_DealNotDefaultExgpBroke(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_default_exch_group_no int,
    IN p_init_date int,
    IN p_stock_code_no int,
    IN p_asset_acco_no int,
    IN p_stock_acco_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_default_exch_group_no int;
    declare v_init_date int;
    declare v_stock_code_no int;
    declare v_asset_acco_no int;
    declare v_stock_acco_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_status_update_date int;
    declare v_combo_status varchar(2);
    declare v_record_count int;
    declare v_tmp_record_count int;
    declare v_combo_code varchar(32);
    declare v_open_posi_date int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_exch_group_no int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_default_exch_group_no = p_default_exch_group_no;
    SET v_init_date = p_init_date;
    SET v_stock_code_no = p_stock_code_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_combo_status = "0";
    SET v_record_count = 0;
    SET v_tmp_record_count = 0;
    SET v_combo_code = " ";
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_exch_group_no = 0;

    
    label_pro:BEGIN
    

    /* [获取机器日期][@状态更新日期#] */
    select date_format(curdate(),'%Y%m%d') into v_status_update_date;


    /* set @组合状态# = 《组合状态-破坏》; */
    set v_combo_status = "7";

    /* set @记录个数#=0; */
    set v_record_count=0;

    /* set @临时_记录个数#=0; */
    set v_tmp_record_count=0;
    #判断场外基金持仓表，如果只存在一条默认交易组下的该代码持仓，则更新存破坏

    /* [获取表记录数量][交易证券_账户_组合持仓表][@记录个数#][{交易组编号}=@默认交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select count(1) into v_record_count from db_tdsecu.tb_tdseac_comboposi where exch_group_no=v_default_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no;


    /* set @临时_记录个数# = @记录个数#; */
    set v_tmp_record_count = v_record_count;

    /* select count(1) into @记录个数# from ~交易证券_公用_组合证券表^ where {机构编号} = @机构编号# and {证券代码编号} = @证券代码编号#; */
    select count(1) into v_record_count from db_tdsecu.tb_tdsepb_combostock where co_no = v_co_no and stock_code_no = v_stock_code_no;

    /* if @记录个数# = 1 and @临时_记录个数# = 1 then */
    if v_record_count = 1 and v_tmp_record_count = 1 then

        /* select {组合代码} into @组合代码# from ~交易证券_公用_组合证券表^ where {机构编号} = @机构编号# and {证券代码编号} = @证券代码编号# limit 1; */
        select combo_code into v_combo_code from db_tdsecu.tb_tdsepb_combostock where co_no = v_co_no and stock_code_no = v_stock_code_no limit 1;

        /* select max({开仓日期}) into @开仓日期# from ~交易证券_账户_组合收益表^ where {机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @默认交易组编号# and {组合代码} = @组合代码#; */
        select max(open_posi_date) into v_open_posi_date from db_tdsecu.tb_tdseac_comboincome where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_default_exch_group_no and combo_code = v_combo_code;

        /* [更新表记录][交易证券_账户_组合收益表][{组合状态} = @组合状态#,{状态更新日期} = @状态更新日期#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @默认交易组编号# and {组合代码} = @组合代码# and {初始化日期} = @初始化日期# and {开仓日期} = @开仓日期#][2][@机构编号#,@产品编号#,@交易组编号#,@组合代码#,@初始化日期#,@开仓日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincome set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = v_combo_status,status_update_date = v_status_update_date where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_default_exch_group_no and combo_code = v_combo_code and init_date = v_init_date and open_posi_date = v_open_posi_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.90.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","产品编号=",v_pd_no,",","交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date,",","开仓日期=",v_open_posi_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","产品编号=",v_pd_no,",","交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date,",","开仓日期=",v_open_posi_date);
            end if;
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_账户_组合收益汇总表][{组合状态} = @组合状态#,{状态更新日期} = @状态更新日期#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {交易组编号} = @默认交易组编号# and {组合代码} = @组合代码# and {初始化日期} = @初始化日期#][2][@机构编号#,@产品编号#,@交易组编号#,@组合代码#,@初始化日期#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseac_comboincomesum set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, combo_status = v_combo_status,status_update_date = v_status_update_date where co_no = v_co_no and pd_no = v_pd_no and exch_group_no = v_default_exch_group_no and combo_code = v_combo_code and init_date = v_init_date;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.90.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","产品编号=",v_pd_no,",","交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date),"#",v_mysql_message);
            else
                SET v_error_info = concat("机构编号=",v_co_no,",","产品编号=",v_pd_no,",","交易组编号=",v_exch_group_no,",","组合代码=",v_combo_code,",","初始化日期=",v_init_date);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_获取交易组持仓成本
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_GetExgpPosiCost;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_GetExgpPosiCost(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_trd_cost_amt decimal(18,4),
    OUT p_trd_intrst_cost_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_trd_cost_amt decimal(18,4);
    declare v_trd_intrst_cost_amt decimal(18,4);
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_trd_cost_amt = 0;
    SET v_trd_intrst_cost_amt = 0;
    SET v_record_count = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_账户_交易组业务持仓表][count(1),{成本金额},{利息成本金额}][@记录个数#,@交易库成本金额#,@交易库利息成本金额#][{交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号# and {股东代码编号}=@股东代码编号# and {证券代码编号}=@证券代码编号#] */
    select count(1),cost_amt,intrst_cost_amt into v_record_count,v_trd_cost_amt,v_trd_intrst_cost_amt from db_tdsecu.tb_tdseac_exgp_busi_posi where exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no and stock_acco_no=v_stock_acco_no and stock_code_no=v_stock_code_no limit 1;


    /* if @记录个数# = 0  then */
    if v_record_count = 0  then

        /* set @交易库成本金额# =0; */
        set v_trd_cost_amt =0;

        /* set @交易库利息成本金额# =0; */
        set v_trd_intrst_cost_amt =0;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_trd_cost_amt = v_trd_cost_amt;
    SET p_trd_intrst_cost_amt = v_trd_intrst_cost_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新融资融券指令交易资金持仓负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateFinaLoanApprDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateFinaLoanApprDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_comm_id bigint,
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_trade_code_no int,
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_is_record_jour int,
    IN p_debt_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_debt_type int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_comm_id bigint;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_trade_code_no int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_is_record_jour int;
    declare v_debt_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_debt_type int;
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_loan_return_strike_fee decimal(18,4);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_comm_id = p_comm_id;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_is_record_jour = p_is_record_jour;
    SET v_debt_qty = p_debt_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_debt_type = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_fina_return_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_fina_return_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_fina_return_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_fina_return_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_loan_return_strike_fee = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# <> 《订单方向-融资买入》 and @订单方向# <> 《订单方向-融券卖出》 and @订单方向# <> 《订单方向-买券还券》 and @订单方向# <> 《订单方向-卖券还款》 and @订单方向# <> 《订单方向-直接还券》 and @订单方向# <> 《订单方向-直接还款》   and @订单方向# <> 《订单方向-卖出》]; */
    if v_order_dir <> 5 and v_order_dir <> 6 and v_order_dir <> 8 and v_order_dir <> 7 and v_order_dir <> 15 and v_order_dir <> 14   and v_order_dir <> 2 then
        leave label_pro;
    end if;


    /* set @负债融资买入成交数量# = 0; */
    set v_debt_fina_buy_strike_qty = 0;

    /* set @融资归还成交数量# = 0; */
    set v_fina_return_strike_qty = 0;

    /* set @负债融券卖出成交数量# = 0; */
    set v_debt_loan_sell_strike_qty = 0;

    /* set @融券归还成交数量# = 0; */
    set v_loan_return_strike_qty = 0;

    /* set @负债融资买入订单数量# = 0; */
    set v_debt_fina_buy_order_qty = 0;

    /* set @融资归还订单数量# = 0; */
    set v_fina_return_order_qty = 0;

    /* set @负债融券卖出订单数量# = 0; */
    set v_debt_loan_sell_order_qty = 0;

    /* set @融券归还订单数量# = 0; */
    set v_loan_return_order_qty = 0;

    /* set @负债融资买入指令数量# = 0; */
    set v_debt_fina_buy_comm_qty = 0;

    /* set @融资归还指令数量# = 0; */
    set v_fina_return_comm_qty = 0;

    /* set @负债融券卖出指令数量# = 0; */
    set v_debt_loan_sell_comm_qty = 0;

    /* set @融券归还指令数量# = 0; */
    set v_loan_return_comm_qty = 0;

    /* set @负债融资买入成交金额# = 0; */
    set v_debt_fina_buy_strike_amt = 0;

    /* set @融资归还成交金额# = 0; */
    set v_fina_return_strike_amt = 0;

    /* set @负债融券卖出成交金额# = 0; */
    set v_debt_loan_sell_strike_amt = 0;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @负债融资买入订单金额# = 0; */
    set v_debt_fina_buy_order_amt = 0;

    /* set @融资归还订单金额# = 0; */
    set v_fina_return_order_amt = 0;

    /* set @负债融券卖出订单金额# = 0; */
    set v_debt_loan_sell_order_amt = 0;

    /* set @融券归还订单金额# = 0; */
    set v_loan_return_order_amt = 0;

    /* set @负债融资买入指令金额# = 0; */
    set v_debt_fina_buy_comm_amt = 0;

    /* set @融资归还指令金额# = 0; */
    set v_fina_return_comm_amt = 0;

    /* set @负债融券卖出指令金额# = 0; */
    set v_debt_loan_sell_comm_amt = 0;

    /* set @融券归还指令金额# = 0; */
    set v_loan_return_comm_amt = 0;

    /* set @负债成交费用# = 0; */
    set v_debt_strike_fee = 0;

    /* set @归还成交费用# = 0; */
    set v_return_strike_fee = 0;

    /* set @负债利息# = 0; */
    set v_debt_interest = 0;

    /* set @归还利息金额# = 0; */
    set v_return_interest_amt = 0;

    /* set @融券归还成交费用# = 0; */
    set v_loan_return_strike_fee = 0;

    /* if @订单方向# = 《订单方向-融资买入》  then */
    if v_order_dir = 5  then

        /* set @负债类型# = 《负债类型-融资》; */
        set v_debt_type = 1;

        /* set @负债融资买入订单数量#=@交易变动数量#; */
        set v_debt_fina_buy_order_qty=v_trade_occur_qty;

        /* set @负债融资买入指令数量#=@指令变动数量#; */
        set v_debt_fina_buy_comm_qty=v_comm_occur_qty;

        /* set @负债融资买入订单金额#=@交易变动金额#; */
        set v_debt_fina_buy_order_amt=v_trade_occur_amt;

        /* set @负债融资买入指令金额#=@指令变动金额#; */
        set v_debt_fina_buy_comm_amt=v_comm_occur_amt;

    /* elseif @订单方向# = 《订单方向-卖券还款》 or @订单方向# = 《订单方向-直接还款》 or @订单方向# = 《订单方向-卖出》  then */
    elseif v_order_dir = 7 or v_order_dir = 14 or v_order_dir = 2  then

        /* set @负债类型# = 《负债类型-融资》; */
        set v_debt_type = 1;

        /* set @融资归还订单数量#=@交易变动数量#; */
        set v_fina_return_order_qty=v_trade_occur_qty;

        /* set @融资归还指令数量#=@指令变动数量#; */
        set v_fina_return_comm_qty=v_comm_occur_qty;

        /* set @融资归还订单金额#=@交易变动金额#; */
        set v_fina_return_order_amt=v_trade_occur_amt;

        /* set @融资归还指令金额#=@指令变动金额#; */
        set v_fina_return_comm_amt=v_comm_occur_amt;

    /* elseif @订单方向# = 《订单方向-融券卖出》 then */
    elseif v_order_dir = 6 then

        /* set @负债类型# = 《负债类型-融券》; */
        set v_debt_type = 2;

        /* set @负债融券卖出订单数量#=@交易变动数量#; */
        set v_debt_loan_sell_order_qty=v_trade_occur_qty;

        /* set @负债融券卖出指令数量#=@指令变动数量#; */
        set v_debt_loan_sell_comm_qty=v_comm_occur_qty;

        /* set @负债融券卖出订单金额#=@交易变动金额#; */
        set v_debt_loan_sell_order_amt=v_trade_occur_amt;

        /* set @负债融券卖出指令金额#=@指令变动金额#; */
        set v_debt_loan_sell_comm_amt=v_comm_occur_amt;

    /* elseif @订单方向# = 《订单方向-买券还券》 or  @订单方向# = 《订单方向-直接还券》 then */
    elseif v_order_dir = 8 or  v_order_dir = 15 then

        /* set @负债类型# = 《负债类型-融券》; */
        set v_debt_type = 2;

        /* set @融券归还订单金额# = @交易变动金额#; */
        set v_loan_return_order_amt = v_trade_occur_amt;

        /* set @融券归还指令金额# = @指令变动金额#; */
        set v_loan_return_comm_amt = v_comm_occur_amt;

        /* set @融券归还订单数量#=@交易变动数量#; */
        set v_loan_return_order_qty=v_trade_occur_qty;

        /* set @融券归还指令数量#=@指令变动数量#; */
        set v_loan_return_comm_qty=v_comm_occur_qty;
        #归还数量如果超过负债数量，要进行特殊处理

        /* if @融券归还订单数量# > @负债数量# then */
        if v_loan_return_order_qty > v_debt_qty then

            /* set @融券归还订单数量# = @负债数量#; */
            set v_loan_return_order_qty = v_debt_qty;
        end if;

        /* if @融券归还指令数量# > @负债数量# then */
        if v_loan_return_comm_qty > v_debt_qty then

            /* set @融券归还指令数量# = @负债数量#; */
            set v_loan_return_comm_qty = v_debt_qty;
        end if;
    end if;

    /* if @订单方向# = 《订单方向-融券卖出》 or  @订单方向# = 《订单方向-买券还券》  or  @订单方向# = 《订单方向-直接还券》 then */
    if v_order_dir = 6 or  v_order_dir = 8  or  v_order_dir = 15 then

        /* [插入重复更新][交易证券_账户_资产账户业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还指令金额}={融券归还指令金额}+@融券归还指令金额#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, debt_loan_sell_strike_amt, debt_strike_fee, 
            loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_debt_loan_sell_strike_amt, v_debt_strike_fee, 
            v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_comm_amt=loan_return_comm_amt+v_loan_return_comm_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.92.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还指令金额}={融券归还指令金额}+@融券归还指令金额#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, debt_loan_sell_strike_amt, 
            debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
            return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_debt_loan_sell_strike_amt, 
            v_debt_strike_fee, v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, 
            v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_comm_amt=loan_return_comm_amt+v_loan_return_comm_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.92.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;

    end if;

    /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{负债融资买入指令数量}={负债融资买入指令数量}+@负债融资买入指令数量#,{融资归还指令数量}={融资归还指令数量}+@融资归还指令数量#,{负债融券卖出指令数量}={负债融券卖出指令数量}+@负债融券卖出指令数量#,{融券归还指令数量}={融券归还指令数量}+@融券归还指令数量#,{负债融资买入订单金额} = {负债融资买入订单金额} + @负债融资买入订单金额#,{融资归还订单金额} = {融资归还订单金额} + @融资归还订单金额#,{负债融券卖出订单金额} = {负债融券卖出订单金额} + @负债融券卖出订单金额#,{融券归还订单金额} = {融券归还订单金额} + @融券归还订单金额#,{负债融资买入指令金额} = {负债融资买入指令金额} +@负债融资买入指令金额#,{融资归还指令金额} = {融资归还指令金额} +@融资归还指令金额#,{负债融券卖出指令金额} = {负债融券卖出指令金额} +@负债融券卖出指令金额#,{融券归还指令金额} = {融券归还指令金额} +@融券归还指令金额#][1][@资产账户编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code, stock_code_no, stock_type, asset_type, 
        invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
        debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
        debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
        debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
        debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
        debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
        debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
        debt_interest, return_interest_amt) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
        v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
        v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
        v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
        v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
        v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
        v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
        v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
        v_debt_interest, v_return_interest_amt) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,debt_fina_buy_comm_qty=debt_fina_buy_comm_qty+v_debt_fina_buy_comm_qty,fina_return_comm_qty=fina_return_comm_qty+v_fina_return_comm_qty,debt_loan_sell_comm_qty=debt_loan_sell_comm_qty+v_debt_loan_sell_comm_qty,loan_return_comm_qty=loan_return_comm_qty+v_loan_return_comm_qty,debt_fina_buy_order_amt = debt_fina_buy_order_amt + v_debt_fina_buy_order_amt,fina_return_order_amt = fina_return_order_amt + v_fina_return_order_amt,debt_loan_sell_order_amt = debt_loan_sell_order_amt + v_debt_loan_sell_order_amt,loan_return_order_amt = loan_return_order_amt + v_loan_return_order_amt,debt_fina_buy_comm_amt = debt_fina_buy_comm_amt +v_debt_fina_buy_comm_amt,fina_return_comm_amt = fina_return_comm_amt +v_fina_return_comm_amt,debt_loan_sell_comm_amt = debt_loan_sell_comm_amt +v_debt_loan_sell_comm_amt,loan_return_comm_amt = loan_return_comm_amt +v_loan_return_comm_amt;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.92.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
        end if;
        leave label_pro;
    end if;


    /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{负债融资买入指令数量}={负债融资买入指令数量}+@负债融资买入指令数量#,{融资归还指令数量}={融资归还指令数量}+@融资归还指令数量#,{负债融券卖出指令数量}={负债融券卖出指令数量}+@负债融券卖出指令数量#,{融券归还指令数量}={融券归还指令数量}+@融券归还指令数量#,{负债融资买入订单金额} = {负债融资买入订单金额} + @负债融资买入订单金额#,{融资归还订单金额} = {融资归还订单金额} + @融资归还订单金额#,{负债融券卖出订单金额} = {负债融券卖出订单金额} + @负债融券卖出订单金额#,{融券归还订单金额} = {融券归还订单金额} + @融券归还订单金额#,{负债融资买入指令金额} = {负债融资买入指令金额} +@负债融资买入指令金额#,{融资归还指令金额} = {融资归还指令金额} +@融资归还指令金额#,{负债融券卖出指令金额} = {负债融券卖出指令金额} +@负债融券卖出指令金额#,{融券归还指令金额} = {融券归还指令金额} +@融券归还指令金额#][1][@交易组编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, asset_acco_no, exch_group_no, exch_no, 
        stock_acco_no, stock_code, stock_code_no, stock_type, 
        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
        return_strike_fee, debt_interest, return_interest_amt) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
        v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,debt_fina_buy_comm_qty=debt_fina_buy_comm_qty+v_debt_fina_buy_comm_qty,fina_return_comm_qty=fina_return_comm_qty+v_fina_return_comm_qty,debt_loan_sell_comm_qty=debt_loan_sell_comm_qty+v_debt_loan_sell_comm_qty,loan_return_comm_qty=loan_return_comm_qty+v_loan_return_comm_qty,debt_fina_buy_order_amt = debt_fina_buy_order_amt + v_debt_fina_buy_order_amt,fina_return_order_amt = fina_return_order_amt + v_fina_return_order_amt,debt_loan_sell_order_amt = debt_loan_sell_order_amt + v_debt_loan_sell_order_amt,loan_return_order_amt = loan_return_order_amt + v_loan_return_order_amt,debt_fina_buy_comm_amt = debt_fina_buy_comm_amt +v_debt_fina_buy_comm_amt,fina_return_comm_amt = fina_return_comm_amt +v_fina_return_comm_amt,debt_loan_sell_comm_amt = debt_loan_sell_comm_amt +v_debt_loan_sell_comm_amt,loan_return_comm_amt = loan_return_comm_amt +v_loan_return_comm_amt;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.92.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_debt_type = v_debt_type;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新融资融券成交资金持仓负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateFinaLoanStrikeDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateFinaLoanStrikeDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_order_id bigint,
    IN p_order_date int,
    IN p_order_time int,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_strike_id bigint,
    IN p_report_no varchar(32),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_asset_type int,
    IN p_stock_type int,
    IN p_invest_type int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_trade_occur_amt decimal(18,4),
    IN p_trade_occur_qty decimal(18,2),
    IN p_strike_no varchar(64),
    IN p_strike_date int,
    IN p_strike_time int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_price decimal(16,9),
    IN p_strike_amt decimal(18,4),
    IN p_strike_fee decimal(18,4),
    IN p_order_qty decimal(18,2),
    IN p_fina_return_type int,
    IN p_order_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_debt_type int,
    OUT p_stock_code_no_str varchar(4096),
    OUT p_asac_detail_posi_id_str varchar(1024),
    OUT p_asac_stock_code_no_str varchar(4096)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_order_id bigint;
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_strike_id bigint;
    declare v_report_no varchar(32);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_asset_type int;
    declare v_stock_type int;
    declare v_invest_type int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_strike_no varchar(64);
    declare v_strike_date int;
    declare v_strike_time int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_price decimal(16,9);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_fina_return_type int;
    declare v_order_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_detail_posi_id_str varchar(1024);
    declare v_debt_type int;
    declare v_stock_code_no_str varchar(4096);
    declare v_asac_detail_posi_id_str varchar(1024);
    declare v_asac_stock_code_no_str varchar(4096);
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_debt_order_no int;
    declare v_busi_opor_no int;
    declare v_begin_amt decimal(18,4);
    declare v_curr_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_unfroz_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_unfroz_amt decimal(18,4);
    declare v_comm_capt_amt decimal(18,4);
    declare v_comm_releas_amt decimal(18,4);
    declare v_trade_frozen_amt decimal(18,4);
    declare v_trade_unfroz_amt decimal(18,4);
    declare v_trade_capt_amt decimal(18,4);
    declare v_trade_releas_amt decimal(18,4);
    declare v_strike_releas_amt decimal(18,4);
    declare v_begin_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_frozen_qty decimal(18,2);
    declare v_unfroz_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_unfroz_qty decimal(18,2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_releas_qty decimal(18,2);
    declare v_trade_frozen_qty decimal(18,2);
    declare v_trade_unfroz_qty decimal(18,2);
    declare v_trade_capt_qty decimal(18,2);
    declare v_trade_releas_qty decimal(18,2);
    declare v_strike_frozen_qty decimal(18,2);
    declare v_strike_unfroz_qty decimal(18,2);
    declare v_strike_capt_qty decimal(18,2);
    declare v_strike_releas_qty decimal(18,2);
    declare v_realize_pandl decimal(18,4);
    declare v_cost_amt decimal(18,4);
    declare v_intrst_cost_amt decimal(18,4);
    declare v_intrst_pandl decimal(18,4);
    declare v_strike_capt_amt decimal(18,4);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_order_no int;
    declare v_detail_posi_id bigint;
    declare v_tmp_strike_occur_amt decimal(18,4);
    declare v_repl_stock_code_no int;
    declare v_tmp_stock_code_no int;
    declare v_remain_strike_amt decimal(18,4);
    declare v_tmp_detail_posi_id_str varchar(1024);
    declare v_remain_strike_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_order_id = p_order_id;
    SET v_order_date = p_order_date;
    SET v_order_time = p_order_time;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_strike_id = p_strike_id;
    SET v_report_no = p_report_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_asset_type = p_asset_type;
    SET v_stock_type = p_stock_type;
    SET v_invest_type = p_invest_type;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_trade_occur_amt = p_trade_occur_amt;
    SET v_trade_occur_qty = p_trade_occur_qty;
    SET v_strike_no = p_strike_no;
    SET v_strike_date = p_strike_date;
    SET v_strike_time = p_strike_time;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_price = p_strike_price;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_fee = p_strike_fee;
    SET v_order_qty = p_order_qty;
    SET v_fina_return_type = p_fina_return_type;
    SET v_order_oper_way = p_order_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_detail_posi_id_str = " ";
    SET v_debt_type = 0;
    SET v_stock_code_no_str = " ";
    SET v_asac_detail_posi_id_str = " ";
    SET v_asac_stock_code_no_str = " ";
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_fina_return_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_fina_return_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_fina_return_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_fina_return_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_debt_order_no = 0;
    SET v_busi_opor_no = 0;
    SET v_begin_amt = 0;
    SET v_curr_amt = 0;
    SET v_frozen_amt = 0;
    SET v_unfroz_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_unfroz_amt = 0;
    SET v_comm_capt_amt = 0;
    SET v_comm_releas_amt = 0;
    SET v_trade_frozen_amt = 0;
    SET v_trade_unfroz_amt = 0;
    SET v_trade_capt_amt = 0;
    SET v_trade_releas_amt = 0;
    SET v_strike_releas_amt = 0;
    SET v_begin_qty = 0;
    SET v_curr_qty = 0;
    SET v_frozen_qty = 0;
    SET v_unfroz_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_comm_unfroz_qty = 0;
    SET v_comm_capt_qty = 0;
    SET v_comm_releas_qty = 0;
    SET v_trade_frozen_qty = 0;
    SET v_trade_unfroz_qty = 0;
    SET v_trade_capt_qty = 0;
    SET v_trade_releas_qty = 0;
    SET v_strike_frozen_qty = 0;
    SET v_strike_unfroz_qty = 0;
    SET v_strike_capt_qty = 0;
    SET v_strike_releas_qty = 0;
    SET v_realize_pandl = 0;
    SET v_cost_amt = 0;
    SET v_intrst_cost_amt = 0;
    SET v_intrst_pandl = 0;
    SET v_strike_capt_amt = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_order_no = 0;
    SET v_detail_posi_id = 0;
    SET v_tmp_strike_occur_amt = 0;
    SET v_repl_stock_code_no = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_remain_strike_amt = 0;
    SET v_tmp_detail_posi_id_str = " ";
    SET v_remain_strike_qty = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@订单方向# <> 《订单方向-融资买入》 and @订单方向# <> 《订单方向-融券卖出》 and @订单方向# <> 《订单方向-买券还券》 and @订单方向# <> 《订单方向-卖券还款》   and @订单方向# <> 《订单方向-卖出》]; */
    if v_order_dir <> 5 and v_order_dir <> 6 and v_order_dir <> 8 and v_order_dir <> 7   and v_order_dir <> 2 then
        leave label_pro;
    end if;


    /* set @负债融资买入成交数量# = 0; */
    set v_debt_fina_buy_strike_qty = 0;

    /* set @融资归还成交数量# = 0; */
    set v_fina_return_strike_qty = 0;

    /* set @负债融券卖出成交数量# = 0; */
    set v_debt_loan_sell_strike_qty = 0;

    /* set @融券归还成交数量# = 0; */
    set v_loan_return_strike_qty = 0;

    /* set @负债融资买入订单数量# = 0; */
    set v_debt_fina_buy_order_qty = 0;

    /* set @融资归还订单数量# = 0; */
    set v_fina_return_order_qty = 0;

    /* set @负债融券卖出订单数量# = 0; */
    set v_debt_loan_sell_order_qty = 0;

    /* set @融券归还订单数量# = 0; */
    set v_loan_return_order_qty = 0;

    /* set @负债融资买入指令数量# = 0; */
    set v_debt_fina_buy_comm_qty = 0;

    /* set @融资归还指令数量# = 0; */
    set v_fina_return_comm_qty = 0;

    /* set @负债融券卖出指令数量# = 0; */
    set v_debt_loan_sell_comm_qty = 0;

    /* set @融券归还指令数量# = 0; */
    set v_loan_return_comm_qty = 0;

    /* set @负债融资买入成交金额# = 0; */
    set v_debt_fina_buy_strike_amt = 0;

    /* set @融资归还成交金额# = 0; */
    set v_fina_return_strike_amt = 0;

    /* set @负债融券卖出成交金额# = 0; */
    set v_debt_loan_sell_strike_amt = 0;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @负债融资买入订单金额# = 0; */
    set v_debt_fina_buy_order_amt = 0;

    /* set @融资归还订单金额# = 0; */
    set v_fina_return_order_amt = 0;

    /* set @负债融券卖出订单金额# = 0; */
    set v_debt_loan_sell_order_amt = 0;

    /* set @融券归还订单金额# = 0; */
    set v_loan_return_order_amt = 0;

    /* set @负债融资买入指令金额# = 0; */
    set v_debt_fina_buy_comm_amt = 0;

    /* set @融资归还指令金额# = 0; */
    set v_fina_return_comm_amt = 0;

    /* set @负债融券卖出指令金额# = 0; */
    set v_debt_loan_sell_comm_amt = 0;

    /* set @融券归还指令金额# = 0; */
    set v_loan_return_comm_amt = 0;

    /* set @负债成交费用# = 0; */
    set v_debt_strike_fee = 0;

    /* set @归还成交费用# = 0; */
    set v_return_strike_fee = 0;

    /* set @负债利息# = 0; */
    set v_debt_interest = 0;

    /* set @归还利息金额# = 0; */
    set v_return_interest_amt = 0;

    /* set @利息积数# = 0; */
    set v_intrst_base_amt = 0;

    /* set @已归还金额# = 0; */
    set v_debt_return_amt = 0;

    /* set @已归还数量# = 0; */
    set v_debt_return_qty = 0;

    /* set @负债状态# = 《负债状态-未归还》; */
    set v_debt_status = 1;

    /* set @备注信息# = " "; */
    set v_remark_info = " ";

    /* set @负债订单编号#=@订单序号#; */
    set v_debt_order_no=v_order_id;

    /* set @业务操作员编号# = @操作员编号#; */
    set v_busi_opor_no = v_opor_no;

    /* set @期初金额#=0; */
    set v_begin_amt=0;

    /* set @当前金额#=0; */
    set v_curr_amt=0;

    /* set @冻结金额#=0; */
    set v_frozen_amt=0;

    /* set @解冻金额#=0; */
    set v_unfroz_amt=0;

    /* set @指令冻结金额#=0; */
    set v_comm_frozen_amt=0;

    /* set @指令解冻金额#=0; */
    set v_comm_unfroz_amt=0;

    /* set @指令占用金额#=0; */
    set v_comm_capt_amt=0;

    /* set @指令释放金额#=0; */
    set v_comm_releas_amt=0;

    /* set @交易冻结金额#=0; */
    set v_trade_frozen_amt=0;

    /* set @交易解冻金额#=0; */
    set v_trade_unfroz_amt=0;

    /* set @交易占用金额#=0; */
    set v_trade_capt_amt=0;

    /* set @交易释放金额#=0; */
    set v_trade_releas_amt=0;

    /* set @成交释放金额#=0; */
    set v_strike_releas_amt=0;

    /* set @期初数量#=0; */
    set v_begin_qty=0;

    /* set @当前数量#=0; */
    set v_curr_qty=0;

    /* set @冻结数量#=0; */
    set v_frozen_qty=0;

    /* set @解冻数量#=0; */
    set v_unfroz_qty=0;

    /* set @指令冻结数量#=0; */
    set v_comm_frozen_qty=0;

    /* set @指令解冻数量#=0; */
    set v_comm_unfroz_qty=0;

    /* set @指令占用数量#=0; */
    set v_comm_capt_qty=0;

    /* set @指令释放数量#=0; */
    set v_comm_releas_qty=0;

    /* set @交易冻结数量#=0; */
    set v_trade_frozen_qty=0;

    /* set @交易解冻数量#=0; */
    set v_trade_unfroz_qty=0;

    /* set @交易占用数量#=0; */
    set v_trade_capt_qty=0;

    /* set @交易释放数量#=0; */
    set v_trade_releas_qty=0;

    /* set @成交冻结数量# = 0; */
    set v_strike_frozen_qty = 0;

    /* set @成交解冻数量# = 0; */
    set v_strike_unfroz_qty = 0;

    /* set @成交占用数量# = 0; */
    set v_strike_capt_qty = 0;

    /* set @成交释放数量# = 0; */
    set v_strike_releas_qty = 0;

    /* set @实现盈亏# = 0; */
    set v_realize_pandl = 0;

    /* set @成本金额# = 0; */
    set v_cost_amt = 0;

    /* set @利息成本金额# = 0; */
    set v_intrst_cost_amt = 0;

    /* set @利息收益# = 0; */
    set v_intrst_pandl = 0;

    /* set @成交占用金额# = 0; */
    set v_strike_capt_amt = 0;

    /* if @订单方向# = 《订单方向-融资买入》  then */
    if v_order_dir = 5  then

        /* set @成交变动金额# = @成交变动金额# + @成交费用#; */
        set v_strike_occur_amt = v_strike_occur_amt + v_strike_fee;

        /* set @负债类型# = 《负债类型-融资》; */
        set v_debt_type = 1;

        /* set @负债融资买入成交数量#=@成交变动数量#; */
        set v_debt_fina_buy_strike_qty=v_strike_occur_qty;

        /* set @负债融资买入成交金额# = @成交变动金额#; */
        set v_debt_fina_buy_strike_amt = v_strike_occur_amt;

        /* set @负债融资买入订单数量#=@交易变动数量#; */
        set v_debt_fina_buy_order_qty=v_trade_occur_qty;

        /* set @负债融资买入订单金额#=@交易变动金额#; */
        set v_debt_fina_buy_order_amt=v_trade_occur_amt;

        /* set @负债成交费用#=@成交费用#; */
        set v_debt_strike_fee=v_strike_fee;

        /* set @负债金额# = @成交变动金额#; */
        set v_debt_amt = v_strike_occur_amt;

        /* set @负债数量# = @成交变动数量#; */
        set v_debt_qty = v_strike_occur_qty;

        /* set @负债费用# = @成交费用#; */
        set v_debt_fee = v_strike_fee;

        /* [插入重复更新][交易证券_账户_交易组负债明细表][字段][字段变量][{成交数量} = {成交数量} +@成交数量#,{成交金额} = {成交金额} +@成交金额#,{成交费用} = {成交费用} +@成交费用#,{负债金额} = {负债金额} +@负债金额#,{负债数量} = {负债数量} +@负债数量#,{负债费用} = {负债费用}+@负债费用# ][1][@订单编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_debtjour (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, opor_no, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            exch_no, stock_acco_no, stock_code, stock_code_no, 
            stock_type, asset_type, debt_type, strike_qty, 
            strike_amt, strike_fee, debt_order_no, report_no, 
            order_date, order_time, order_dir, order_price, 
            order_qty, debt_amt, debt_qty, debt_fee, 
            debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
            return_interest_amt, debt_status, remark_info) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_opor_no, 
            v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
            v_exch_no, v_stock_acco_no, v_stock_code, v_stock_code_no, 
            v_stock_type, v_asset_type, v_debt_type, v_strike_qty, 
            v_strike_amt, v_strike_fee, v_debt_order_no, v_report_no, 
            v_order_date, v_order_time, v_order_dir, v_order_price, 
            v_order_qty, v_debt_amt, v_debt_qty, v_debt_fee, 
            v_debt_interest, v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, 
            v_return_interest_amt, v_debt_status, v_remark_info) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_qty = strike_qty +v_strike_qty,strike_amt = strike_amt +v_strike_amt,strike_fee = strike_fee +v_strike_fee,debt_amt = debt_amt +v_debt_amt,debt_qty = debt_qty +v_debt_qty,debt_fee = debt_fee+v_debt_fee ;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单编号=",v_order_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单编号=",v_order_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_资产账户负债明细表][字段][字段变量][{成交数量} = {成交数量} +@成交数量#,{成交金额} = {成交金额} +@成交金额#,{成交费用} = {成交费用} +@成交费用#,{负债金额} = {负债金额} +@负债金额#,{负债数量} = {负债数量} +@负债数量#,{负债费用} = {负债费用}+@负债费用# ][1][@订单编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_debtjour (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, opor_no, 
            co_no, pd_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, debt_type, strike_qty, strike_amt, 
            strike_fee, debt_order_no, report_no, order_date, 
            order_time, order_dir, order_price, order_qty, 
            debt_amt, debt_qty, debt_fee, debt_interest, 
            intrst_base_amt, debt_return_amt, debt_return_qty, return_interest_amt, 
            debt_status, remark_info) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_opor_no, 
            v_co_no, v_pd_no, v_asset_acco_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_debt_type, v_strike_qty, v_strike_amt, 
            v_strike_fee, v_debt_order_no, v_report_no, v_order_date, 
            v_order_time, v_order_dir, v_order_price, v_order_qty, 
            v_debt_amt, v_debt_qty, v_debt_fee, v_debt_interest, 
            v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, v_return_interest_amt, 
            v_debt_status, v_remark_info) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_qty = strike_qty +v_strike_qty,strike_amt = strike_amt +v_strike_amt,strike_fee = strike_fee +v_strike_fee,debt_amt = debt_amt +v_debt_amt,debt_qty = debt_qty +v_debt_qty,debt_fee = debt_fee+v_debt_fee ;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单编号=",v_order_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单编号=",v_order_no);
            end if;
            leave label_pro;
        end if;


        /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{记录序号}][@明细持仓序号#][{负债订单编号} = @负债订单编号# and {订单日期} = @订单日期#] */
        select row_id into v_detail_posi_id from db_tdsecu.tb_tdseac_exgp_debtjour where debt_order_no = v_debt_order_no and order_date = v_order_date limit 1;


        /* set @明细持仓序号串# = concat(";",@明细持仓序号#,";"); */
        set v_detail_posi_id_str = concat(";",v_detail_posi_id,";");

        /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{记录序号}][@明细持仓序号#][{负债订单编号} = @负债订单编号# and {订单日期} = @订单日期#] */
        select row_id into v_detail_posi_id from db_tdsecu.tb_tdseac_asac_debtjour where debt_order_no = v_debt_order_no and order_date = v_order_date limit 1;


        /* set @资产账户明细持仓序号串# = concat(";",@明细持仓序号#,";"); */
        set v_asac_detail_posi_id_str = concat(";",v_detail_posi_id,";");

        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code, stock_code_no, stock_type, asset_type, 
            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
            debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
            v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
            return_strike_fee, debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-融券卖出》  then */
    elseif v_order_dir = 6  then

        /* set @负债类型# = 《负债类型-融券》; */
        set v_debt_type = 2;

        /* set @成交变动金额# = @成交变动金额#; */
        set v_strike_occur_amt = v_strike_occur_amt;

        /* set @负债融券卖出成交数量#=@成交变动数量#; */
        set v_debt_loan_sell_strike_qty=v_strike_occur_qty;

        /* set @负债融券卖出成交金额# = @成交变动金额#; */
        set v_debt_loan_sell_strike_amt = v_strike_occur_amt;

        /* set @负债融券卖出订单数量# = @交易变动数量#; */
        set v_debt_loan_sell_order_qty = v_trade_occur_qty;

        /* set @负债融券卖出订单金额# = @交易变动金额#; */
        set v_debt_loan_sell_order_amt = v_trade_occur_amt;

        /* set @负债成交费用# = @成交费用#; */
        set v_debt_strike_fee = v_strike_fee;

        /* set @负债数量# = @成交变动数量#; */
        set v_debt_qty = v_strike_occur_qty;

        /* set @负债金额# = @成交变动金额#; */
        set v_debt_amt = v_strike_occur_amt;
        #融资费用算负债，融券费用用自己的钱，不计负债中

        /* set @负债费用# = @成交费用#; */
        set v_debt_fee = v_strike_fee;

        /* [插入重复更新][交易证券_账户_交易组负债明细表][字段][字段变量][{成交数量} = {成交数量} +@成交数量#,{成交金额} = {成交金额} +@成交金额#,{成交费用} = {成交费用} +@成交费用#,{负债金额} = {负债金额} +@负债金额#,{负债数量} = {负债数量} +@负债数量#,{负债费用} = {负债费用}+@负债费用# ][1][@订单编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_debtjour (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, opor_no, 
            co_no, pd_no, exch_group_no, asset_acco_no, 
            exch_no, stock_acco_no, stock_code, stock_code_no, 
            stock_type, asset_type, debt_type, strike_qty, 
            strike_amt, strike_fee, debt_order_no, report_no, 
            order_date, order_time, order_dir, order_price, 
            order_qty, debt_amt, debt_qty, debt_fee, 
            debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
            return_interest_amt, debt_status, remark_info) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_opor_no, 
            v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
            v_exch_no, v_stock_acco_no, v_stock_code, v_stock_code_no, 
            v_stock_type, v_asset_type, v_debt_type, v_strike_qty, 
            v_strike_amt, v_strike_fee, v_debt_order_no, v_report_no, 
            v_order_date, v_order_time, v_order_dir, v_order_price, 
            v_order_qty, v_debt_amt, v_debt_qty, v_debt_fee, 
            v_debt_interest, v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, 
            v_return_interest_amt, v_debt_status, v_remark_info) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_qty = strike_qty +v_strike_qty,strike_amt = strike_amt +v_strike_amt,strike_fee = strike_fee +v_strike_fee,debt_amt = debt_amt +v_debt_amt,debt_qty = debt_qty +v_debt_qty,debt_fee = debt_fee+v_debt_fee ;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单编号=",v_order_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单编号=",v_order_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_资产账户负债明细表][字段][字段变量][{成交数量} = {成交数量} +@成交数量#,{成交金额} = {成交金额} +@成交金额#,{成交费用} = {成交费用} +@成交费用#,{负债金额} = {负债金额} +@负债金额#,{负债数量} = {负债数量} +@负债数量#,{负债费用} = {负债费用}+@负债费用# ][1][@订单编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_debtjour (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, opor_no, 
            co_no, pd_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, debt_type, strike_qty, strike_amt, 
            strike_fee, debt_order_no, report_no, order_date, 
            order_time, order_dir, order_price, order_qty, 
            debt_amt, debt_qty, debt_fee, debt_interest, 
            intrst_base_amt, debt_return_amt, debt_return_qty, return_interest_amt, 
            debt_status, remark_info) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_opor_no, 
            v_co_no, v_pd_no, v_asset_acco_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_debt_type, v_strike_qty, v_strike_amt, 
            v_strike_fee, v_debt_order_no, v_report_no, v_order_date, 
            v_order_time, v_order_dir, v_order_price, v_order_qty, 
            v_debt_amt, v_debt_qty, v_debt_fee, v_debt_interest, 
            v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, v_return_interest_amt, 
            v_debt_status, v_remark_info) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_qty = strike_qty +v_strike_qty,strike_amt = strike_amt +v_strike_amt,strike_fee = strike_fee +v_strike_fee,debt_amt = debt_amt +v_debt_amt,debt_qty = debt_qty +v_debt_qty,debt_fee = debt_fee+v_debt_fee ;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单编号=",v_order_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单编号=",v_order_no);
            end if;
            leave label_pro;
        end if;


        /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{记录序号}][@明细持仓序号#][{负债订单编号} = @负债订单编号# and {订单日期} = @订单日期#] */
        select row_id into v_detail_posi_id from db_tdsecu.tb_tdseac_exgp_debtjour where debt_order_no = v_debt_order_no and order_date = v_order_date limit 1;


        /* set @明细持仓序号串# = concat(";",@明细持仓序号#,";"); */
        set v_detail_posi_id_str = concat(";",v_detail_posi_id,";");

        /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{记录序号}][@明细持仓序号#][{负债订单编号} = @负债订单编号# and {订单日期} = @订单日期#] */
        select row_id into v_detail_posi_id from db_tdsecu.tb_tdseac_asac_debtjour where debt_order_no = v_debt_order_no and order_date = v_order_date limit 1;


        /* set @资产账户明细持仓序号串# = concat(";",@明细持仓序号#,";"); */
        set v_asac_detail_posi_id_str = concat(";",v_detail_posi_id,";");

        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code, stock_code_no, stock_type, asset_type, 
            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
            debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
            v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
            return_strike_fee, debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;

        #融券卖出，资金表中的成交金额要考虑费用，但持仓和明细表不考虑费用，因为费用计算到负债中

        /* set @负债融券卖出成交金额# = @负债融券卖出成交金额#-@成交费用#; */
        set v_debt_loan_sell_strike_amt = v_debt_loan_sell_strike_amt-v_strike_fee;

        /* [插入重复更新][交易证券_账户_资产账户业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{归还成交费用} = {归还成交费用}+@归还成交费用#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, debt_loan_sell_strike_amt, debt_strike_fee, 
            loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_debt_loan_sell_strike_amt, v_debt_strike_fee, 
            v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,return_strike_fee = return_strike_fee+v_return_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{归还成交费用} = {归还成交费用}+@归还成交费用#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, debt_loan_sell_strike_amt, 
            debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
            return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_debt_loan_sell_strike_amt, 
            v_debt_strike_fee, v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, 
            v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,return_strike_fee = return_strike_fee+v_return_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-卖券还款》 or  @订单方向# = 《订单方向-直接还款》 then */
    elseif v_order_dir = 7 or  v_order_dir = 14 then

        /* set @负债类型# = 《负债类型-融资》; */
        set v_debt_type = 1;

        /* set @成交变动金额# = @成交变动金额# - @成交费用#; */
        set v_strike_occur_amt = v_strike_occur_amt - v_strike_fee;

        /* set @融资归还成交数量#=@成交变动数量#; */
        set v_fina_return_strike_qty=v_strike_occur_qty;

        /* set @融资归还成交金额#=@成交变动金额#; */
        set v_fina_return_strike_amt=v_strike_occur_amt;

        /* set @融资归还订单数量#=@交易变动数量#; */
        set v_fina_return_order_qty=v_trade_occur_qty;

        /* set @融资归还订单金额#=@交易变动金额#; */
        set v_fina_return_order_amt=v_trade_occur_amt;

        /* set @负债成交费用# = @成交费用#; */
        set v_debt_strike_fee = v_strike_fee;
        #先把归还的订单数量和金额更新掉

        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{负债成交费用} = {负债成交费用} +@负债成交费用#][5][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code, stock_code_no, stock_type, asset_type, 
            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
            debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
            v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,debt_strike_fee = debt_strike_fee +v_debt_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.5";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{负债成交费用} = {负债成交费用} +@负债成交费用#][6][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
            return_strike_fee, debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,debt_strike_fee = debt_strike_fee +v_debt_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.6";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;

        #卖券还款的优先原则：先进先出，同进小出。既先开仓的合约先偿还，同日产生的负债，按负债金额由小到大进行偿还
        #卖券还款：优先偿还该股票的融资负债，偿还后的剩余资金，在偿还其他股票的融资负债
        #已经找不到这只票负债记录，还要去归还其它票所欠的负债
        #参数控制：先开先还、先还同券

        /* set @临时_成交变动金额# = @成交变动金额#; */
        set v_tmp_strike_occur_amt = v_strike_occur_amt;
        #保存原始证券代码

        /* set @替代证券代码编号# = @证券代码编号#; */
        set v_repl_stock_code_no = v_stock_code_no;

        /* if @卖券还款方式# = 《卖券还款方式-先还同券》 and @订单方向# <> 《订单方向-直接还款》 then */
        if v_fina_return_type = 0 and v_order_dir <> 14 then
            #处理交易组层级

            /* set @临时_证券代码编号# = @证券代码编号#; */
            set v_tmp_stock_code_no = v_stock_code_no;

            /* set @证券代码编号串# = concat(";",@临时_证券代码编号#,";"); */
            set v_stock_code_no_str = concat(";",v_tmp_stock_code_no,";");

            /* 调用【原子_交易证券_账户_融资融券成交卖券还款比例释放】*/
            call db_tdsecu.pra_tdseac_FinaLoanStrikeBackAmtRatio(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_crncy_type,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_asset_type,
                v_invest_type,
                v_debt_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_strike_fee,
                v_busi_opor_no,
                v_fina_return_strike_qty,
                v_fina_return_strike_amt,
                v_fina_return_order_qty,
                v_fina_return_order_amt,
                v_debt_strike_fee,
                v_error_code,
                v_error_info,
                v_remain_strike_amt,
                v_detail_posi_id_str,
                v_stock_code_no_str);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.93.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券成交卖券还款比例释放出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @临时_明细持仓序号串# = @明细持仓序号串#; */
            set v_tmp_detail_posi_id_str = v_detail_posi_id_str;

            /* if @剩余成交金额# > 0 then */
            if v_remain_strike_amt > 0 then

                /* set @证券代码编号# = 0; */
                set v_stock_code_no = 0;

                /* set @融资归还订单数量#=0; */
                set v_fina_return_order_qty=0;

                /* set @融资归还订单金额#=0; */
                set v_fina_return_order_amt=0;

                /* set @成交变动金额# = @剩余成交金额#; */
                set v_strike_occur_amt = v_remain_strike_amt;

                /* 调用【原子_交易证券_账户_融资融券成交卖券还款比例释放】*/
                call db_tdsecu.pra_tdseac_FinaLoanStrikeBackAmtRatio(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_init_date,
                    v_co_no,
                    v_pd_no,
                    v_exch_group_no,
                    v_asset_acco_no,
                    v_exch_crncy_type,
                    v_exch_no,
                    v_stock_code,
                    v_stock_type,
                    v_asset_type,
                    v_invest_type,
                    v_debt_type,
                    v_order_dir,
                    v_stock_acco_no,
                    v_stock_code_no,
                    v_strike_occur_amt,
                    v_strike_occur_qty,
                    v_strike_fee,
                    v_busi_opor_no,
                    v_fina_return_strike_qty,
                    v_fina_return_strike_amt,
                    v_fina_return_order_qty,
                    v_fina_return_order_amt,
                    v_debt_strike_fee,
                    v_error_code,
                    v_error_info,
                    v_remain_strike_amt,
                    v_detail_posi_id_str,
                    v_stock_code_no_str);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.93.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券成交卖券还款比例释放出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

                #单纯为了主推，负债明细和持仓负债

                /* set @明细持仓序号串# = concat(@临时_明细持仓序号串#,@明细持仓序号串#); */
                set v_detail_posi_id_str = concat(v_tmp_detail_posi_id_str,v_detail_posi_id_str);

                /* set @证券代码编号串# = concat(";",@临时_证券代码编号#,@证券代码编号串#); */
                set v_stock_code_no_str = concat(";",v_tmp_stock_code_no,v_stock_code_no_str);
            end if;

            /* set @明细持仓序号串# = concat(";",@明细持仓序号串#); */
            set v_detail_posi_id_str = concat(";",v_detail_posi_id_str);
           #处理归还的那笔普通可用

           /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
           set v_create_date = date_format(curdate(),'%Y%m%d');
           set v_create_time = date_format(curtime(),'%H%i%s');
           set v_update_date = v_create_date;
           set v_update_time = v_create_time;
           set v_update_times = 1;
           insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
               create_date, create_time, update_date, 
               update_time, update_times, co_no, pd_no, 
               exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
               curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
               comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
               trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
               strike_releas_amt) 
           values(
               v_create_date, v_create_time, v_update_date, 
               v_update_time, v_update_times, v_co_no, v_pd_no, 
               v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
               v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
               v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
               v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
               v_strike_releas_amt) 
           ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.2.93.1";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
               else
                   SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
               end if;
               leave label_pro;
           end if;


          /* if @订单操作方式# = 《订单操作方式-增强交易》 or @订单操作方式# = 《订单操作方式-增强交易平仓》 then */
          if v_order_oper_way = "14" or v_order_oper_way = "51" then

              /* [更新表记录][交易证券_T0_操作员阈值设置表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号} = @操作员编号#][1][@操作员编号#] */
              set v_update_date = date_format(curdate(),'%Y%m%d');
              set v_update_time = date_format(curtime(),'%H%i%s');
              update db_tdsecu.tb_tdset0_opor_tshold_set set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no = v_opor_no;
              if v_error_code = "1" then
                          
                  SET v_error_code = "tdsecuA.2.93.1";
                  if v_mysql_message <> "" then
                      SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no),"#",v_mysql_message);
                  else
                      SET v_error_info = concat("操作员编号=",v_opor_no);
                  end if;
                  leave label_pro;
              end if;


              /* [更新表记录][交易证券_T0_交易组业务资金表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号}=@操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种} = @交易币种#][1][@操作员编号#, @交易组编号# ,@资产账户编号#, @交易币种#] */
              set v_update_date = date_format(curdate(),'%Y%m%d');
              set v_update_time = date_format(curtime(),'%H%i%s');
              update db_tdsecu.tb_tdset0_exgp_busi_capit set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no=v_opor_no and exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type = v_exch_crncy_type;
              if v_error_code = "1" then
                          
                  SET v_error_code = "tdsecuA.2.93.1";
                  if v_mysql_message <> "" then
                      SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type),"#",v_mysql_message);
                  else
                      SET v_error_info = concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type);
                  end if;
                  leave label_pro;
              end if;

          end if;
            #处理资产账户层级

            /* set @成交变动金额# = @临时_成交变动金额#; */
            set v_strike_occur_amt = v_tmp_strike_occur_amt;

            /* set @证券代码编号# = @替代证券代码编号#; */
            set v_stock_code_no = v_repl_stock_code_no;

            /* set @临时_证券代码编号# = @替代证券代码编号#; */
            set v_tmp_stock_code_no = v_repl_stock_code_no;

            /* set @资产账户证券代码编号串# = concat(";",@临时_证券代码编号#,";"); */
            set v_asac_stock_code_no_str = concat(";",v_tmp_stock_code_no,";");

            /* 调用【原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放】*/
            call db_tdsecu.pra_tdseac_FinaLoanAsacStrikeBackAmtRatio(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_crncy_type,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_asset_type,
                v_invest_type,
                v_debt_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_strike_fee,
                v_busi_opor_no,
                v_fina_return_strike_qty,
                v_fina_return_strike_amt,
                v_fina_return_order_qty,
                v_fina_return_order_amt,
                v_debt_strike_fee,
                v_error_code,
                v_error_info,
                v_remain_strike_amt,
                v_asac_detail_posi_id_str,
                v_asac_stock_code_no_str);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.93.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @临时_明细持仓序号串# = @资产账户明细持仓序号串#; */
            set v_tmp_detail_posi_id_str = v_asac_detail_posi_id_str;

            /* if @剩余成交金额# > 0 then */
            if v_remain_strike_amt > 0 then

                /* set @证券代码编号# = 0; */
                set v_stock_code_no = 0;

                /* set @融资归还订单数量#=0; */
                set v_fina_return_order_qty=0;

                /* set @融资归还订单金额#=0; */
                set v_fina_return_order_amt=0;

                /* set @成交变动金额# = @剩余成交金额#; */
                set v_strike_occur_amt = v_remain_strike_amt;

                /* 调用【原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放】*/
                call db_tdsecu.pra_tdseac_FinaLoanAsacStrikeBackAmtRatio(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_init_date,
                    v_co_no,
                    v_pd_no,
                    v_exch_group_no,
                    v_asset_acco_no,
                    v_exch_crncy_type,
                    v_exch_no,
                    v_stock_code,
                    v_stock_type,
                    v_asset_type,
                    v_invest_type,
                    v_debt_type,
                    v_order_dir,
                    v_stock_acco_no,
                    v_stock_code_no,
                    v_strike_occur_amt,
                    v_strike_occur_qty,
                    v_strike_fee,
                    v_busi_opor_no,
                    v_fina_return_strike_qty,
                    v_fina_return_strike_amt,
                    v_fina_return_order_qty,
                    v_fina_return_order_amt,
                    v_debt_strike_fee,
                    v_error_code,
                    v_error_info,
                    v_remain_strike_amt,
                    v_asac_detail_posi_id_str,
                    v_asac_stock_code_no_str);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.93.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

                #单纯为了主推，负债明细和持仓负债

                /* set @资产账户明细持仓序号串# = concat(@临时_明细持仓序号串#,@资产账户明细持仓序号串#); */
                set v_asac_detail_posi_id_str = concat(v_tmp_detail_posi_id_str,v_asac_detail_posi_id_str);

                /* set @资产账户证券代码编号串# = concat(";",@临时_证券代码编号#,@资产账户证券代码编号串#); */
                set v_asac_stock_code_no_str = concat(";",v_tmp_stock_code_no,v_asac_stock_code_no_str);
            end if;

            /* set @资产账户明细持仓序号串# = concat(";",@资产账户明细持仓序号串#); */
            set v_asac_detail_posi_id_str = concat(";",v_asac_detail_posi_id_str);
           #处理归还的那笔普通可用

           /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
           set v_create_date = date_format(curdate(),'%Y%m%d');
           set v_create_time = date_format(curtime(),'%H%i%s');
           set v_update_date = v_create_date;
           set v_update_time = v_create_time;
           set v_update_times = 1;
           insert into db_tdsecu.tb_tdseac_asac_busi_capit (
               create_date, create_time, update_date, 
               update_time, update_times, co_no, pd_no, 
               asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
               frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
               comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
               trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
           values(
               v_create_date, v_create_time, v_update_date, 
               v_update_time, v_update_times, v_co_no, v_pd_no, 
               v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
               v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
               v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
               v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
           ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.2.93.1";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
               else
                   SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
               end if;
               leave label_pro;
           end if;


        /* elseif @卖券还款方式# = 《卖券还款方式-先开先还》 or @订单方向# = 《订单方向-直接还款》 then */
        elseif v_fina_return_type = 1 or v_order_dir = 14 then

            /* set @证券代码编号# = 0; */
            set v_stock_code_no = 0;

            /* set @融资归还订单数量#=0; */
            set v_fina_return_order_qty=0;

            /* set @融资归还订单金额#=0; */
            set v_fina_return_order_amt=0;

            /* 调用【原子_交易证券_账户_融资融券成交卖券还款比例释放】*/
            call db_tdsecu.pra_tdseac_FinaLoanStrikeBackAmtRatio(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_crncy_type,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_asset_type,
                v_invest_type,
                v_debt_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_strike_fee,
                v_busi_opor_no,
                v_fina_return_strike_qty,
                v_fina_return_strike_amt,
                v_fina_return_order_qty,
                v_fina_return_order_amt,
                v_debt_strike_fee,
                v_error_code,
                v_error_info,
                v_remain_strike_amt,
                v_detail_posi_id_str,
                v_stock_code_no_str);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.93.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券成交卖券还款比例释放出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

            #单纯为了主推，负债明细和持仓负债

            /* set @明细持仓序号串# = concat(";",@明细持仓序号串#); */
            set v_detail_posi_id_str = concat(";",v_detail_posi_id_str);
           #处理归还的那笔普通可用

           /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
           set v_create_date = date_format(curdate(),'%Y%m%d');
           set v_create_time = date_format(curtime(),'%H%i%s');
           set v_update_date = v_create_date;
           set v_update_time = v_create_time;
           set v_update_times = 1;
           insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
               create_date, create_time, update_date, 
               update_time, update_times, co_no, pd_no, 
               exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
               curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
               comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
               trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
               strike_releas_amt) 
           values(
               v_create_date, v_create_time, v_update_date, 
               v_update_time, v_update_times, v_co_no, v_pd_no, 
               v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
               v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
               v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
               v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
               v_strike_releas_amt) 
           ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.2.93.1";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
               else
                   SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
               end if;
               leave label_pro;
           end if;


          /* if @订单操作方式# = 《订单操作方式-增强交易》 or @订单操作方式# = 《订单操作方式-增强交易平仓》 then */
          if v_order_oper_way = "14" or v_order_oper_way = "51" then

              /* [更新表记录][交易证券_T0_操作员阈值设置表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号} = @操作员编号#][1][@操作员编号#] */
              set v_update_date = date_format(curdate(),'%Y%m%d');
              set v_update_time = date_format(curtime(),'%H%i%s');
              update db_tdsecu.tb_tdset0_opor_tshold_set set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no = v_opor_no;
              if v_error_code = "1" then
                          
                  SET v_error_code = "tdsecuA.2.93.1";
                  if v_mysql_message <> "" then
                      SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no),"#",v_mysql_message);
                  else
                      SET v_error_info = concat("操作员编号=",v_opor_no);
                  end if;
                  leave label_pro;
              end if;


              /* [更新表记录][交易证券_T0_交易组业务资金表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号}=@操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种} = @交易币种#][1][@操作员编号#, @交易组编号# ,@资产账户编号#, @交易币种#] */
              set v_update_date = date_format(curdate(),'%Y%m%d');
              set v_update_time = date_format(curtime(),'%H%i%s');
              update db_tdsecu.tb_tdset0_exgp_busi_capit set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no=v_opor_no and exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type = v_exch_crncy_type;
              if v_error_code = "1" then
                          
                  SET v_error_code = "tdsecuA.2.93.1";
                  if v_mysql_message <> "" then
                      SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type),"#",v_mysql_message);
                  else
                      SET v_error_info = concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type);
                  end if;
                  leave label_pro;
              end if;

          end if;
            #处理资产账户层级

            /* 调用【原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放】*/
            call db_tdsecu.pra_tdseac_FinaLoanAsacStrikeBackAmtRatio(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_crncy_type,
                v_exch_no,
                v_stock_code,
                v_stock_type,
                v_asset_type,
                v_invest_type,
                v_debt_type,
                v_order_dir,
                v_stock_acco_no,
                v_stock_code_no,
                v_strike_occur_amt,
                v_strike_occur_qty,
                v_strike_fee,
                v_busi_opor_no,
                v_fina_return_strike_qty,
                v_fina_return_strike_amt,
                v_fina_return_order_qty,
                v_fina_return_order_amt,
                v_debt_strike_fee,
                v_error_code,
                v_error_info,
                v_remain_strike_amt,
                v_asac_detail_posi_id_str,
                v_asac_stock_code_no_str);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.93.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @资产账户明细持仓序号串# = concat(";",@明细持仓序号串#); */
            set v_asac_detail_posi_id_str = concat(";",v_detail_posi_id_str);
           #处理归还的那笔普通可用

           /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
           set v_create_date = date_format(curdate(),'%Y%m%d');
           set v_create_time = date_format(curtime(),'%H%i%s');
           set v_update_date = v_create_date;
           set v_update_time = v_create_time;
           set v_update_times = 1;
           insert into db_tdsecu.tb_tdseac_asac_busi_capit (
               create_date, create_time, update_date, 
               update_time, update_times, co_no, pd_no, 
               asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
               frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
               comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
               trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
           values(
               v_create_date, v_create_time, v_update_date, 
               v_update_time, v_update_times, v_co_no, v_pd_no, 
               v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
               v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
               v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
               v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
           ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.2.93.1";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
               else
                   SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
               end if;
               leave label_pro;
           end if;

        end if;

    /* elseif @订单方向# = 《订单方向-卖出》  then */
    elseif v_order_dir = 2  then

        /* set @负债类型# = 《负债类型-融资》; */
        set v_debt_type = 1;

        /* set @成交变动金额# = @成交变动金额# - @成交费用#; */
        set v_strike_occur_amt = v_strike_occur_amt - v_strike_fee;

        /* set @融资归还成交数量#=@成交变动数量#; */
        set v_fina_return_strike_qty=v_strike_occur_qty;

        /* set @融资归还成交金额#=@成交变动金额#; */
        set v_fina_return_strike_amt=v_strike_occur_amt;

        /* set @融资归还订单数量#=@交易变动数量#; */
        set v_fina_return_order_qty=v_trade_occur_qty;

        /* set @融资归还订单金额#=@交易变动金额#; */
        set v_fina_return_order_amt=v_trade_occur_amt;

        /* set @负债成交费用# = @成交费用#; */
        set v_debt_strike_fee = v_strike_fee;

        /* set @临时_成交变动金额# = @成交变动金额#; */
        set v_tmp_strike_occur_amt = v_strike_occur_amt;
        #先把归还的订单数量和金额更新掉

        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{负债成交费用} = {负债成交费用} +@负债成交费用#][5][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code, stock_code_no, stock_type, asset_type, 
            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
            debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
            v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,debt_strike_fee = debt_strike_fee +v_debt_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.5";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{负债成交费用} = {负债成交费用} +@负债成交费用#][6][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
            return_strike_fee, debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,debt_strike_fee = debt_strike_fee +v_debt_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.6";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;

        #只还本票

        /* set @证券代码编号串# = concat(";",@证券代码编号#,";"); */
        set v_stock_code_no_str = concat(";",v_stock_code_no,";");

        /* 调用【原子_交易证券_账户_融资融券成交卖券还款比例释放】*/
        call db_tdsecu.pra_tdseac_FinaLoanStrikeBackAmtRatio(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_invest_type,
            v_debt_type,
            v_order_dir,
            v_stock_acco_no,
            v_stock_code_no,
            v_strike_occur_amt,
            v_strike_occur_qty,
            v_strike_fee,
            v_busi_opor_no,
            v_fina_return_strike_qty,
            v_fina_return_strike_amt,
            v_fina_return_order_qty,
            v_fina_return_order_amt,
            v_debt_strike_fee,
            v_error_code,
            v_error_info,
            v_remain_strike_amt,
            v_detail_posi_id_str,
            v_stock_code_no_str);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.93.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券成交卖券还款比例释放出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @临时_明细持仓序号串# = @明细持仓序号串#; */
        set v_tmp_detail_posi_id_str = v_detail_posi_id_str;

        /* set @明细持仓序号串# = concat(";",@明细持仓序号串#); */
        set v_detail_posi_id_str = concat(";",v_detail_posi_id_str);

        /* [插入重复更新][交易证券_账户_交易组业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_crncy_type, begin_amt, 
            curr_amt, frozen_amt, unfroz_amt, comm_frozen_amt, 
            comm_unfroz_amt, comm_capt_amt, comm_releas_amt, trade_frozen_amt, 
            trade_unfroz_amt, trade_capt_amt, trade_releas_amt, strike_capt_amt, 
            strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_crncy_type, v_begin_amt, 
            v_curr_amt, v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, 
            v_comm_unfroz_amt, v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, 
            v_trade_unfroz_amt, v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, 
            v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;


        /* if @订单操作方式# = 《订单操作方式-增强交易》 or @订单操作方式# = 《订单操作方式-增强交易平仓》 then */
        if v_order_oper_way = "14" or v_order_oper_way = "51" then

            /* [更新表记录][交易证券_T0_操作员阈值设置表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号} = @操作员编号#][1][@操作员编号#] */
            set v_update_date = date_format(curdate(),'%Y%m%d');
            set v_update_time = date_format(curtime(),'%H%i%s');
            update db_tdsecu.tb_tdset0_opor_tshold_set set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no = v_opor_no;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.93.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("操作员编号=",v_opor_no);
                end if;
                leave label_pro;
            end if;


            /* [更新表记录][交易证券_T0_交易组业务资金表][{成交占用金额} = {成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][{操作员编号}=@操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号} = @资产账户编号# and {交易币种} = @交易币种#][1][@操作员编号#, @交易组编号# ,@资产账户编号#, @交易币种#] */
            set v_update_date = date_format(curdate(),'%Y%m%d');
            set v_update_time = date_format(curtime(),'%H%i%s');
            update db_tdsecu.tb_tdset0_exgp_busi_capit set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_capt_amt = strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt where opor_no=v_opor_no and exch_group_no=v_exch_group_no and asset_acco_no = v_asset_acco_no and exch_crncy_type = v_exch_crncy_type;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.93.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type),"#",v_mysql_message);
                else
                    SET v_error_info = concat("操作员编号=",v_opor_no,","," 交易组编号 =", v_exch_group_no ,",","资产账户编号=",v_asset_acco_no,","," 交易币种=", v_exch_crncy_type);
                end if;
                leave label_pro;
            end if;

        end if;

        /* set @资产账户证券代码编号串# = concat(";",@证券代码编号#,";"); */
        set v_asac_stock_code_no_str = concat(";",v_stock_code_no,";");

        /* 调用【原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放】*/
        call db_tdsecu.pra_tdseac_FinaLoanAsacStrikeBackAmtRatio(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_invest_type,
            v_debt_type,
            v_order_dir,
            v_stock_acco_no,
            v_stock_code_no,
            v_strike_occur_amt,
            v_strike_occur_qty,
            v_strike_fee,
            v_busi_opor_no,
            v_fina_return_strike_qty,
            v_fina_return_strike_amt,
            v_fina_return_order_qty,
            v_fina_return_order_amt,
            v_debt_strike_fee,
            v_error_code,
            v_error_info,
            v_remain_strike_amt,
            v_asac_detail_posi_id_str,
            v_asac_stock_code_no_str);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.93.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @临时_明细持仓序号串# = @明细持仓序号串#; */
        set v_tmp_detail_posi_id_str = v_detail_posi_id_str;

        /* set @资产账户明细持仓序号串# = concat(";",@明细持仓序号串#); */
        set v_asac_detail_posi_id_str = concat(";",v_detail_posi_id_str);

        /* [插入重复更新][交易证券_账户_资产账户业务资金表][字段][字段变量][{成交占用金额}={成交占用金额} + @临时_成交变动金额# - @剩余成交金额#][1][@资产账户编号#,@交易币种#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capit (
            create_date, create_time, update_date, 
            update_time, update_times, co_no, pd_no, 
            asset_acco_no, exch_crncy_type, begin_amt, curr_amt, 
            frozen_amt, unfroz_amt, comm_frozen_amt, comm_unfroz_amt, 
            comm_capt_amt, comm_releas_amt, trade_frozen_amt, trade_unfroz_amt, 
            trade_capt_amt, trade_releas_amt, strike_capt_amt, strike_releas_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_co_no, v_pd_no, 
            v_asset_acco_no, v_exch_crncy_type, v_begin_amt, v_curr_amt, 
            v_frozen_amt, v_unfroz_amt, v_comm_frozen_amt, v_comm_unfroz_amt, 
            v_comm_capt_amt, v_comm_releas_amt, v_trade_frozen_amt, v_trade_unfroz_amt, 
            v_trade_capt_amt, v_trade_releas_amt, v_strike_capt_amt, v_strike_releas_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, strike_capt_amt=strike_capt_amt + v_tmp_strike_occur_amt - v_remain_strike_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","交易币种=",v_exch_crncy_type);
            end if;
            leave label_pro;
        end if;


    /* elseif @订单方向# = 《订单方向-买券还券》 or @订单方向# = 《订单方向-直接还券》 then */
    elseif v_order_dir = 8 or v_order_dir = 15 then

        /* set @负债类型# = 《负债类型-融券》; */
        set v_debt_type = 2;

        /* if @订单方向# = 《订单方向-买券还券》 then */
        if v_order_dir = 8 then

            /* set @成交变动金额# = @成交变动金额#; */
            set v_strike_occur_amt = v_strike_occur_amt;
        else

            /* set @成交变动金额# = -@成交费用#; */
            set v_strike_occur_amt = -v_strike_fee;
        end if;

        /* set @融券归还成交数量#=@成交变动数量#; */
        set v_loan_return_strike_qty=v_strike_occur_qty;

        /* set @融券归还成交金额#=@成交变动金额#; */
        set v_loan_return_strike_amt=v_strike_occur_amt;

        /* set @融券归还订单金额# = @交易变动金额#; */
        set v_loan_return_order_amt = v_trade_occur_amt;

        /* set @融券归还订单数量#=@交易变动数量#; */
        set v_loan_return_order_qty=v_trade_occur_qty;

        /* set @负债成交费用# = @成交费用#; */
        set v_debt_strike_fee = v_strike_fee;

        /* set @归还成交费用# = @成交费用#; */
        set v_return_strike_fee = v_strike_fee;
        #买券还券的优先原则：先进先出，只还券，不处理利息和费用

        /* 调用【原子_交易证券_账户_融资融券成交买券还券比例释放】*/
        call db_tdsecu.pra_tdseac_FinaLoanStrikeBackStockRatio(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_invest_type,
            v_debt_type,
            v_stock_acco_no,
            v_stock_code_no,
            v_strike_occur_amt,
            v_strike_occur_qty,
            v_busi_opor_no,
            v_strike_fee,
            v_error_code,
            v_error_info,
            v_remain_strike_qty,
            v_detail_posi_id_str,
            v_return_interest_amt,
            v_loan_return_strike_amt,
            v_return_strike_fee);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.93.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券成交买券还券比例释放出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#-@剩余成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#+@归还成交费用#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, exch_no, 
            stock_acco_no, stock_code, stock_code_no, stock_type, 
            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
            return_strike_fee, debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty-v_remain_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt+v_return_strike_fee,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_交易组业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{归还成交费用} = {归还成交费用}+@归还成交费用#][1][@交易组编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_exgp_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_group_no, debt_loan_sell_strike_amt, 
            debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
            return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_group_no, v_debt_loan_sell_strike_amt, 
            v_debt_strike_fee, v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, 
            v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,return_strike_fee = return_strike_fee+v_return_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组编号=",v_exch_group_no);
            end if;
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_融资融券资产账户成交买券还券比例释放】*/
        call db_tdsecu.pra_tdseac_FinaLoanAsacStrikeBackStockRatio(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_invest_type,
            v_debt_type,
            v_stock_acco_no,
            v_stock_code_no,
            v_strike_occur_amt,
            v_strike_occur_qty,
            v_busi_opor_no,
            v_strike_fee,
            v_error_code,
            v_error_info,
            v_remain_strike_qty,
            v_detail_posi_id_str,
            v_return_interest_amt,
            v_loan_return_strike_amt,
            v_return_strike_fee);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.2.93.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_融资融券资产账户成交买券还券比例释放出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#-@剩余成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#+@归还成交费用#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code, stock_code_no, stock_type, asset_type, 
            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
            debt_interest, return_interest_amt) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
            v_debt_interest, v_return_interest_amt) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty-v_remain_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt+v_return_strike_fee,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;


        /* [插入重复更新][交易证券_账户_资产账户业务资金负债表][字段][字段变量][{负债融券卖出成交金额} = {负债融券卖出成交金额} +@负债融券卖出成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{归还成交费用} = {归还成交费用}+@归还成交费用#][1][@资产账户编号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseac_asac_busi_capital_debt (
            create_date, create_time, update_date, 
            update_time, update_times, init_date, co_no, 
            pd_no, asset_acco_no, debt_loan_sell_strike_amt, debt_strike_fee, 
            loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, return_strike_fee) 
        values(
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_init_date, v_co_no, 
            v_pd_no, v_asset_acco_no, v_debt_loan_sell_strike_amt, v_debt_strike_fee, 
            v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, v_return_strike_fee) 
        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_loan_sell_strike_amt = debt_loan_sell_strike_amt +v_debt_loan_sell_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,return_strike_fee = return_strike_fee+v_return_strike_fee;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.2.93.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
            else
                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_debt_type = v_debt_type;
    SET p_stock_code_no_str = v_stock_code_no_str;
    SET p_asac_detail_posi_id_str = v_asac_detail_posi_id_str;
    SET p_asac_stock_code_no_str = v_asac_stock_code_no_str;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组融资融券保证金计算结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpFinaLoanMarginCalcList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpFinaLoanMarginCalcList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组融资融券保证金计算表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        converted_margin, fina_converted_pandl, loan_converted_pandl, fina_capt_margin, 
        loan_capt_margin, keep_guarantee_ratio from db_tdsecu.tb_tdseac_exgp_fina_loan_margin_calc where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        converted_margin, fina_converted_pandl, loan_converted_pandl, fina_capt_margin, 
        loan_capt_margin, keep_guarantee_ratio from db_tdsecu.tb_tdseac_exgp_fina_loan_margin_calc where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户融资融券保证金计算结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacFinaLoanMarginCalcList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacFinaLoanMarginCalcList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户融资融券保证金计算表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号#) and (@产品编号权限串# = ' ' or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, converted_margin, 
        fina_converted_pandl, loan_converted_pandl, fina_capt_margin, loan_capt_margin, 
        keep_guarantee_ratio from db_tdsecu.tb_tdseac_asac_fina_loan_margin_calc where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, converted_margin, 
        fina_converted_pandl, loan_converted_pandl, fina_capt_margin, loan_capt_margin, 
        keep_guarantee_ratio from db_tdsecu.tb_tdseac_asac_fina_loan_margin_calc where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组业务资金负债结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBusiCapitalDebtList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBusiCapitalDebtList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组业务资金负债表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        debt_loan_sell_strike_amt, debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, 
        loan_return_comm_amt, return_strike_fee from db_tdsecu.tb_tdseac_exgp_busi_capital_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        debt_loan_sell_strike_amt, debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, 
        loan_return_comm_amt, return_strike_fee from db_tdsecu.tb_tdseac_exgp_busi_capital_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户业务资金负债结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacBusiCapitalDebtList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacBusiCapitalDebtList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户业务资金负债表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号#) and (@产品编号权限串# = ' ' or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, debt_loan_sell_strike_amt, 
        debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
        return_strike_fee from db_tdsecu.tb_tdseac_asac_busi_capital_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, debt_loan_sell_strike_amt, 
        debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
        return_strike_fee from db_tdsecu.tb_tdseac_asac_busi_capital_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组业务持仓负债结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBusiPosiDebtList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBusiPosiDebtList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_exch_group_no_rights_str varchar(2048),
    IN p_debt_type int,
    IN p_stock_code_no_str varchar(4096),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_debt_type int;
    declare v_stock_code_no_str varchar(4096);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_debt_type = p_debt_type;
    SET v_stock_code_no_str = p_stock_code_no_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组业务持仓负债表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and (@负债类型# = 0 or {负债类型} = @负债类型#) and (@证券代码编号串# = ' ' or  instr(@证券代码编号串#,{证券代码编号}) > 0 ) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, invest_type, debt_type, 
        debt_fina_buy_strike_qty, fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, 
        debt_fina_buy_order_qty, fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, 
        debt_fina_buy_comm_qty, fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, 
        debt_fina_buy_strike_amt, fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, 
        debt_fina_buy_order_amt, fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, 
        debt_fina_buy_comm_amt, fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, 
        debt_strike_fee, return_strike_fee, debt_interest, return_interest_amt from db_tdsecu.tb_tdseac_exgp_busi_posi_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no_str = ' ' or  instr(v_stock_code_no_str,stock_code_no) > 0 ) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, invest_type, debt_type, 
        debt_fina_buy_strike_qty, fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, 
        debt_fina_buy_order_qty, fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, 
        debt_fina_buy_comm_qty, fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, 
        debt_fina_buy_strike_amt, fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, 
        debt_fina_buy_order_amt, fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, 
        debt_fina_buy_comm_amt, fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, 
        debt_strike_fee, return_strike_fee, debt_interest, return_interest_amt from db_tdsecu.tb_tdseac_exgp_busi_posi_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no_str = ' ' or  instr(v_stock_code_no_str,stock_code_no) > 0 ) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户业务持仓负债结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacBusiPosiDebtList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacBusiPosiDebtList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    IN p_debt_type int,
    IN p_stock_code_no_str varchar(4096),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_debt_type int;
    declare v_stock_code_no_str varchar(4096);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_debt_type = p_debt_type;
    SET v_stock_code_no_str = p_stock_code_no_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户业务持仓负债表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号#) and (@产品编号权限串# = ' ' or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and (@负债类型# = 0 or {负债类型} = @负债类型#) and (@证券代码编号串# = ' ' or  instr(@证券代码编号串#,{证券代码编号}) > 0 ) and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code, stock_code_no, stock_type, 
        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
        return_strike_fee, debt_interest, return_interest_amt from db_tdsecu.tb_tdseac_asac_busi_posi_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no_str = ' ' or  instr(v_stock_code_no_str,stock_code_no) > 0 ) and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code, stock_code_no, stock_type, 
        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
        return_strike_fee, debt_interest, return_interest_amt from db_tdsecu.tb_tdseac_asac_busi_posi_debt where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no_str = ' ' or  instr(v_stock_code_no_str,stock_code_no) > 0 ) and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组融资融券保证金计算
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpFinaLoanMarginCalc;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpFinaLoanMarginCalc(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_converted_margin decimal(18,4),
    OUT p_fina_converted_pandl decimal(18,4),
    OUT p_loan_converted_pandl decimal(18,4),
    OUT p_fina_capt_margin decimal(18,4),
    OUT p_loan_capt_margin decimal(18,4),
    OUT p_keep_guarantee_ratio decimal(18,12)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_converted_margin decimal(18,4);
    declare v_fina_converted_pandl decimal(18,4);
    declare v_loan_converted_pandl decimal(18,4);
    declare v_fina_capt_margin decimal(18,4);
    declare v_loan_capt_margin decimal(18,4);
    declare v_keep_guarantee_ratio decimal(18,12);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_init_date int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_converted_margin = 0;
    SET v_fina_converted_pandl = 0;
    SET v_loan_converted_pandl = 0;
    SET v_fina_capt_margin = 0;
    SET v_loan_capt_margin = 0;
    SET v_keep_guarantee_ratio = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_init_date = date_format(curdate(),'%Y%m%d');

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_账户_交易组融资融券保证金计算表][字段][字段变量][{机构编号} = @机构编号# and {产品编号}=@产品编号# and {交易组编号} = @交易组编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        converted_margin, fina_converted_pandl, loan_converted_pandl, fina_capt_margin, 
        loan_capt_margin, keep_guarantee_ratio into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_converted_margin, v_fina_converted_pandl, v_loan_converted_pandl, v_fina_capt_margin, 
        v_loan_capt_margin, v_keep_guarantee_ratio from db_tdsecu.tb_tdseac_exgp_fina_loan_margin_calc where co_no = v_co_no and pd_no=v_pd_no and exch_group_no = v_exch_group_no limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_converted_margin = v_converted_margin;
    SET p_fina_converted_pandl = v_fina_converted_pandl;
    SET p_loan_converted_pandl = v_loan_converted_pandl;
    SET p_fina_capt_margin = v_fina_capt_margin;
    SET p_loan_capt_margin = v_loan_capt_margin;
    SET p_keep_guarantee_ratio = v_keep_guarantee_ratio;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户融资融券保证金计算
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacFinaLoanMarginCalc;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacFinaLoanMarginCalc(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_converted_margin decimal(18,4),
    OUT p_fina_converted_pandl decimal(18,4),
    OUT p_loan_converted_pandl decimal(18,4),
    OUT p_fina_capt_margin decimal(18,4),
    OUT p_loan_capt_margin decimal(18,4),
    OUT p_keep_guarantee_ratio decimal(18,12)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_converted_margin decimal(18,4);
    declare v_fina_converted_pandl decimal(18,4);
    declare v_loan_converted_pandl decimal(18,4);
    declare v_fina_capt_margin decimal(18,4);
    declare v_loan_capt_margin decimal(18,4);
    declare v_keep_guarantee_ratio decimal(18,12);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_init_date int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_converted_margin = 0;
    SET v_fina_converted_pandl = 0;
    SET v_loan_converted_pandl = 0;
    SET v_fina_capt_margin = 0;
    SET v_loan_capt_margin = 0;
    SET v_keep_guarantee_ratio = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_init_date = date_format(curdate(),'%Y%m%d');

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_账户_资产账户融资融券保证金计算表][字段][字段变量][{机构编号} = @机构编号# and {产品编号}=@产品编号# and {资产账户编号} = @资产账户编号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, converted_margin, 
        fina_converted_pandl, loan_converted_pandl, fina_capt_margin, loan_capt_margin, 
        keep_guarantee_ratio into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_asset_acco_no, v_converted_margin, 
        v_fina_converted_pandl, v_loan_converted_pandl, v_fina_capt_margin, v_loan_capt_margin, 
        v_keep_guarantee_ratio from db_tdsecu.tb_tdseac_asac_fina_loan_margin_calc where co_no = v_co_no and pd_no=v_pd_no and asset_acco_no = v_asset_acco_no limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_converted_margin = v_converted_margin;
    SET p_fina_converted_pandl = v_fina_converted_pandl;
    SET p_loan_converted_pandl = v_loan_converted_pandl;
    SET p_fina_capt_margin = v_fina_capt_margin;
    SET p_loan_capt_margin = v_loan_capt_margin;
    SET p_keep_guarantee_ratio = v_keep_guarantee_ratio;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券成交卖券还款
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanStrikeBackAmt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanStrikeBackAmt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_strike_fee decimal(18,4),
    IN p_busi_opor_no int,
    IN p_fina_return_strike_qty decimal(18,2),
    IN p_fina_return_strike_amt decimal(18,4),
    IN p_fina_return_order_qty decimal(18,2),
    IN p_fina_return_order_amt decimal(18,4),
    IN p_debt_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_amt decimal(18,4),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_stock_code_no_str varchar(4096)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_strike_fee decimal(18,4);
    declare v_busi_opor_no int;
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_amt decimal(18,4);
    declare v_detail_posi_id_str varchar(1024);
    declare v_stock_code_no_str varchar(4096);
    declare v_row_id bigint;
    declare v_tmp_stock_code_no int;
    declare v_tmp_strike_occur_amt decimal(18,4);
    declare v_tmp_return_interest_amt decimal(18,4);
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_record_count int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_tmp_debt_return_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_strike_fee = p_strike_fee;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_fina_return_strike_qty = p_fina_return_strike_qty;
    SET v_fina_return_strike_amt = p_fina_return_strike_amt;
    SET v_fina_return_order_qty = p_fina_return_order_qty;
    SET v_fina_return_order_amt = p_fina_return_order_amt;
    SET v_debt_strike_fee = p_debt_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_amt = 0;
    SET v_detail_posi_id_str = " ";
    SET v_stock_code_no_str = " ";
    SET v_row_id = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_tmp_strike_occur_amt = 0;
    SET v_tmp_return_interest_amt = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_record_count = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_qty = 0;

    
    label_pro:BEGIN
    
    #负债金额已经包含费用

    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @明细持仓序号串# = ""; */
    set v_detail_posi_id_str = "";

    /* set @证券代码编号串# = ";"; */
    set v_stock_code_no_str = ";";

    /* set @临时_证券代码编号# =@证券代码编号#; */
    set v_tmp_stock_code_no =v_stock_code_no;

    /* set @剩余成交金额# = @成交变动金额#; */
    set v_remain_strike_amt = v_strike_occur_amt;

    /* set @临时_成交变动金额# = @成交变动金额#; */
    set v_tmp_strike_occur_amt = v_strike_occur_amt;

    /* set @临时_归还利息金额# = 0; */
    set v_tmp_return_interest_amt = 0;

    /* set @负债融资买入成交数量# = 0; */
    set v_debt_fina_buy_strike_qty = 0;

    /* set @负债融券卖出成交数量# = 0; */
    set v_debt_loan_sell_strike_qty = 0;

    /* set @融券归还成交数量# = 0; */
    set v_loan_return_strike_qty = 0;

    /* set @负债融资买入订单数量# = 0; */
    set v_debt_fina_buy_order_qty = 0;

    /* set @负债融券卖出订单数量# = 0; */
    set v_debt_loan_sell_order_qty = 0;

    /* set @融券归还订单数量# = 0; */
    set v_loan_return_order_qty = 0;

    /* set @负债融资买入指令数量# = 0; */
    set v_debt_fina_buy_comm_qty = 0;

    /* set @融资归还指令数量# = 0; */
    set v_fina_return_comm_qty = 0;

    /* set @负债融券卖出指令数量# = 0; */
    set v_debt_loan_sell_comm_qty = 0;

    /* set @融券归还指令数量# = 0; */
    set v_loan_return_comm_qty = 0;

    /* set @负债融资买入成交金额# = 0; */
    set v_debt_fina_buy_strike_amt = 0;

    /* set @负债融券卖出成交金额# = 0; */
    set v_debt_loan_sell_strike_amt = 0;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @负债融资买入订单金额# = 0; */
    set v_debt_fina_buy_order_amt = 0;

    /* set @负债融券卖出订单金额# = 0; */
    set v_debt_loan_sell_order_amt = 0;

    /* set @融券归还订单金额# = 0; */
    set v_loan_return_order_amt = 0;

    /* set @负债融资买入指令金额# = 0; */
    set v_debt_fina_buy_comm_amt = 0;

    /* set @融资归还指令金额# = 0; */
    set v_fina_return_comm_amt = 0;

    /* set @负债融券卖出指令金额# = 0; */
    set v_debt_loan_sell_comm_amt = 0;

    /* set @融券归还指令金额# = 0; */
    set v_loan_return_comm_amt = 0;

    /* set @归还成交费用# = 0; */
    set v_return_strike_fee = 0;

    /* set @负债利息# = 0; */
    set v_debt_interest = 0;

    /* set @归还利息金额# = 0; */
    set v_return_interest_amt = 0;

    /* set @利息积数# = 0; */
    set v_intrst_base_amt = 0;

    /* set @已归还金额# = 0; */
    set v_debt_return_amt = 0;

    /* set @已归还数量# = 0; */
    set v_debt_return_qty = 0;

    /* set @负债状态# = 《负债状态-未归还》; */
    set v_debt_status = 1;

    /* set @备注信息# = " "; */
    set v_remark_info = " ";

    /* if @成交费用# = 0 then */
    if v_strike_fee = 0 then
        loop_label:loop

            /* 调用【原子_交易证券_账户_锁定获取持仓负债记录】*/
            call db_tdsecu.pra_tdseac_LockGetStockPosiDebtDetail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_stock_code_no,
                v_busi_opor_no,
                v_debt_type,
                v_row_id,
                v_error_code,
                v_error_info,
                v_detail_posi_id,
                v_init_date,
                v_pass_no,
                v_exch_no,
                v_stock_type,
                v_asset_type,
                v_strike_qty,
                v_strike_amt,
                v_strike_fee,
                v_order_no,
                v_report_no,
                v_order_date,
                v_order_time,
                v_order_dir,
                v_order_price,
                v_order_qty,
                v_debt_amt,
                v_debt_qty,
                v_debt_fee,
                v_debt_interest,
                v_intrst_base_amt,
                v_debt_return_amt,
                v_debt_return_qty,
                v_return_interest_amt,
                v_debt_status,
                v_remark_info,
                v_update_times,
                v_stock_code,
                v_stock_acco_no,
                v_target_stock_code_no);

            /* if @错误编码#="0" then */
            if v_error_code="0" then

                /* set @证券代码编号# = @目标证券代码编号#; */
                set v_stock_code_no = v_target_stock_code_no;

                /* set @记录序号# = @明细持仓序号#; */
                set v_row_id = v_detail_posi_id;

                /* set @明细持仓序号串# = concat(@明细持仓序号串#,@明细持仓序号#,";"); */
                set v_detail_posi_id_str = concat(v_detail_posi_id_str,v_detail_posi_id,";");
                #该笔明细足够归还

                /* if (@负债金额#+@负债利息#) >(@已归还金额#+@归还利息金额# +@成交变动金额#) then */
                if (v_debt_amt+v_debt_interest) >(v_debt_return_amt+v_return_interest_amt +v_strike_occur_amt) then
                    #先还费用、利息、再还负债
                    #1-只还费用

                    /* if  @成交变动金额# >0 and @归还利息金额# = 0 and @成交变动金额# <= ( @负债费用# - @已归还金额#) and @已归还金额# < @负债费用# then */
                    if  v_strike_occur_amt >0 and v_return_interest_amt = 0 and v_strike_occur_amt <= ( v_debt_fee - v_debt_return_amt) and v_debt_return_amt < v_debt_fee then

                        /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {已归还金额} + @成交变动金额#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                        set v_update_date = date_format(curdate(),'%Y%m%d');
                        set v_update_time = date_format(curtime(),'%H%i%s');
                        update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_return_amt + v_strike_occur_amt where row_id = v_detail_posi_id;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @融资归还成交金额# = @成交变动金额#; */
                        set v_fina_return_strike_amt = v_strike_occur_amt;

                        /* set @融资归还成交数量# =0; */
                        set v_fina_return_strike_qty =0;

                        /* set @归还利息金额# = 0; */
                        set v_return_interest_amt = 0;

                        /* [获取表记录数量][交易证券_账户_资产账户业务持仓负债表][@记录个数#][{初始化日期}=@初始化日期# and {机构编号}=@机构编号# and {产品编号}=@产品编号# and {资产账户编号}=@资产账户编号#  and {股东代码编号}=@股东代码编号# and {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#] */
                        select count(1) into v_record_count from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date=v_init_date and co_no=v_co_no and pd_no=v_pd_no and asset_acco_no=v_asset_acco_no  and stock_acco_no=v_stock_acco_no and stock_code_no = v_stock_code_no and debt_type = v_debt_type;


                        /* if @记录个数# =0 then */
                        if v_record_count =0 then

                            /* set @融资归还订单数量# = 0; */
                            set v_fina_return_order_qty = 0;

                            /* set @融资归还订单金额# = 0; */
                            set v_fina_return_order_amt = 0;

                            /* set @负债利息# = 0; */
                            set v_debt_interest = 0;
                        end if;

                        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][1][@资产账户编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_no, stock_acco_no, 
                            stock_code, stock_code_no, stock_type, asset_type, 
                            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                            debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                            v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][2][@交易组编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_group_no, exch_no, 
                            stock_acco_no, stock_code, stock_code_no, stock_type, 
                            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                            return_strike_fee, debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.2";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("交易组编号=",v_exch_group_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @剩余成交金额# = 0; */
                        set v_remain_strike_amt = 0;
                        #如果代码不包在串里，则添加进串内

                        /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                        if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                            /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                            set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                        end if;
                        leave loop_label;
                    end if;
                  #2-只还费用和利息

                    /* if @成交变动金额# >0 and @成交变动金额# <= (@负债利息#+@负债费用# - @已归还金额#) and @已归还金额# < (@负债利息#+@负债费用#) then */
                    if v_strike_occur_amt >0 and v_strike_occur_amt <= (v_debt_interest+v_debt_fee - v_debt_return_amt) and v_debt_return_amt < (v_debt_interest+v_debt_fee) then

                        /* set @临时_归还利息金额# = @成交变动金额# - @负债费用#; */
                        set v_tmp_return_interest_amt = v_strike_occur_amt - v_debt_fee;

                        /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {已归还金额} + @成交变动金额#-{负债利息},{归还利息金额} = {归还利息金额} + @临时_归还利息金额#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                        set v_update_date = date_format(curdate(),'%Y%m%d');
                        set v_update_time = date_format(curtime(),'%H%i%s');
                        update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_return_amt + v_strike_occur_amt-debt_interest,return_interest_amt = return_interest_amt + v_tmp_return_interest_amt where row_id = v_detail_posi_id;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @融资归还成交金额# = @成交变动金额# - @负债利息#; */
                        set v_fina_return_strike_amt = v_strike_occur_amt - v_debt_interest;

                        /* set @融资归还成交数量# =0; */
                        set v_fina_return_strike_qty =0;

                        /* set @归还利息金额# = @临时_归还利息金额#; */
                        set v_return_interest_amt = v_tmp_return_interest_amt;

                        /* [获取表记录数量][交易证券_账户_资产账户业务持仓负债表][@记录个数#][{初始化日期}=@初始化日期# and {机构编号}=@机构编号# and {产品编号}=@产品编号# and {资产账户编号}=@资产账户编号#  and {股东代码编号}=@股东代码编号# and {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#] */
                        select count(1) into v_record_count from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date=v_init_date and co_no=v_co_no and pd_no=v_pd_no and asset_acco_no=v_asset_acco_no  and stock_acco_no=v_stock_acco_no and stock_code_no = v_stock_code_no and debt_type = v_debt_type;


                        /* if @记录个数# =0 then */
                        if v_record_count =0 then

                            /* set @融资归还订单数量# = 0; */
                            set v_fina_return_order_qty = 0;

                            /* set @融资归还订单金额# = 0; */
                            set v_fina_return_order_amt = 0;

                            /* set @负债利息# = 0; */
                            set v_debt_interest = 0;
                        end if;

                        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][3][@资产账户编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_no, stock_acco_no, 
                            stock_code, stock_code_no, stock_type, asset_type, 
                            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                            debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                            v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.3";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][4][@交易组编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_group_no, exch_no, 
                            stock_acco_no, stock_code, stock_code_no, stock_type, 
                            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                            return_strike_fee, debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.4";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("交易组编号=",v_exch_group_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @剩余成交金额# = 0; */
                        set v_remain_strike_amt = 0;
                        #如果代码不包在串里，则添加进串内

                        /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                        if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                            /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                            set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                        end if;
                        leave loop_label;
                    end if;
                  #3-还费用和利息和本金金额

                    /* if @成交变动金额# >0 and @成交变动金额# <= (@负债金额#+@负债费用#+@负债利息# - @已归还金额# - @归还利息金额#) then */
                    if v_strike_occur_amt >0 and v_strike_occur_amt <= (v_debt_amt+v_debt_fee+v_debt_interest - v_debt_return_amt - v_return_interest_amt) then

                        /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {已归还金额} + @成交变动金额# - ({负债利息}-{归还利息金额}),{归还利息金额} =@负债利息#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                        set v_update_date = date_format(curdate(),'%Y%m%d');
                        set v_update_time = date_format(curtime(),'%H%i%s');
                        update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_return_amt + v_strike_occur_amt - (debt_interest-return_interest_amt),return_interest_amt =v_debt_interest where row_id = v_detail_posi_id;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @融资归还成交金额# = @成交变动金额# - (@负债利息# - @归还利息金额#); */
                        set v_fina_return_strike_amt = v_strike_occur_amt - (v_debt_interest - v_return_interest_amt);

                        /* set @融资归还成交数量# =0; */
                        set v_fina_return_strike_qty =0;

                        /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                        set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                        /* [获取表记录数量][交易证券_账户_资产账户业务持仓负债表][@记录个数#][{初始化日期}=@初始化日期# and {机构编号}=@机构编号# and {产品编号}=@产品编号# and {资产账户编号}=@资产账户编号#  and {股东代码编号}=@股东代码编号# and {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#] */
                        select count(1) into v_record_count from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date=v_init_date and co_no=v_co_no and pd_no=v_pd_no and asset_acco_no=v_asset_acco_no  and stock_acco_no=v_stock_acco_no and stock_code_no = v_stock_code_no and debt_type = v_debt_type;


                        /* if @记录个数# =0 then */
                        if v_record_count =0 then

                            /* set @融资归还订单数量# = 0; */
                            set v_fina_return_order_qty = 0;

                            /* set @融资归还订单金额# = 0; */
                            set v_fina_return_order_amt = 0;

                            /* set @负债利息# = 0; */
                            set v_debt_interest = 0;
                        end if;

                        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][5][@资产账户编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_no, stock_acco_no, 
                            stock_code, stock_code_no, stock_type, asset_type, 
                            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                            debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                            v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.5";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][6][@交易组编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_group_no, exch_no, 
                            stock_acco_no, stock_code, stock_code_no, stock_type, 
                            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                            return_strike_fee, debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.102.6";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("交易组编号=",v_exch_group_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @剩余成交金额# = 0; */
                        set v_remain_strike_amt = 0;
                        #如果代码不包在串里，则添加进串内

                        /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                        if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                            /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                            set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                        end if;
                        leave loop_label;
                    end if;

               /* elseif  (@负债金额#+@负债利息#) = (@已归还金额# +@成交变动金额#+@归还利息金额#) then */
               elseif  (v_debt_amt+v_debt_interest) = (v_debt_return_amt +v_strike_occur_amt+v_return_interest_amt) then
                   #该笔明细刚好归还完

                   /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {负债金额}- @负债利息#,{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt- v_debt_interest,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.102.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# =  @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt =  v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                    /* [获取表记录数量][交易证券_账户_资产账户业务持仓负债表][@记录个数#][{初始化日期}=@初始化日期# and {机构编号}=@机构编号# and {产品编号}=@产品编号# and {资产账户编号}=@资产账户编号#  and {股东代码编号}=@股东代码编号# and {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#] */
                    select count(1) into v_record_count from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date=v_init_date and co_no=v_co_no and pd_no=v_pd_no and asset_acco_no=v_asset_acco_no  and stock_acco_no=v_stock_acco_no and stock_code_no = v_stock_code_no and debt_type = v_debt_type;


                    /* if @记录个数# =0 then */
                    if v_record_count =0 then

                        /* set @融资归还订单数量# = 0; */
                        set v_fina_return_order_qty = 0;

                        /* set @融资归还订单金额# = 0; */
                        set v_fina_return_order_amt = 0;

                        /* set @负债利息# = 0; */
                        set v_debt_interest = 0;
                    end if;

                    /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][7][@资产账户编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_no, stock_acco_no, 
                        stock_code, stock_code_no, stock_type, asset_type, 
                        invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                        debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                        debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                        debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                        debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                        debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                        debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                        debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                        v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                        v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                        v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                        v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                        v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                        v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                        v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                        v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                        v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.102.7";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                        end if;
                        leave label_pro;
                    end if;


                    /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][8][@交易组编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_group_no, exch_no, 
                        stock_acco_no, stock_code, stock_code_no, stock_type, 
                        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                        return_strike_fee, debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                        v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.102.8";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("交易组编号=",v_exch_group_no);
                        end if;
                        leave label_pro;
                    end if;


                   /* set @剩余成交金额# = 0; */
                   set v_remain_strike_amt = 0;
                   #如果代码不包在串里，则添加进串内

                   /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                       set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                   end if;
                   leave loop_label;
               else
                   #该笔明细不足以归还，继续更新下一笔

                   /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {负债金额},{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.102.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# = @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt = v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                    /* [获取表记录数量][交易证券_账户_资产账户业务持仓负债表][@记录个数#][{初始化日期}=@初始化日期# and {机构编号}=@机构编号# and {产品编号}=@产品编号# and {资产账户编号}=@资产账户编号#  and {股东代码编号}=@股东代码编号# and {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#] */
                    select count(1) into v_record_count from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date=v_init_date and co_no=v_co_no and pd_no=v_pd_no and asset_acco_no=v_asset_acco_no  and stock_acco_no=v_stock_acco_no and stock_code_no = v_stock_code_no and debt_type = v_debt_type;


                    /* if @记录个数# =0 then */
                    if v_record_count =0 then

                        /* set @融资归还订单数量# = 0; */
                        set v_fina_return_order_qty = 0;

                        /* set @融资归还订单金额# = 0; */
                        set v_fina_return_order_amt = 0;

                        /* set @负债利息# = 0; */
                        set v_debt_interest = 0;
                    end if;

                    /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][9][@资产账户编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_no, stock_acco_no, 
                        stock_code, stock_code_no, stock_type, asset_type, 
                        invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                        debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                        debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                        debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                        debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                        debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                        debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                        debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                        v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                        v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                        v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                        v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                        v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                        v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                        v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                        v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                        v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.102.9";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                        end if;
                        leave label_pro;
                    end if;


                    /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债成交费用}={负债成交费用}+@负债成交费用#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{融资归还订单数量}={融资归还订单数量}+@融资归还订单数量#,{融资归还订单金额}={融资归还订单金额}+@融资归还订单金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][10][@交易组编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_group_no, exch_no, 
                        stock_acco_no, stock_code, stock_code_no, stock_type, 
                        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                        return_strike_fee, debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                        v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_strike_fee=debt_strike_fee+v_debt_strike_fee,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,fina_return_order_qty=fina_return_order_qty+v_fina_return_order_qty,fina_return_order_amt=fina_return_order_amt+v_fina_return_order_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.102.10";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("交易组编号=",v_exch_group_no);
                        end if;
                        leave label_pro;
                    end if;


                    /* set @融资归还订单数量# = 0; */
                    set v_fina_return_order_qty = 0;

                    /* set @融资归还订单金额# = 0; */
                    set v_fina_return_order_amt = 0;

                   /* set @成交变动金额# = @成交变动金额# - (@负债金额#  - @已归还金额# + @归还利息金额#); */
                   set v_strike_occur_amt = v_strike_occur_amt - (v_debt_amt  - v_debt_return_amt + v_return_interest_amt);

                   /* set @剩余成交金额# = @成交变动金额#; */
                   set v_remain_strike_amt = v_strike_occur_amt;
                   #如果代码不包在串里，则添加进串内

                   /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                       set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                   end if;
                    #如果找不到本票，那么每次都传证券代码为0去匹配其它票

                    /* if @临时_证券代码编号# = 0 then */
                    if v_tmp_stock_code_no = 0 then

                        /* set @证券代码编号# = 0; */
                        set v_stock_code_no = 0;
                    end if;
               end if;
            else

                /* set @错误编码#="0"; */
                set v_error_code="0";

                /* set @错误信息#=' '; */
                set v_error_info=' ';
                leave loop_label;
            end if;
        end loop;
    else
        #取最近的未归还的融资负债

        /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{记录序号},{已归还数量}][@记录序号#,@已归还数量#][{操作员编号}=@业务操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号#  and  {证券代码编号}=@证券代码编号# and {负债类型}=《负债类型-融资》 and {负债状态}<>《负债状态-已归还》   order by {负债订单编号}] */
        select row_id,debt_return_qty into v_row_id,v_debt_return_qty from db_tdsecu.tb_tdseac_exgp_debtjour where opor_no=v_busi_opor_no and exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no  and  stock_code_no=v_stock_code_no and debt_type=1 and debt_status<>2   order by debt_order_no limit 1;


        /* if @记录序号# > 0 then */
        if v_row_id > 0 then

            /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} ={已归还金额}- @成交费用#,{已归还数量}=floor({已归还金额}/{负债金额}*{负债数量})][{记录序号} = @记录序号#][1][@记录序号#] */
            set v_update_date = date_format(curdate(),'%Y%m%d');
            set v_update_time = date_format(curtime(),'%H%i%s');
            update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt =debt_return_amt- v_strike_fee,debt_return_qty=floor(debt_return_amt/debt_amt*debt_qty) where row_id = v_row_id;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.102.1";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
                else
                    SET v_error_info = concat("记录序号=",v_row_id);
                end if;
                leave label_pro;
            end if;


            /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还数量}][@临时_已归还数量#][{记录序号}=@记录序号#] */
            select debt_return_qty into v_tmp_debt_return_qty from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_row_id limit 1;


            /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{融资归还成交金额}={融资归还成交金额}-@成交费用#,{融资归还成交数量} = {融资归还成交数量}+@临时_已归还数量# - @已归还数量#][11][@资产账户编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                create_date, create_time, update_date, 
                update_time, update_times, init_date, co_no, 
                pd_no, asset_acco_no, exch_no, stock_acco_no, 
                stock_code, stock_code_no, stock_type, asset_type, 
                invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                debt_interest, return_interest_amt) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_init_date, v_co_no, 
                v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                v_debt_interest, v_return_interest_amt) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_strike_amt=fina_return_strike_amt-v_strike_fee,fina_return_strike_qty = fina_return_strike_qty+v_tmp_debt_return_qty - v_debt_return_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.102.11";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                end if;
                leave label_pro;
            end if;


            /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{融资归还成交金额}={融资归还成交金额}-@成交费用#,{融资归还成交数量} = {融资归还成交数量}+@临时_已归还数量# - @已归还数量#][12][@交易组编号#] */
            set v_create_date = date_format(curdate(),'%Y%m%d');
            set v_create_time = date_format(curtime(),'%H%i%s');
            set v_update_date = v_create_date;
            set v_update_time = v_create_time;
            set v_update_times = 1;
            insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                create_date, create_time, update_date, 
                update_time, update_times, init_date, co_no, 
                pd_no, asset_acco_no, exch_group_no, exch_no, 
                stock_acco_no, stock_code, stock_code_no, stock_type, 
                asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                return_strike_fee, debt_interest, return_interest_amt) 
            values(
                v_create_date, v_create_time, v_update_date, 
                v_update_time, v_update_times, v_init_date, v_co_no, 
                v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
            ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_strike_amt=fina_return_strike_amt-v_strike_fee,fina_return_strike_qty = fina_return_strike_qty+v_tmp_debt_return_qty - v_debt_return_qty;
            if v_error_code = "1" then
                        
                SET v_error_code = "tdsecuA.2.102.12";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组编号=",v_exch_group_no);
                end if;
                leave label_pro;
            end if;

        else

            /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{记录序号},{证券代码},{证券代码编号}][@记录序号#,@证券代码#,@证券代码编号#][{操作员编号}=@业务操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号#  and {负债类型}=《负债类型-融资》 and {负债状态}<>《负债状态-已归还》   order by {负债订单编号}] */
            select row_id,stock_code,stock_code_no into v_row_id,v_stock_code,v_stock_code_no from db_tdsecu.tb_tdseac_exgp_debtjour where opor_no=v_busi_opor_no and exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no  and debt_type=1 and debt_status<>2   order by debt_order_no limit 1;


            /* if @记录序号# > 0 then */
            if v_row_id > 0 then

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} ={已归还金额}- @成交费用#,{已归还数量}=floor({已归还金额}/{负债金额}*{负债数量})][{记录序号} = @记录序号#][1][@记录序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt =debt_return_amt- v_strike_fee,debt_return_qty=floor(debt_return_amt/debt_amt*debt_qty) where row_id = v_row_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.102.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("记录序号=",v_row_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还数量}][@临时_已归还数量#][{记录序号}=@记录序号#] */
                select debt_return_qty into v_tmp_debt_return_qty from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_row_id limit 1;


                /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{融资归还成交金额}={融资归还成交金额}-@成交费用#,{融资归还成交数量} = {融资归还成交数量}+@临时_已归还数量# - @已归还数量#][13][@资产账户编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                    create_date, create_time, update_date, 
                    update_time, update_times, init_date, co_no, 
                    pd_no, asset_acco_no, exch_no, stock_acco_no, 
                    stock_code, stock_code_no, stock_type, asset_type, 
                    invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                    debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                    debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                    debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                    debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                    debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                    debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                    debt_interest, return_interest_amt) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_init_date, v_co_no, 
                    v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                    v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                    v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                    v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                    v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                    v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                    v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                    v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                    v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                    v_debt_interest, v_return_interest_amt) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_strike_amt=fina_return_strike_amt-v_strike_fee,fina_return_strike_qty = fina_return_strike_qty+v_tmp_debt_return_qty - v_debt_return_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.102.13";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                    end if;
                    leave label_pro;
                end if;


                /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{融资归还成交金额}={融资归还成交金额}-@成交费用#,{融资归还成交数量} = {融资归还成交数量}+@临时_已归还数量# - @已归还数量#][14][@交易组编号#] */
                set v_create_date = date_format(curdate(),'%Y%m%d');
                set v_create_time = date_format(curtime(),'%H%i%s');
                set v_update_date = v_create_date;
                set v_update_time = v_create_time;
                set v_update_times = 1;
                insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                    create_date, create_time, update_date, 
                    update_time, update_times, init_date, co_no, 
                    pd_no, asset_acco_no, exch_group_no, exch_no, 
                    stock_acco_no, stock_code, stock_code_no, stock_type, 
                    asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                    fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                    fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                    fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                    fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                    fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                    fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                    return_strike_fee, debt_interest, return_interest_amt) 
                values(
                    v_create_date, v_create_time, v_update_date, 
                    v_update_time, v_update_times, v_init_date, v_co_no, 
                    v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                    v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                    v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                    v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                    v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                    v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                    v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                    v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                    v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                    v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, fina_return_strike_amt=fina_return_strike_amt-v_strike_fee,fina_return_strike_qty = fina_return_strike_qty+v_tmp_debt_return_qty - v_debt_return_qty;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.102.14";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("交易组编号=",v_exch_group_no);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_amt = v_remain_strike_amt;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_stock_code_no_str = v_stock_code_no_str;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_锁定获取持仓负债记录
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_LockGetStockPosiDebtDetail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_LockGetStockPosiDebtDetail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_stock_code_no int,
    IN p_busi_opor_no int,
    IN p_debt_type int,
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_detail_posi_id bigint,
    OUT p_init_date int,
    OUT p_pass_no int,
    OUT p_exch_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_strike_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_fee decimal(18,4),
    OUT p_order_no int,
    OUT p_report_no varchar(32),
    OUT p_order_date int,
    OUT p_order_time int,
    OUT p_order_dir int,
    OUT p_order_price decimal(16,9),
    OUT p_order_qty decimal(18,2),
    OUT p_debt_amt decimal(18,4),
    OUT p_debt_qty decimal(18,2),
    OUT p_debt_fee decimal(18,4),
    OUT p_debt_interest decimal(18,4),
    OUT p_intrst_base_amt decimal(18,4),
    OUT p_debt_return_amt decimal(18,4),
    OUT p_debt_return_qty decimal(18,2),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_debt_status int,
    OUT p_remark_info varchar(255),
    OUT p_update_times int,
    OUT p_stock_code varchar(6),
    OUT p_stock_acco_no int,
    OUT p_target_stock_code_no int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_stock_code_no int;
    declare v_busi_opor_no int;
    declare v_debt_type int;
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_detail_posi_id bigint;
    declare v_init_date int;
    declare v_pass_no int;
    declare v_exch_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_return_interest_amt decimal(18,4);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_update_times int;
    declare v_stock_code varchar(6);
    declare v_stock_acco_no int;
    declare v_target_stock_code_no int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_debt_order_no int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_debt_type = p_debt_type;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_detail_posi_id = 0;
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_exch_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_fee = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_dir = 0;
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_debt_interest = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_return_interest_amt = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_update_times = 1;
    SET v_stock_code = " ";
    SET v_stock_acco_no = 0;
    SET v_target_stock_code_no = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_debt_order_no = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_账户_交易组负债明细表][字段][字段变量][{操作员编号}=@业务操作员编号# and {交易组编号}=@交易组编号# and {资产账户编号}=@资产账户编号#  and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and {负债类型}=@负债类型# and {负债状态}<>《负债状态-已归还》   order by {负债订单编号}][4][@业务操作员编号#,@交易组编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@市场编号#,@负债类型#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, exch_group_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code, 
        stock_code_no, stock_type, asset_type, debt_type, 
        strike_qty, strike_amt, strike_fee, debt_order_no, 
        report_no, order_date, order_time, order_dir, 
        order_price, order_qty, debt_amt, debt_qty, 
        debt_fee, debt_interest, intrst_base_amt, debt_return_amt, 
        debt_return_qty, return_interest_amt, debt_status, remark_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_opor_no, v_co_no, v_pd_no, v_exch_group_no, 
        v_asset_acco_no, v_exch_no, v_stock_acco_no, v_stock_code, 
        v_stock_code_no, v_stock_type, v_asset_type, v_debt_type, 
        v_strike_qty, v_strike_amt, v_strike_fee, v_debt_order_no, 
        v_report_no, v_order_date, v_order_time, v_order_dir, 
        v_order_price, v_order_qty, v_debt_amt, v_debt_qty, 
        v_debt_fee, v_debt_interest, v_intrst_base_amt, v_debt_return_amt, 
        v_debt_return_qty, v_return_interest_amt, v_debt_status, v_remark_info from db_tdsecu.tb_tdseac_exgp_debtjour where opor_no=v_busi_opor_no and exch_group_no=v_exch_group_no and asset_acco_no=v_asset_acco_no  and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and debt_type=v_debt_type and debt_status<>2   order by debt_order_no limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.103.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("业务操作员编号=",v_busi_opor_no,",","交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","市场编号=",v_exch_no,",","负债类型=",v_debt_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("业务操作员编号=",v_busi_opor_no,",","交易组编号=",v_exch_group_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","市场编号=",v_exch_no,",","负债类型=",v_debt_type);
        end if;
        leave label_pro;
    end if;


    /* set @明细持仓序号# = @记录序号#; */
    set v_detail_posi_id = v_row_id;

    /* set @目标证券代码编号# = @证券代码编号#; */
    set v_target_stock_code_no = v_stock_code_no;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_detail_posi_id = v_detail_posi_id;
    SET p_init_date = v_init_date;
    SET p_pass_no = v_pass_no;
    SET p_exch_no = v_exch_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_strike_qty = v_strike_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_fee = v_strike_fee;
    SET p_order_no = v_order_no;
    SET p_report_no = v_report_no;
    SET p_order_date = v_order_date;
    SET p_order_time = v_order_time;
    SET p_order_dir = v_order_dir;
    SET p_order_price = v_order_price;
    SET p_order_qty = v_order_qty;
    SET p_debt_amt = v_debt_amt;
    SET p_debt_qty = v_debt_qty;
    SET p_debt_fee = v_debt_fee;
    SET p_debt_interest = v_debt_interest;
    SET p_intrst_base_amt = v_intrst_base_amt;
    SET p_debt_return_amt = v_debt_return_amt;
    SET p_debt_return_qty = v_debt_return_qty;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_debt_status = v_debt_status;
    SET p_remark_info = v_remark_info;
    SET p_update_times = v_update_times;
    SET p_stock_code = v_stock_code;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_target_stock_code_no = v_target_stock_code_no;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券成交买券还券
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanStrikeBackStock;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanStrikeBackStock(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_busi_opor_no int,
    IN p_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_qty decimal(18,2),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_busi_opor_no int;
    declare v_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_qty decimal(18,2);
    declare v_detail_posi_id_str varchar(1024);
    declare v_return_interest_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_tmp_return_interest_amt decimal(18,4);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_tmp_debt_return_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_strike_fee = p_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_qty = 0;
    SET v_detail_posi_id_str = " ";
    SET v_return_interest_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_row_id = 0;
    SET v_tmp_return_interest_amt = 0;
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_dir = 0;
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_debt_interest = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_amt = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@成交费用#>0] */
    if v_strike_fee>0 then
        leave label_pro;
    end if;


    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @明细持仓序号串# = ";"; */
    set v_detail_posi_id_str = ";";

    /* set @剩余成交数量# = @成交变动数量#; */
    set v_remain_strike_qty = v_strike_occur_qty;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @临时_归还利息金额# = 0; */
    set v_tmp_return_interest_amt = 0;
    loop_label:loop

        /* 调用【原子_交易证券_账户_锁定获取持仓负债记录】*/
        call db_tdsecu.pra_tdseac_LockGetStockPosiDebtDetail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_stock_code_no,
            v_busi_opor_no,
            v_debt_type,
            v_row_id,
            v_error_code,
            v_error_info,
            v_detail_posi_id,
            v_init_date,
            v_pass_no,
            v_exch_no,
            v_stock_type,
            v_asset_type,
            v_strike_qty,
            v_strike_amt,
            v_strike_fee,
            v_order_no,
            v_report_no,
            v_order_date,
            v_order_time,
            v_order_dir,
            v_order_price,
            v_order_qty,
            v_debt_amt,
            v_debt_qty,
            v_debt_fee,
            v_debt_interest,
            v_intrst_base_amt,
            v_debt_return_amt,
            v_debt_return_qty,
            v_return_interest_amt,
            v_debt_status,
            v_remark_info,
            v_update_times,
            v_stock_code,
            v_stock_acco_no,
            v_target_stock_code_no);

        /* if @错误编码#="0" then */
        if v_error_code="0" then

            /* set @记录序号# = @明细持仓序号#; */
            set v_row_id = v_detail_posi_id;

            /* set @明细持仓序号串# = concat(@明细持仓序号串#,@明细持仓序号#,";"); */
            set v_detail_posi_id_str = concat(v_detail_posi_id_str,v_detail_posi_id,";");
            #该笔明细足够归还

            /* if @负债数量# > (@已归还数量# +@成交变动数量#) then */
            if v_debt_qty > (v_debt_return_qty +v_strike_occur_qty) then

                /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                /* if @成交变动金额# <= @归还利息金额# then */
                if v_strike_occur_amt <= v_return_interest_amt then

                    /* set @归还利息金额# = @成交变动金额#; */
                    set v_return_interest_amt = v_strike_occur_amt;
                end if;

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {已归还数量} + @成交变动数量#,{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额} = {归还利息金额} + @归还利息金额#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_return_qty + v_strike_occur_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt = return_interest_amt + v_return_interest_amt where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.104.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额}][@临时_已归还金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt into v_tmp_debt_return_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# = @临时_归还利息金额#+@归还利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt;
                leave loop_label;

           /* elseif @负债数量# = (@已归还数量# +@成交变动数量#) then */
           elseif v_debt_qty = (v_debt_return_qty +v_strike_occur_qty) then
               #该笔明细刚好归还完

                /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                /* if @成交变动金额# <= @归还利息金额# then */
                if v_strike_occur_amt <= v_return_interest_amt then

                    /* set @归还利息金额# = @成交变动金额#; */
                    set v_return_interest_amt = v_strike_occur_amt;
                end if;

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额} = {归还利息金额} + @归还利息金额#,{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt = return_interest_amt + v_return_interest_amt,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.104.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额}][@临时_已归还金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt into v_tmp_debt_return_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# = @临时_归还利息金额#+@归还利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt;
                leave loop_label;
           else
                #该笔明细不足以归还，继续更新下一笔

                /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                /* if @成交变动金额# <= @归还利息金额# then */
                if v_strike_occur_amt <= v_return_interest_amt then

                    /* set @归还利息金额# = @成交变动金额#; */
                    set v_return_interest_amt = v_strike_occur_amt;
                end if;

                /* set @剩余成交数量# = @剩余成交数量# - (@负债数量# - @已归还数量#); */
                set v_remain_strike_qty = v_remain_strike_qty - (v_debt_qty - v_debt_return_qty);

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额} = {归还利息金额} + @归还利息金额#,{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt = return_interest_amt + v_return_interest_amt,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.104.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额}][@临时_已归还金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt into v_tmp_debt_return_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @临时_归还利息金额# = @临时_归还利息金额#+@归还利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt;
           end if;
        else
            #已经找不到负债记录,可能会存在多还的情况

            /* set @错误编码#="0"; */
            set v_error_code="0";

            /* set @错误信息#=' '; */
            set v_error_info=' ';
            leave loop_label;
        end if;
    end loop;

    /* set @归还利息金额# = @临时_归还利息金额#; */
    set v_return_interest_amt = v_tmp_return_interest_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_qty = v_remain_strike_qty;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组负债明细结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpDebtJourList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpDebtJourList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    IN p_debt_type int,
    IN p_stock_code_no int,
    IN p_order_dir int,
    IN p_exch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_debt_type int;
    declare v_stock_code_no int;
    declare v_order_dir int;
    declare v_exch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_debt_type = p_debt_type;
    SET v_stock_code_no = p_stock_code_no;
    SET v_order_dir = p_order_dir;
    SET v_exch_no = p_exch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_交易组负债明细表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#)  and (@产品编号权限串# = ' ' or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0) and (@交易组编号权限串# = ' ' or instr(@交易组编号权限串#,concat(";",{交易组编号},";"))>0) and (@负债类型# = 0 or {负债类型} = @负债类型#) and (@证券代码编号# = 0 or {证券代码编号} = @证券代码编号#) and (@订单方向# =0 or {订单方向} = @订单方向#) and (@市场编号# = 0 or {市场编号} = @市场编号#)  and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, exch_group_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code, 
        stock_code_no, stock_type, asset_type, debt_type, 
        strike_qty, strike_amt, strike_fee, debt_order_no, 
        report_no, order_date, order_time, order_dir, 
        order_price, order_qty, debt_amt, debt_qty, 
        debt_fee, debt_interest, intrst_base_amt, debt_return_amt, 
        debt_return_qty, return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_exgp_debtjour where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no)  and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no) and (v_order_dir =0 or order_dir = v_order_dir) and (v_exch_no = 0 or exch_no = v_exch_no)  and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, exch_group_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code, 
        stock_code_no, stock_type, asset_type, debt_type, 
        strike_qty, strike_amt, strike_fee, debt_order_no, 
        report_no, order_date, order_time, order_dir, 
        order_price, order_qty, debt_amt, debt_qty, 
        debt_fee, debt_interest, intrst_base_amt, debt_return_amt, 
        debt_return_qty, return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_exgp_debtjour where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no)  and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str = ' ' or instr(v_exch_group_no_rights_str,concat(";",exch_group_no,";"))>0) and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no) and (v_order_dir =0 or order_dir = v_order_dir) and (v_exch_no = 0 or exch_no = v_exch_no)  and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组业务资金负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBusiCapitalDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBusiCapitalDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_group_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_debt_loan_sell_strike_amt decimal(18,4),
    OUT p_debt_strike_fee decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_loan_return_order_amt decimal(18,4),
    OUT p_loan_return_comm_amt decimal(18,4),
    OUT p_return_strike_fee decimal(18,4),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_group_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_账户_交易组业务资金负债表][字段][字段变量][{初始化日期} = @初始化日期# and (@机构编号# = 0 or {机构编号} = @机构编号#) and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号# ) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#)] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        debt_loan_sell_strike_amt, debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, 
        loan_return_comm_amt, return_strike_fee into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_asset_acco_no, v_exch_group_no, 
        v_debt_loan_sell_strike_amt, v_debt_strike_fee, v_loan_return_strike_amt, v_loan_return_order_amt, 
        v_loan_return_comm_amt, v_return_strike_fee from db_tdsecu.tb_tdseac_exgp_busi_capital_debt where init_date = v_init_date and (v_co_no = 0 or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no ) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_debt_loan_sell_strike_amt = v_debt_loan_sell_strike_amt;
    SET p_debt_strike_fee = v_debt_strike_fee;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_loan_return_order_amt = v_loan_return_order_amt;
    SET p_loan_return_comm_amt = v_loan_return_comm_amt;
    SET p_return_strike_fee = v_return_strike_fee;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户业务资金负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacBusiCapitalDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacBusiCapitalDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_debt_loan_sell_strike_amt decimal(18,4),
    OUT p_debt_strike_fee decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_loan_return_order_amt decimal(18,4),
    OUT p_loan_return_comm_amt decimal(18,4),
    OUT p_return_strike_fee decimal(18,4),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_账户_资产账户业务资金负债表][字段][字段变量][{初始化日期} = @初始化日期# and (@机构编号# = 0 or {机构编号} = @机构编号#) and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号# )] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, debt_loan_sell_strike_amt, 
        debt_strike_fee, loan_return_strike_amt, loan_return_order_amt, loan_return_comm_amt, 
        return_strike_fee into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_asset_acco_no, v_debt_loan_sell_strike_amt, 
        v_debt_strike_fee, v_loan_return_strike_amt, v_loan_return_order_amt, v_loan_return_comm_amt, 
        v_return_strike_fee from db_tdsecu.tb_tdseac_asac_busi_capital_debt where init_date = v_init_date and (v_co_no = 0 or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no ) limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_debt_loan_sell_strike_amt = v_debt_loan_sell_strike_amt;
    SET p_debt_strike_fee = v_debt_strike_fee;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_loan_return_order_amt = v_loan_return_order_amt;
    SET p_loan_return_comm_amt = v_loan_return_comm_amt;
    SET p_return_strike_fee = v_return_strike_fee;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询交易组业务持仓负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpBusiPosiDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpBusiPosiDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_group_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_debt_type int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_exch_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_invest_type int,
    OUT p_debt_fina_buy_strike_qty decimal(18,2),
    OUT p_fina_return_strike_qty decimal(18,2),
    OUT p_debt_loan_sell_strike_qty decimal(18,2),
    OUT p_loan_return_strike_qty decimal(18,2),
    OUT p_debt_fina_buy_order_qty decimal(18,2),
    OUT p_fina_return_order_qty decimal(18,2),
    OUT p_debt_loan_sell_order_qty decimal(18,2),
    OUT p_loan_return_order_qty decimal(18,2),
    OUT p_debt_fina_buy_comm_qty decimal(18,2),
    OUT p_fina_return_comm_qty decimal(18,2),
    OUT p_debt_loan_sell_comm_qty decimal(18,2),
    OUT p_loan_return_comm_qty decimal(18,2),
    OUT p_debt_fina_buy_strike_amt decimal(18,4),
    OUT p_fina_return_strike_amt decimal(18,4),
    OUT p_debt_loan_sell_strike_amt decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_debt_fina_buy_order_amt decimal(18,4),
    OUT p_fina_return_order_amt decimal(18,4),
    OUT p_debt_loan_sell_order_amt decimal(18,4),
    OUT p_loan_return_order_amt decimal(18,4),
    OUT p_debt_fina_buy_comm_amt decimal(18,4),
    OUT p_fina_return_comm_amt decimal(18,4),
    OUT p_debt_loan_sell_comm_amt decimal(18,4),
    OUT p_loan_return_comm_amt decimal(18,4),
    OUT p_debt_strike_fee decimal(18,4),
    OUT p_return_strike_fee decimal(18,4),
    OUT p_debt_interest decimal(18,4),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_group_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_debt_type int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_exch_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_stock_code varchar(6);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_debt_type = p_debt_type;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_exch_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_invest_type = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_fina_return_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_fina_return_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_fina_return_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_fina_return_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_stock_code = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{初始化日期} = @初始化日期# and (@机构编号# = 0 or {机构编号} = @机构编号#) and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号# ) and (@交易组编号# = 0 or {交易组编号} = @交易组编号#) and (@股东代码编号# = 0 or {股东代码编号} = @股东代码编号#) and (@证券代码编号# = 0 or {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#)][1][@初始化日期#,@机构编号#,@产品编号#,@资产账户编号#,@交易组编号#,@股东代码编号#,@证券代码编号#,@负债类型#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_group_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, invest_type, debt_type, 
        debt_fina_buy_strike_qty, fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, 
        debt_fina_buy_order_qty, fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, 
        debt_fina_buy_comm_qty, fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, 
        debt_fina_buy_strike_amt, fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, 
        debt_fina_buy_order_amt, fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, 
        debt_fina_buy_comm_amt, fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, 
        debt_strike_fee, return_strike_fee, debt_interest, return_interest_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_asset_acco_no, v_exch_group_no, 
        v_exch_no, v_stock_acco_no, v_stock_code, v_stock_code_no, 
        v_stock_type, v_asset_type, v_invest_type, v_debt_type, 
        v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, 
        v_debt_fina_buy_order_qty, v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, 
        v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, 
        v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, 
        v_debt_fina_buy_order_amt, v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, 
        v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, 
        v_debt_strike_fee, v_return_strike_fee, v_debt_interest, v_return_interest_amt from db_tdsecu.tb_tdseac_exgp_busi_posi_debt where init_date = v_init_date and (v_co_no = 0 or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no ) and (v_exch_group_no = 0 or exch_group_no = v_exch_group_no) and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no and debt_type = v_debt_type) limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.108.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("初始化日期=",v_init_date,",","机构编号=",v_co_no,",","产品编号=",v_pd_no,",","资产账户编号=",v_asset_acco_no,",","交易组编号=",v_exch_group_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","负债类型=",v_debt_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("初始化日期=",v_init_date,",","机构编号=",v_co_no,",","产品编号=",v_pd_no,",","资产账户编号=",v_asset_acco_no,",","交易组编号=",v_exch_group_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","负债类型=",v_debt_type);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_exch_no = v_exch_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_invest_type = v_invest_type;
    SET p_debt_fina_buy_strike_qty = v_debt_fina_buy_strike_qty;
    SET p_fina_return_strike_qty = v_fina_return_strike_qty;
    SET p_debt_loan_sell_strike_qty = v_debt_loan_sell_strike_qty;
    SET p_loan_return_strike_qty = v_loan_return_strike_qty;
    SET p_debt_fina_buy_order_qty = v_debt_fina_buy_order_qty;
    SET p_fina_return_order_qty = v_fina_return_order_qty;
    SET p_debt_loan_sell_order_qty = v_debt_loan_sell_order_qty;
    SET p_loan_return_order_qty = v_loan_return_order_qty;
    SET p_debt_fina_buy_comm_qty = v_debt_fina_buy_comm_qty;
    SET p_fina_return_comm_qty = v_fina_return_comm_qty;
    SET p_debt_loan_sell_comm_qty = v_debt_loan_sell_comm_qty;
    SET p_loan_return_comm_qty = v_loan_return_comm_qty;
    SET p_debt_fina_buy_strike_amt = v_debt_fina_buy_strike_amt;
    SET p_fina_return_strike_amt = v_fina_return_strike_amt;
    SET p_debt_loan_sell_strike_amt = v_debt_loan_sell_strike_amt;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_debt_fina_buy_order_amt = v_debt_fina_buy_order_amt;
    SET p_fina_return_order_amt = v_fina_return_order_amt;
    SET p_debt_loan_sell_order_amt = v_debt_loan_sell_order_amt;
    SET p_loan_return_order_amt = v_loan_return_order_amt;
    SET p_debt_fina_buy_comm_amt = v_debt_fina_buy_comm_amt;
    SET p_fina_return_comm_amt = v_fina_return_comm_amt;
    SET p_debt_loan_sell_comm_amt = v_debt_loan_sell_comm_amt;
    SET p_loan_return_comm_amt = v_loan_return_comm_amt;
    SET p_debt_strike_fee = v_debt_strike_fee;
    SET p_return_strike_fee = v_return_strike_fee;
    SET p_debt_interest = v_debt_interest;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户业务持仓负债
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacBusiPosiDebt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacBusiPosiDebt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_debt_type int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_exch_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_invest_type int,
    OUT p_debt_fina_buy_strike_qty decimal(18,2),
    OUT p_fina_return_strike_qty decimal(18,2),
    OUT p_debt_loan_sell_strike_qty decimal(18,2),
    OUT p_loan_return_strike_qty decimal(18,2),
    OUT p_debt_fina_buy_order_qty decimal(18,2),
    OUT p_fina_return_order_qty decimal(18,2),
    OUT p_debt_loan_sell_order_qty decimal(18,2),
    OUT p_loan_return_order_qty decimal(18,2),
    OUT p_debt_fina_buy_comm_qty decimal(18,2),
    OUT p_fina_return_comm_qty decimal(18,2),
    OUT p_debt_loan_sell_comm_qty decimal(18,2),
    OUT p_loan_return_comm_qty decimal(18,2),
    OUT p_debt_fina_buy_strike_amt decimal(18,4),
    OUT p_fina_return_strike_amt decimal(18,4),
    OUT p_debt_loan_sell_strike_amt decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_debt_fina_buy_order_amt decimal(18,4),
    OUT p_fina_return_order_amt decimal(18,4),
    OUT p_debt_loan_sell_order_amt decimal(18,4),
    OUT p_loan_return_order_amt decimal(18,4),
    OUT p_debt_fina_buy_comm_amt decimal(18,4),
    OUT p_fina_return_comm_amt decimal(18,4),
    OUT p_debt_loan_sell_comm_amt decimal(18,4),
    OUT p_loan_return_comm_amt decimal(18,4),
    OUT p_debt_strike_fee decimal(18,4),
    OUT p_return_strike_fee decimal(18,4),
    OUT p_debt_interest decimal(18,4),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_debt_type int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_exch_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_stock_code varchar(6);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_debt_type = p_debt_type;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_exch_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_invest_type = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_fina_return_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_fina_return_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_fina_return_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_fina_return_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_stock_code = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{初始化日期} = @初始化日期# and (@机构编号# = 0 or {机构编号} = @机构编号#) and (@产品编号# = 0 or {产品编号} = @产品编号#) and (@资产账户编号# = 0 or {资产账户编号} = @资产账户编号# )  and (@股东代码编号# = 0 or {股东代码编号} = @股东代码编号#) and (@证券代码编号# = 0 or {证券代码编号} = @证券代码编号# and {负债类型} = @负债类型#)][1][@初始化日期#,@机构编号#,@产品编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@负债类型#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code, stock_code_no, stock_type, 
        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
        return_strike_fee, debt_interest, return_interest_amt into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
        v_return_strike_fee, v_debt_interest, v_return_interest_amt from db_tdsecu.tb_tdseac_asac_busi_posi_debt where init_date = v_init_date and (v_co_no = 0 or co_no = v_co_no) and (v_pd_no = 0 or pd_no = v_pd_no) and (v_asset_acco_no = 0 or asset_acco_no = v_asset_acco_no )  and (v_stock_acco_no = 0 or stock_acco_no = v_stock_acco_no) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no and debt_type = v_debt_type) limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.109.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("初始化日期=",v_init_date,",","机构编号=",v_co_no,",","产品编号=",v_pd_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","负债类型=",v_debt_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("初始化日期=",v_init_date,",","机构编号=",v_co_no,",","产品编号=",v_pd_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","负债类型=",v_debt_type);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_exch_no = v_exch_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_invest_type = v_invest_type;
    SET p_debt_fina_buy_strike_qty = v_debt_fina_buy_strike_qty;
    SET p_fina_return_strike_qty = v_fina_return_strike_qty;
    SET p_debt_loan_sell_strike_qty = v_debt_loan_sell_strike_qty;
    SET p_loan_return_strike_qty = v_loan_return_strike_qty;
    SET p_debt_fina_buy_order_qty = v_debt_fina_buy_order_qty;
    SET p_fina_return_order_qty = v_fina_return_order_qty;
    SET p_debt_loan_sell_order_qty = v_debt_loan_sell_order_qty;
    SET p_loan_return_order_qty = v_loan_return_order_qty;
    SET p_debt_fina_buy_comm_qty = v_debt_fina_buy_comm_qty;
    SET p_fina_return_comm_qty = v_fina_return_comm_qty;
    SET p_debt_loan_sell_comm_qty = v_debt_loan_sell_comm_qty;
    SET p_loan_return_comm_qty = v_loan_return_comm_qty;
    SET p_debt_fina_buy_strike_amt = v_debt_fina_buy_strike_amt;
    SET p_fina_return_strike_amt = v_fina_return_strike_amt;
    SET p_debt_loan_sell_strike_amt = v_debt_loan_sell_strike_amt;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_debt_fina_buy_order_amt = v_debt_fina_buy_order_amt;
    SET p_fina_return_order_amt = v_fina_return_order_amt;
    SET p_debt_loan_sell_order_amt = v_debt_loan_sell_order_amt;
    SET p_loan_return_order_amt = v_loan_return_order_amt;
    SET p_debt_fina_buy_comm_amt = v_debt_fina_buy_comm_amt;
    SET p_fina_return_comm_amt = v_fina_return_comm_amt;
    SET p_debt_loan_sell_comm_amt = v_debt_loan_sell_comm_amt;
    SET p_loan_return_comm_amt = v_loan_return_comm_amt;
    SET p_debt_strike_fee = v_debt_strike_fee;
    SET p_return_strike_fee = v_return_strike_fee;
    SET p_debt_interest = v_debt_interest;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_根据记录序号串查询交易组负债明细结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryExgpDebtJourListByIdstr;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryExgpDebtJourListByIdstr(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_detail_posi_id_str varchar(1024),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_detail_posi_id_str varchar(1024);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_detail_posi_id_str = p_detail_posi_id_str;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_count = -1;

    
    label_pro:BEGIN
    

    /* set @指定行数# = -1; */
    set v_row_count = -1;

    /* [获取表记录][交易证券_账户_交易组负债明细表][字段][(@明细持仓序号串# = ' ' or instr(@明细持仓序号串#,concat(";",{记录序号},";"))>0)order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, exch_group_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code, 
        stock_code_no, stock_type, asset_type, debt_type, 
        strike_qty, strike_amt, strike_fee, debt_order_no, 
        report_no, order_date, order_time, order_dir, 
        order_price, order_qty, debt_amt, debt_qty, 
        debt_fee, debt_interest, intrst_base_amt, debt_return_amt, 
        debt_return_qty, return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_exgp_debtjour where (v_detail_posi_id_str = ' ' or instr(v_detail_posi_id_str,concat(";",row_id,";"))>0)order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, exch_group_no, 
        asset_acco_no, exch_no, stock_acco_no, stock_code, 
        stock_code_no, stock_type, asset_type, debt_type, 
        strike_qty, strike_amt, strike_fee, debt_order_no, 
        report_no, order_date, order_time, order_dir, 
        order_price, order_qty, debt_amt, debt_qty, 
        debt_fee, debt_interest, intrst_base_amt, debt_return_amt, 
        debt_return_qty, return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_exgp_debtjour where (v_detail_posi_id_str = ' ' or instr(v_detail_posi_id_str,concat(";",row_id,";"))>0)order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新交易组融资融券保证金计算表
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateExgpFinaLoanMarginCalc;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateExgpFinaLoanMarginCalc(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_converted_margin decimal(18,4),
    IN p_fina_converted_pandl decimal(18,4),
    IN p_loan_converted_pandl decimal(18,4),
    IN p_fina_capt_margin decimal(18,4),
    IN p_loan_capt_margin decimal(18,4),
    IN p_keep_guarantee_ratio decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_converted_margin decimal(18,4);
    declare v_fina_converted_pandl decimal(18,4);
    declare v_loan_converted_pandl decimal(18,4);
    declare v_fina_capt_margin decimal(18,4);
    declare v_loan_capt_margin decimal(18,4);
    declare v_keep_guarantee_ratio decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_converted_margin = p_converted_margin;
    SET v_fina_converted_pandl = p_fina_converted_pandl;
    SET v_loan_converted_pandl = p_loan_converted_pandl;
    SET v_fina_capt_margin = p_fina_capt_margin;
    SET v_loan_capt_margin = p_loan_capt_margin;
    SET v_keep_guarantee_ratio = p_keep_guarantee_ratio;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [插入重复更新][交易证券_账户_交易组融资融券保证金计算表][字段][字段变量][{冲抵折算保证金}=@冲抵折算保证金#,{融资折算盈亏}=@融资折算盈亏#,{融券折算盈亏}=@融券折算盈亏#,{融资占用保证金}=@融资占用保证金#,{融券占用保证金}=@融券占用保证金#,{维持担保比例}=@维持担保比例#][1][@交易组编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_fina_loan_margin_calc (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, converted_margin, 
        fina_converted_pandl, loan_converted_pandl, fina_capt_margin, loan_capt_margin, 
        keep_guarantee_ratio) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_converted_margin, 
        v_fina_converted_pandl, v_loan_converted_pandl, v_fina_capt_margin, v_loan_capt_margin, 
        v_keep_guarantee_ratio) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, converted_margin=v_converted_margin,fina_converted_pandl=v_fina_converted_pandl,loan_converted_pandl=v_loan_converted_pandl,fina_capt_margin=v_fina_capt_margin,loan_capt_margin=v_loan_capt_margin,keep_guarantee_ratio=v_keep_guarantee_ratio;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.111.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("交易组编号=",v_exch_group_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_更新资产账户融资融券保证金计算表
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_UpdateAsacFinaLoanMarginCalc;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_UpdateAsacFinaLoanMarginCalc(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_converted_margin decimal(18,4),
    IN p_fina_converted_pandl decimal(18,4),
    IN p_loan_converted_pandl decimal(18,4),
    IN p_fina_capt_margin decimal(18,4),
    IN p_loan_capt_margin decimal(18,4),
    IN p_keep_guarantee_ratio decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_converted_margin decimal(18,4);
    declare v_fina_converted_pandl decimal(18,4);
    declare v_loan_converted_pandl decimal(18,4);
    declare v_fina_capt_margin decimal(18,4);
    declare v_loan_capt_margin decimal(18,4);
    declare v_keep_guarantee_ratio decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_converted_margin = p_converted_margin;
    SET v_fina_converted_pandl = p_fina_converted_pandl;
    SET v_loan_converted_pandl = p_loan_converted_pandl;
    SET v_fina_capt_margin = p_fina_capt_margin;
    SET v_loan_capt_margin = p_loan_capt_margin;
    SET v_keep_guarantee_ratio = p_keep_guarantee_ratio;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [插入重复更新][交易证券_账户_资产账户融资融券保证金计算表][字段][字段变量][{冲抵折算保证金}=@冲抵折算保证金#,{融资折算盈亏}=@融资折算盈亏#,{融券折算盈亏}=@融券折算盈亏#,{融资占用保证金}=@融资占用保证金#,{融券占用保证金}=@融券占用保证金#,{维持担保比例}=@维持担保比例#][1][@资产账户编号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_fina_loan_margin_calc (
        create_date, create_time, update_date, 
        update_time, update_times, init_date, co_no, 
        pd_no, asset_acco_no, converted_margin, fina_converted_pandl, 
        loan_converted_pandl, fina_capt_margin, loan_capt_margin, keep_guarantee_ratio) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_co_no, 
        v_pd_no, v_asset_acco_no, v_converted_margin, v_fina_converted_pandl, 
        v_loan_converted_pandl, v_fina_capt_margin, v_loan_capt_margin, v_keep_guarantee_ratio) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, converted_margin=v_converted_margin,fina_converted_pandl=v_fina_converted_pandl,loan_converted_pandl=v_loan_converted_pandl,fina_capt_margin=v_fina_capt_margin,loan_capt_margin=v_loan_capt_margin,keep_guarantee_ratio=v_keep_guarantee_ratio;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.112.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_转入产品证券资产账户负债明细记录
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_InsertPdSecuAsacDebtDetail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_InsertPdSecuAsacDebtDetail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code varchar(6),
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_debt_type int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_strike_fee decimal(18,4),
    IN p_debt_order_no int,
    IN p_report_no varchar(32),
    IN p_order_date int,
    IN p_order_time int,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_debt_amt decimal(18,4),
    IN p_debt_qty decimal(18,2),
    IN p_debt_fee decimal(18,4),
    IN p_debt_interest decimal(18,4),
    IN p_intrst_base_amt decimal(18,4),
    IN p_debt_return_amt decimal(18,4),
    IN p_debt_return_qty decimal(18,2),
    IN p_return_interest_amt decimal(18,4),
    IN p_debt_status int,
    IN p_remark_info varchar(255),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code varchar(6);
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_debt_type int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_debt_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_return_interest_amt decimal(18,4);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_debt_type = p_debt_type;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_fee = p_strike_fee;
    SET v_debt_order_no = p_debt_order_no;
    SET v_report_no = p_report_no;
    SET v_order_date = p_order_date;
    SET v_order_time = p_order_time;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_order_qty = p_order_qty;
    SET v_debt_amt = p_debt_amt;
    SET v_debt_qty = p_debt_qty;
    SET v_debt_fee = p_debt_fee;
    SET v_debt_interest = p_debt_interest;
    SET v_intrst_base_amt = p_intrst_base_amt;
    SET v_debt_return_amt = p_debt_return_amt;
    SET v_debt_return_qty = p_debt_return_qty;
    SET v_return_interest_amt = p_return_interest_amt;
    SET v_debt_status = p_debt_status;
    SET v_remark_info = p_remark_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [插入表记录][交易证券_账户_资产账户负债明细表][字段][字段变量][2][@负债订单编号#, @订单日期#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_asac_debtjour(
        create_date, create_time, update_date, 
        update_time, update_times, init_date, opor_no, 
        co_no, pd_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code, stock_code_no, stock_type, 
        asset_type, debt_type, strike_qty, strike_amt, 
        strike_fee, debt_order_no, report_no, order_date, 
        order_time, order_dir, order_price, order_qty, 
        debt_amt, debt_qty, debt_fee, debt_interest, 
        intrst_base_amt, debt_return_amt, debt_return_qty, return_interest_amt, 
        debt_status, remark_info) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_opor_no, 
        v_co_no, v_pd_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
        v_asset_type, v_debt_type, v_strike_qty, v_strike_amt, 
        v_strike_fee, v_debt_order_no, v_report_no, v_order_date, 
        v_order_time, v_order_dir, v_order_price, v_order_qty, 
        v_debt_amt, v_debt_qty, v_debt_fee, v_debt_interest, 
        v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, v_return_interest_amt, 
        v_debt_status, v_remark_info);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.113.2";
        SET v_error_info =  CONCAT(concat("负债订单编号=",v_debt_order_no,","," 订单日期=", v_order_date),"#",v_mysql_message);
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_转入产品证券交易组负债明细记录
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_InsertPdSecuExgpDebtDetail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_InsertPdSecuExgpDebtDetail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_group_no int,
    IN p_pass_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code varchar(6),
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_debt_type int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_strike_fee decimal(18,4),
    IN p_debt_order_no int,
    IN p_report_no varchar(32),
    IN p_order_date int,
    IN p_order_time int,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_debt_amt decimal(18,4),
    IN p_debt_qty decimal(18,2),
    IN p_debt_fee decimal(18,4),
    IN p_debt_interest decimal(18,4),
    IN p_intrst_base_amt decimal(18,4),
    IN p_debt_return_amt decimal(18,4),
    IN p_debt_return_qty decimal(18,2),
    IN p_return_interest_amt decimal(18,4),
    IN p_debt_status int,
    IN p_remark_info varchar(255),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_group_no int;
    declare v_pass_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code varchar(6);
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_debt_type int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_debt_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_return_interest_amt decimal(18,4);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_pass_no = p_pass_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_debt_type = p_debt_type;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_fee = p_strike_fee;
    SET v_debt_order_no = p_debt_order_no;
    SET v_report_no = p_report_no;
    SET v_order_date = p_order_date;
    SET v_order_time = p_order_time;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_order_qty = p_order_qty;
    SET v_debt_amt = p_debt_amt;
    SET v_debt_qty = p_debt_qty;
    SET v_debt_fee = p_debt_fee;
    SET v_debt_interest = p_debt_interest;
    SET v_intrst_base_amt = p_intrst_base_amt;
    SET v_debt_return_amt = p_debt_return_amt;
    SET v_debt_return_qty = p_debt_return_qty;
    SET v_return_interest_amt = p_return_interest_amt;
    SET v_debt_status = p_debt_status;
    SET v_remark_info = p_remark_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [插入表记录][交易证券_账户_交易组负债明细表][字段][字段变量][2][@负债订单编号#, @订单日期#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseac_exgp_debtjour(
        create_date, create_time, update_date, 
        update_time, update_times, init_date, opor_no, 
        co_no, pd_no, exch_group_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_init_date, v_opor_no, 
        v_co_no, v_pd_no, v_exch_group_no, v_asset_acco_no, 
        v_exch_no, v_stock_acco_no, v_stock_code, v_stock_code_no, 
        v_stock_type, v_asset_type, v_debt_type, v_strike_qty, 
        v_strike_amt, v_strike_fee, v_debt_order_no, v_report_no, 
        v_order_date, v_order_time, v_order_dir, v_order_price, 
        v_order_qty, v_debt_amt, v_debt_qty, v_debt_fee, 
        v_debt_interest, v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, 
        v_return_interest_amt, v_debt_status, v_remark_info);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.2.114.2";
        SET v_error_info =  CONCAT(concat("负债订单编号=",v_debt_order_no,","," 订单日期=", v_order_date),"#",v_mysql_message);
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券成交买券还券比例释放
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanStrikeBackStockRatio;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanStrikeBackStockRatio(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_busi_opor_no int,
    IN p_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_qty decimal(18,2),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_return_strike_fee decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_busi_opor_no int;
    declare v_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_qty decimal(18,2);
    declare v_detail_posi_id_str varchar(1024);
    declare v_return_interest_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_row_id bigint;
    declare v_tmp_return_interest_amt decimal(18,4);
    declare v_occur_intrst_amt decimal(18,4);
    declare v_tmp_debt_fee decimal(18,4);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_tmp_debt_return_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_strike_fee = p_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_qty = 0;
    SET v_detail_posi_id_str = " ";
    SET v_return_interest_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_row_id = 0;
    SET v_tmp_return_interest_amt = 0;
    SET v_occur_intrst_amt = 0;
    SET v_tmp_debt_fee = 0;
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_dir = 0;
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_debt_interest = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_amt = 0;

    
    label_pro:BEGIN
    
    #[检查正常返回][@成交费用#>0]

    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @明细持仓序号串# = ";"; */
    set v_detail_posi_id_str = ";";

    /* set @剩余成交数量# = @成交变动数量#; */
    set v_remain_strike_qty = v_strike_occur_qty;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @临时_归还利息金额# = 0; */
    set v_tmp_return_interest_amt = 0;

    /* set @变动利息金额# = 0; */
    set v_occur_intrst_amt = 0;

    /* set @临时_负债费用# = 0; */
    set v_tmp_debt_fee = 0;
    loop_label:loop

        /* 调用【原子_交易证券_账户_锁定获取持仓负债记录】*/
        call db_tdsecu.pra_tdseac_LockGetStockPosiDebtDetail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_stock_code_no,
            v_busi_opor_no,
            v_debt_type,
            v_row_id,
            v_error_code,
            v_error_info,
            v_detail_posi_id,
            v_init_date,
            v_pass_no,
            v_exch_no,
            v_stock_type,
            v_asset_type,
            v_strike_qty,
            v_strike_amt,
            v_strike_fee,
            v_order_no,
            v_report_no,
            v_order_date,
            v_order_time,
            v_order_dir,
            v_order_price,
            v_order_qty,
            v_debt_amt,
            v_debt_qty,
            v_debt_fee,
            v_debt_interest,
            v_intrst_base_amt,
            v_debt_return_amt,
            v_debt_return_qty,
            v_return_interest_amt,
            v_debt_status,
            v_remark_info,
            v_update_times,
            v_stock_code,
            v_stock_acco_no,
            v_target_stock_code_no);

        /* if @错误编码#="0" then */
        if v_error_code="0" then

            /* set @记录序号# = @明细持仓序号#; */
            set v_row_id = v_detail_posi_id;

            /* set @明细持仓序号串# = concat(@明细持仓序号串#,@明细持仓序号#,";"); */
            set v_detail_posi_id_str = concat(v_detail_posi_id_str,v_detail_posi_id,";");
            #该笔明细足够归还

            /* if @负债数量# > (@已归还数量# +@成交变动数量#) then */
            if v_debt_qty > (v_debt_return_qty +v_strike_occur_qty) then

                /* set @变动利息金额# = round((@负债利息#-@归还利息金额#)*@成交变动数量#/(@负债数量#-@已归还数量#),4); */
                set v_occur_intrst_amt = round((v_debt_interest-v_return_interest_amt)*v_strike_occur_qty/(v_debt_qty-v_debt_return_qty),4);

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {已归还数量} + @成交变动数量#,{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={归还利息金额}+@变动利息金额#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_return_qty + v_strike_occur_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=return_interest_amt+v_occur_intrst_amt where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.115.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额}][@临时_已归还金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt into v_tmp_debt_return_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# = @临时_归还利息金额#+@变动利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_occur_intrst_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额# - @负债费用# *@成交变动数量# /@负债数量#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt - v_debt_fee *v_strike_occur_qty /v_debt_qty;

                /* set @归还成交费用# = @负债费用# *@成交变动数量# /@负债数量#; */
                set v_return_strike_fee = v_debt_fee *v_strike_occur_qty /v_debt_qty;
                leave loop_label;

           /* elseif @负债数量# = (@已归还数量# +@成交变动数量#) then */
           elseif v_debt_qty = (v_debt_return_qty +v_strike_occur_qty) then
               #该笔明细刚好归还完

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={负债利息},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=debt_interest,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.115.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额},{归还利息金额}][@临时_已归还金额#,@变动利息金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt,return_interest_amt into v_tmp_debt_return_amt,v_occur_intrst_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# =@临时_归还利息金额#+@变动利息金额#-@归还利息金额#; */
                set v_tmp_return_interest_amt =v_tmp_return_interest_amt+v_occur_intrst_amt-v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额# - @负债费用#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt - v_debt_fee;

                /* set @归还成交费用# = @负债费用#; */
                set v_return_strike_fee = v_debt_fee;
                leave loop_label;
           else
                #该笔明细不足以归还，继续更新下一笔

                /* set @剩余成交数量# = @剩余成交数量# - (@负债数量# - @已归还数量#); */
                set v_remain_strike_qty = v_remain_strike_qty - (v_debt_qty - v_debt_return_qty);

                /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={负债利息},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=debt_interest,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.115.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还金额},{归还利息金额}][@临时_已归还金额#,@变动利息金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt,return_interest_amt into v_tmp_debt_return_amt,v_occur_intrst_amt from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @临时_归还利息金额# = @临时_归还利息金额#+@变动利息金额#-@归还利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_occur_intrst_amt-v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#- @负债费用#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt- v_debt_fee;

                /* set @归还成交费用# =@归还成交费用#+ @负债费用#; */
                set v_return_strike_fee =v_return_strike_fee+ v_debt_fee;
           end if;
        else
            #已经找不到负债记录,可能会存在多还的情况

            /* set @错误编码#="0"; */
            set v_error_code="0";

            /* set @错误信息#=' '; */
            set v_error_info=' ';
            leave loop_label;
        end if;
    end loop;

    /* set @归还利息金额# = @临时_归还利息金额#; */
    set v_return_interest_amt = v_tmp_return_interest_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_qty = v_remain_strike_qty;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_return_strike_fee = v_return_strike_fee;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券成交卖券还款比例释放
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanStrikeBackAmtRatio;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanStrikeBackAmtRatio(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_strike_fee decimal(18,4),
    IN p_busi_opor_no int,
    IN p_fina_return_strike_qty decimal(18,2),
    IN p_fina_return_strike_amt decimal(18,4),
    IN p_fina_return_order_qty decimal(18,2),
    IN p_fina_return_order_amt decimal(18,4),
    IN p_debt_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_amt decimal(18,4),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_stock_code_no_str varchar(4096)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_strike_fee decimal(18,4);
    declare v_busi_opor_no int;
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_amt decimal(18,4);
    declare v_detail_posi_id_str varchar(1024);
    declare v_stock_code_no_str varchar(4096);
    declare v_row_id bigint;
    declare v_tmp_stock_code_no int;
    declare v_tmp_strike_occur_amt decimal(18,4);
    declare v_tmp_strike_fee decimal(18,4);
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_occur_intrst_amt decimal(18,4);
    declare v_tmp_debt_return_amt decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;
    declare v_tmp_debt_return_qty decimal(18,2);
    declare v_create_date int;
    declare v_create_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_strike_fee = p_strike_fee;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_fina_return_strike_qty = p_fina_return_strike_qty;
    SET v_fina_return_strike_amt = p_fina_return_strike_amt;
    SET v_fina_return_order_qty = p_fina_return_order_qty;
    SET v_fina_return_order_amt = p_fina_return_order_amt;
    SET v_debt_strike_fee = p_debt_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_amt = 0;
    SET v_detail_posi_id_str = " ";
    SET v_stock_code_no_str = " ";
    SET v_row_id = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_tmp_strike_occur_amt = 0;
    SET v_tmp_strike_fee = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_occur_intrst_amt = 0;
    SET v_tmp_debt_return_amt = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_qty = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #负债金额已经包含费用

    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @明细持仓序号串# = ""; */
    set v_detail_posi_id_str = "";

    /* set @证券代码编号串# = ";"; */
    set v_stock_code_no_str = ";";

    /* set @临时_证券代码编号# =@证券代码编号#; */
    set v_tmp_stock_code_no =v_stock_code_no;

    /* set @剩余成交金额# = @成交变动金额#; */
    set v_remain_strike_amt = v_strike_occur_amt;

    /* set @临时_成交变动金额# = @成交变动金额#; */
    set v_tmp_strike_occur_amt = v_strike_occur_amt;

    /* set @临时_成交费用# = @成交费用#; */
    set v_tmp_strike_fee = v_strike_fee;

    /* set @负债成交费用# =0; */
    set v_debt_strike_fee =0;

    /* set @负债融资买入成交数量# = 0; */
    set v_debt_fina_buy_strike_qty = 0;

    /* set @负债融券卖出成交数量# = 0; */
    set v_debt_loan_sell_strike_qty = 0;

    /* set @融券归还成交数量# = 0; */
    set v_loan_return_strike_qty = 0;

    /* set @负债融资买入订单数量# = 0; */
    set v_debt_fina_buy_order_qty = 0;

    /* set @负债融券卖出订单数量# = 0; */
    set v_debt_loan_sell_order_qty = 0;

    /* set @融券归还订单数量# = 0; */
    set v_loan_return_order_qty = 0;

    /* set @负债融资买入指令数量# = 0; */
    set v_debt_fina_buy_comm_qty = 0;

    /* set @融资归还指令数量# = 0; */
    set v_fina_return_comm_qty = 0;

    /* set @负债融券卖出指令数量# = 0; */
    set v_debt_loan_sell_comm_qty = 0;

    /* set @融券归还指令数量# = 0; */
    set v_loan_return_comm_qty = 0;

    /* set @负债融资买入成交金额# = 0; */
    set v_debt_fina_buy_strike_amt = 0;

    /* set @负债融券卖出成交金额# = 0; */
    set v_debt_loan_sell_strike_amt = 0;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @负债融资买入订单金额# = 0; */
    set v_debt_fina_buy_order_amt = 0;

    /* set @负债融券卖出订单金额# = 0; */
    set v_debt_loan_sell_order_amt = 0;

    /* set @融券归还订单金额# = 0; */
    set v_loan_return_order_amt = 0;

    /* set @负债融资买入指令金额# = 0; */
    set v_debt_fina_buy_comm_amt = 0;

    /* set @融资归还指令金额# = 0; */
    set v_fina_return_comm_amt = 0;

    /* set @负债融券卖出指令金额# = 0; */
    set v_debt_loan_sell_comm_amt = 0;

    /* set @融券归还指令金额# = 0; */
    set v_loan_return_comm_amt = 0;

    /* set @归还成交费用# = 0; */
    set v_return_strike_fee = 0;

    /* set @负债利息# = 0; */
    set v_debt_interest = 0;

    /* set @归还利息金额# = 0; */
    set v_return_interest_amt = 0;

    /* set @利息积数# = 0; */
    set v_intrst_base_amt = 0;

    /* set @已归还金额# = 0; */
    set v_debt_return_amt = 0;

    /* set @已归还数量# = 0; */
    set v_debt_return_qty = 0;

    /* set @负债状态# = 《负债状态-未归还》; */
    set v_debt_status = 1;

    /* set @备注信息# = " "; */
    set v_remark_info = " ";
        loop_label:loop

            /* 调用【原子_交易证券_账户_锁定获取持仓负债记录】*/
            call db_tdsecu.pra_tdseac_LockGetStockPosiDebtDetail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_stock_code_no,
                v_busi_opor_no,
                v_debt_type,
                v_row_id,
                v_error_code,
                v_error_info,
                v_detail_posi_id,
                v_init_date,
                v_pass_no,
                v_exch_no,
                v_stock_type,
                v_asset_type,
                v_strike_qty,
                v_strike_amt,
                v_strike_fee,
                v_order_no,
                v_report_no,
                v_order_date,
                v_order_time,
                v_order_dir,
                v_order_price,
                v_order_qty,
                v_debt_amt,
                v_debt_qty,
                v_debt_fee,
                v_debt_interest,
                v_intrst_base_amt,
                v_debt_return_amt,
                v_debt_return_qty,
                v_return_interest_amt,
                v_debt_status,
                v_remark_info,
                v_update_times,
                v_stock_code,
                v_stock_acco_no,
                v_target_stock_code_no);

            /* if @错误编码#="0" then */
            if v_error_code="0" then

                /* set @证券代码编号# = @目标证券代码编号#; */
                set v_stock_code_no = v_target_stock_code_no;

                /* set @记录序号# = @明细持仓序号#; */
                set v_row_id = v_detail_posi_id;

                /* set @明细持仓序号串# = concat(@明细持仓序号串#,@明细持仓序号#,";"); */
                set v_detail_posi_id_str = concat(v_detail_posi_id_str,v_detail_posi_id,";");
                #该笔明细足够归还

                /* if (@负债金额#+@负债利息#) >(@已归还金额#+@归还利息金额# +@成交变动金额#) then */
                if (v_debt_amt+v_debt_interest) >(v_debt_return_amt+v_return_interest_amt +v_strike_occur_amt) then

                        /* set @变动利息金额# = round(@成交变动金额#*(@负债利息#-@归还利息金额#)/(@负债金额# - @已归还金额#+@负债利息#-@归还利息金额#),4); */
                        set v_occur_intrst_amt = round(v_strike_occur_amt*(v_debt_interest-v_return_interest_amt)/(v_debt_amt - v_debt_return_amt+v_debt_interest-v_return_interest_amt),4);

                        /* set @临时_已归还金额# = round(@成交变动金额#*(@负债金额#-@已归还金额#)/(@负债金额# - @已归还金额#+@负债利息#-@归还利息金额#),4); */
                        set v_tmp_debt_return_amt = round(v_strike_occur_amt*(v_debt_amt-v_debt_return_amt)/(v_debt_amt - v_debt_return_amt+v_debt_interest-v_return_interest_amt),4);

                        /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {已归还金额} + @临时_已归还金额#,{归还利息金额} = {归还利息金额}+@变动利息金额#,{已归还数量} = floor({已归还金额}/{负债金额}*{负债数量})][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                        set v_update_date = date_format(curdate(),'%Y%m%d');
                        set v_update_time = date_format(curtime(),'%H%i%s');
                        update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_return_amt + v_tmp_debt_return_amt,return_interest_amt = return_interest_amt+v_occur_intrst_amt,debt_return_qty = floor(debt_return_amt/debt_amt*debt_qty) where row_id = v_detail_posi_id;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.116.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                            end if;
                            leave label_pro;
                        end if;


                        /* [获取表记录变量语句][交易证券_账户_交易组负债明细表][{已归还数量}][@临时_已归还数量#][{记录序号}=@明细持仓序号#] */
                        select debt_return_qty into v_tmp_debt_return_qty from db_tdsecu.tb_tdseac_exgp_debtjour where row_id=v_detail_posi_id limit 1;


                        /* set @融资归还成交金额# = @临时_已归还金额#; */
                        set v_fina_return_strike_amt = v_tmp_debt_return_amt;

                        /* set @融资归还成交数量# =@临时_已归还数量#-@已归还数量#; */
                        set v_fina_return_strike_qty =v_tmp_debt_return_qty-v_debt_return_qty;

                        /* set @归还利息金额# = @变动利息金额#; */
                        set v_return_interest_amt = v_occur_intrst_amt;

                        /* set @负债利息# = 0; */
                        set v_debt_interest = 0;

                        /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][6][@交易组编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_group_no, exch_no, 
                            stock_acco_no, stock_code, stock_code_no, stock_type, 
                            asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                            fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                            fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                            fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                            fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                            fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                            fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                            return_strike_fee, debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                            v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                            v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                            v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                            v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                            v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                            v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                            v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                            v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                            v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.116.6";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("交易组编号=",v_exch_group_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @剩余成交金额# = 0; */
                        set v_remain_strike_amt = 0;
                        #如果代码不包在串里，则添加进串内

                        /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                        if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                            /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                            set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                        end if;
                        leave loop_label;

               /* elseif  (@负债金额#+@负债利息#) = (@已归还金额# +@成交变动金额#+@归还利息金额#) then */
               elseif  (v_debt_amt+v_debt_interest) = (v_debt_return_amt +v_strike_occur_amt+v_return_interest_amt) then
                   #该笔明细刚好归还完

                   /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {负债金额}- @负债利息#,{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt- v_debt_interest,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.116.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# =  @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt =  v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                    /* set @负债利息# = 0; */
                    set v_debt_interest = 0;

                    /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][8][@交易组编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_group_no, exch_no, 
                        stock_acco_no, stock_code, stock_code_no, stock_type, 
                        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                        return_strike_fee, debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                        v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.116.8";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("交易组编号=",v_exch_group_no);
                        end if;
                        leave label_pro;
                    end if;


                   /* set @剩余成交金额# = 0; */
                   set v_remain_strike_amt = 0;
                   #如果代码不包在串里，则添加进串内

                   /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                       set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                   end if;
                   leave loop_label;
               else
                   #该笔明细不足以归还，继续更新下一笔

                   /* [更新表记录][交易证券_账户_交易组负债明细表][{已归还金额} = {负债金额},{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_exgp_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.116.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# = @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt = v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                   /* set @成交变动金额# = @成交变动金额# - (@负债金额#  - @已归还金额# )- @归还利息金额#; */
                   set v_strike_occur_amt = v_strike_occur_amt - (v_debt_amt  - v_debt_return_amt )- v_return_interest_amt;

                   /* set @剩余成交金额# = @成交变动金额#; */
                   set v_remain_strike_amt = v_strike_occur_amt;

                    /* set @负债利息# = 0; */
                    set v_debt_interest = 0;

                    /* [插入重复更新][交易证券_账户_交易组业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][10][@交易组编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_exgp_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_group_no, exch_no, 
                        stock_acco_no, stock_code, stock_code_no, stock_type, 
                        asset_type, invest_type, debt_type, debt_fina_buy_strike_qty, 
                        fina_return_strike_qty, debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, 
                        fina_return_order_qty, debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, 
                        fina_return_comm_qty, debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, 
                        fina_return_strike_amt, debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, 
                        fina_return_order_amt, debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, 
                        fina_return_comm_amt, debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, 
                        return_strike_fee, debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_group_no, v_exch_no, 
                        v_stock_acco_no, v_stock_code, v_stock_code_no, v_stock_type, 
                        v_asset_type, v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, 
                        v_fina_return_strike_qty, v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, 
                        v_fina_return_order_qty, v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, 
                        v_fina_return_comm_qty, v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, 
                        v_fina_return_strike_amt, v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, 
                        v_fina_return_order_amt, v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, 
                        v_fina_return_comm_amt, v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, 
                        v_return_strike_fee, v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.116.10";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("交易组编号=",v_exch_group_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("交易组编号=",v_exch_group_no);
                        end if;
                        leave label_pro;
                    end if;

                   #如果代码不包在串里，则添加进串内

                   /* if instr(@证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @证券代码编号串# = concat(@证券代码编号串#,@证券代码编号#,";"); */
                       set v_stock_code_no_str = concat(v_stock_code_no_str,v_stock_code_no,";");
                   end if;
                    #如果找不到本票，那么每次都传证券代码为0去匹配其它票

                    /* if @临时_证券代码编号# = 0 then */
                    if v_tmp_stock_code_no = 0 then

                        /* set @证券代码编号# = 0; */
                        set v_stock_code_no = 0;
                    end if;
               end if;
            else

                /* set @错误编码#="0"; */
                set v_error_code="0";

                /* set @错误信息#=' '; */
                set v_error_info=' ';
                leave loop_label;
            end if;
        end loop;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_amt = v_remain_strike_amt;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_stock_code_no_str = v_stock_code_no_str;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_超出期限处理失败组合状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_OutDayDealDefaultComboStatus;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_OutDayDealDefaultComboStatus(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_query_row_id bigint;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_open_posi_date int;
    declare v_comm_batch_no int;
    declare v_combo_code varchar(32);
    declare v_combo_copies decimal(18,2);
    declare v_combo_status varchar(2);
    declare v_combo_cost decimal(18,4);
    declare v_combo_market_value decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_sum_realize_pandl decimal(18,4);
    declare v_status_update_date int;
    declare v_create_end_validity_date int;
    declare v_rebalance_end_validity_date int;
    declare v_repair_end_validity_date int;
    declare v_inteval_days int;
    declare v_create_failure_validity_date int;
    declare v_rebalance_failure_validity_date int;
    declare v_repair_failure_validity_date int;
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_query_row_id = 0;
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_combo_code = " ";
    SET v_combo_copies = 0;
    SET v_combo_status = "0";
    SET v_combo_cost = 0;
    SET v_combo_market_value = 0;
    SET v_realize_pandl = 0;
    SET v_sum_realize_pandl = 0;
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_create_end_validity_date = 0;
    SET v_rebalance_end_validity_date = 0;
    SET v_repair_end_validity_date = 0;
    SET v_inteval_days = 0;
    SET v_create_failure_validity_date = 0;
    SET v_rebalance_failure_validity_date = 0;
    SET v_repair_failure_validity_date = 0;
    SET v_record_count = 0;

    
    label_pro:BEGIN
    
    #异常-》失败，失败-》结束
    #遍历组合收益表
    loop_label:loop

        /* 调用【原子_交易证券_账户_锁定获取组合收益】*/
        call db_tdsecu.pra_tdseac_LockGetComboIncome(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_row_id,
            v_error_code,
            v_error_info,
            v_query_row_id,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_open_posi_date,
            v_comm_batch_no,
            v_combo_code,
            v_combo_copies,
            v_combo_status,
            v_combo_cost,
            v_combo_market_value,
            v_realize_pandl,
            v_sum_realize_pandl,
            v_status_update_date);

        /* if @错误编码#="0" then */
        if v_error_code="0" then

            /* set @记录序号# = @查询记录序号#; */
            set v_row_id = v_query_row_id;

            /* if @组合状态# = 《组合状态-创建失败》 or @组合状态# = 《组合状态-补单失败》 or @组合状态# = 《组合状态-再平衡失败》 or @组合状态#    =《组合状态-破坏》 then */
            if v_combo_status = "5" or v_combo_status = "19" or v_combo_status = "13" or v_combo_status    ="7" then

                /* [获取表记录变量][交易证券_公用_组合表][{创建结束有效期},{再平衡结束有效期},{补单结束有效期}][@创建结束有效期#,@再平衡结束有效期#,@补单结束有效期#][{机构编号} = @机构编号# and {组合代码}=@组合代码#][4][@机构编号#,@组合代码#] */
                select create_end_validity_date,rebalance_end_validity_date,repair_end_validity_date into v_create_end_validity_date,v_rebalance_end_validity_date,v_repair_end_validity_date from db_tdsecu.tb_tdsepb_combo where co_no = v_co_no and combo_code=v_combo_code limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.117.4";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("机构编号=",v_co_no,",","组合代码=",v_combo_code);
                    end if;
                    leave label_pro;
                end if;


                /* set @间隔天数# = DATEDIFF(@初始化日期#,@状态更新日期#); */
                set v_inteval_days = DATEDIFF(v_init_date,v_status_update_date);

                /* if  @创建结束有效期# > 0 and @间隔天数# > @创建结束有效期# then */
                if  v_create_end_validity_date > 0 and v_inteval_days > v_create_end_validity_date then

                    /* set @组合状态# = 《组合状态-结束》; */
                    set v_combo_status = "20";

                /* elseif @再平衡结束有效期#> 0 and @间隔天数# > @再平衡结束有效期# then */
                elseif v_rebalance_end_validity_date> 0 and v_inteval_days > v_rebalance_end_validity_date then

                    /* set @组合状态# = 《组合状态-结束》; */
                    set v_combo_status = "20";

                /* elseif  @补单结束有效期#>0 and  @间隔天数# > @补单结束有效期# then */
                elseif  v_repair_end_validity_date>0 and  v_inteval_days > v_repair_end_validity_date then

                    /* set @组合状态# = 《组合状态-结束》; */
                    set v_combo_status = "20";
                end if;
            else

                /* [获取表记录变量][交易证券_公用_组合表][{创建失败有效期},{再平衡失败有效期},{补单失败有效期}][@创建失败有效期#,@再平衡失败有效期#,@补单失败有效期#][{机构编号} = @机构编号# and {组合代码}=@组合代码#][4][@机构编号#,@组合代码#] */
                select create_failure_validity_date,rebalance_failure_validity_date,repair_failure_validity_date into v_create_failure_validity_date,v_rebalance_failure_validity_date,v_repair_failure_validity_date from db_tdsecu.tb_tdsepb_combo where co_no = v_co_no and combo_code=v_combo_code limit 1;
                if FOUND_ROWS() = 0 then
                            
                    SET v_error_code = "tdsecuA.2.117.4";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","组合代码=",v_combo_code),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("机构编号=",v_co_no,",","组合代码=",v_combo_code);
                    end if;
                    leave label_pro;
                end if;


                /* set @间隔天数# = DATEDIFF(@初始化日期#,@状态更新日期#); */
                set v_inteval_days = DATEDIFF(v_init_date,v_status_update_date);

                /* if @组合状态# = 《组合状态-创建委托异常》 and  @创建失败有效期# > 0 and @间隔天数# > @创建失败有效期# then */
                if v_combo_status = "4" and  v_create_failure_validity_date > 0 and v_inteval_days > v_create_failure_validity_date then

                    /* set @组合状态# = 《组合状态-创建失败》; */
                    set v_combo_status = "5";

                /* elseif (@组合状态# = 《组合状态-再平衡申购异常》 or @组合状态# = 《组合状态-再平衡赎回异常》) and @再平衡失败有效期#> 0 and @间隔天数# > @再平衡失败有效期# then */
                elseif (v_combo_status = "12" or v_combo_status = "10") and v_rebalance_failure_validity_date> 0 and v_inteval_days > v_rebalance_failure_validity_date then

                    /* set @组合状态# = 《组合状态-再平衡失败》; */
                    set v_combo_status = "13";

                /* elseif (@组合状态# = 《组合状态-补单申购异常》  or @组合状态# = 《组合状态-补单赎回异常》)  and  @补单失败有效期#>0 and @间隔天数# > @补单失败有效期# then */
                elseif (v_combo_status = "18"  or v_combo_status = "16")  and  v_repair_failure_validity_date>0 and v_inteval_days > v_repair_failure_validity_date then

                    /* set @组合状态# = 《组合状态-补单失败》; */
                    set v_combo_status = "19";
                end if;
            end if;
            #是否存在在途交易,不存在则更新组合状态。判断指令批号下的当前订单表和历史订单表是否存在已报、待撤、部成的订单

            /* 调用【原子_交易证券_指令_判断同批指令存在在途交易】*/
            call db_tdsecu.pra_tdseap_CheckBatchCommExistOnwayOrder(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_comm_batch_no,
                v_co_no,
                v_error_code,
                v_error_info,
                v_record_count);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.2.117.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_判断同批指令存在在途交易出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* if @记录个数#=0 then */
            if v_record_count=0 then

                /* 调用【原子_交易证券_账户_处理组合状态】*/
                call db_tdsecu.pra_tdseac_DealComboStatus(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_co_no,
                    v_comm_batch_no,
                    v_combo_status,
                    v_error_code,
                    v_error_info);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.2.117.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_处理组合状态出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;
        else

            /* set @错误编码#="0"; */
            set v_error_code="0";

            /* set @错误信息#=' '; */
            set v_error_info=' ';
            leave loop_label;
        end if;
    end loop;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_锁定获取组合收益
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_LockGetComboIncome;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_LockGetComboIncome(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_query_row_id bigint,
    OUT p_init_date int,
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_open_posi_date int,
    OUT p_comm_batch_no int,
    OUT p_combo_code varchar(32),
    OUT p_combo_copies decimal(18,2),
    OUT p_combo_status varchar(2),
    OUT p_combo_cost decimal(18,4),
    OUT p_combo_market_value decimal(18,4),
    OUT p_realize_pandl decimal(18,4),
    OUT p_sum_realize_pandl decimal(18,4),
    OUT p_status_update_date int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_query_row_id bigint;
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_open_posi_date int;
    declare v_comm_batch_no int;
    declare v_combo_code varchar(32);
    declare v_combo_copies decimal(18,2);
    declare v_combo_status varchar(2);
    declare v_combo_cost decimal(18,4);
    declare v_combo_market_value decimal(18,4);
    declare v_realize_pandl decimal(18,4);
    declare v_sum_realize_pandl decimal(18,4);
    declare v_status_update_date int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_query_row_id = 0;
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_combo_code = " ";
    SET v_combo_copies = 0;
    SET v_combo_status = "0";
    SET v_combo_cost = 0;
    SET v_combo_market_value = 0;
    SET v_realize_pandl = 0;
    SET v_sum_realize_pandl = 0;
    SET v_status_update_date = date_format(curdate(),'%Y%m%d');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_账户_组合收益表][字段][字段变量][{记录序号} > @记录序号# order by {记录序号}][4][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        co_no, pd_no, exch_group_no, open_posi_date, 
        comm_batch_no, combo_code, combo_copies, combo_status, 
        combo_cost, combo_market_value, realize_pandl, sum_realize_pandl, 
        status_update_date into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_co_no, v_pd_no, v_exch_group_no, v_open_posi_date, 
        v_comm_batch_no, v_combo_code, v_combo_copies, v_combo_status, 
        v_combo_cost, v_combo_market_value, v_realize_pandl, v_sum_realize_pandl, 
        v_status_update_date from db_tdsecu.tb_tdseac_comboincome where row_id > v_row_id order by row_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.118.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* set @查询记录序号# = @记录序号#; */
    set v_query_row_id = v_row_id;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_query_row_id = v_query_row_id;
    SET p_init_date = v_init_date;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_open_posi_date = v_open_posi_date;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_combo_code = v_combo_code;
    SET p_combo_copies = v_combo_copies;
    SET p_combo_status = v_combo_status;
    SET p_combo_cost = v_combo_cost;
    SET p_combo_market_value = v_combo_market_value;
    SET p_realize_pandl = v_realize_pandl;
    SET p_sum_realize_pandl = v_sum_realize_pandl;
    SET p_status_update_date = v_status_update_date;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券资产账户成交买券还券比例释放
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanAsacStrikeBackStockRatio;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanAsacStrikeBackStockRatio(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_busi_opor_no int,
    IN p_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_qty decimal(18,2),
    OUT p_detail_posi_id_str varchar(1024),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_loan_return_strike_amt decimal(18,4),
    OUT p_return_strike_fee decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_busi_opor_no int;
    declare v_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_qty decimal(18,2);
    declare v_detail_posi_id_str varchar(1024);
    declare v_return_interest_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_row_id bigint;
    declare v_tmp_return_interest_amt decimal(18,4);
    declare v_occur_intrst_amt decimal(18,4);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_tmp_debt_return_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_strike_fee = p_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_qty = 0;
    SET v_detail_posi_id_str = " ";
    SET v_return_interest_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_row_id = 0;
    SET v_tmp_return_interest_amt = 0;
    SET v_occur_intrst_amt = 0;
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_dir = 0;
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_debt_interest = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_amt = 0;

    
    label_pro:BEGIN
    
    #[检查正常返回][@成交费用#>0]

    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @明细持仓序号串# = ";"; */
    set v_detail_posi_id_str = ";";

    /* set @剩余成交数量# = @成交变动数量#; */
    set v_remain_strike_qty = v_strike_occur_qty;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @临时_归还利息金额# = 0; */
    set v_tmp_return_interest_amt = 0;

    /* set @变动利息金额# = 0; */
    set v_occur_intrst_amt = 0;
    loop_label:loop

        /* 调用【原子_交易证券_账户_锁定获取资产账户持仓负债记录】*/
        call db_tdsecu.pra_tdseac_LockGetAsacStockPosiDebtDetail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_stock_code_no,
            v_busi_opor_no,
            v_debt_type,
            v_row_id,
            v_error_code,
            v_error_info,
            v_detail_posi_id,
            v_init_date,
            v_pass_no,
            v_exch_no,
            v_stock_type,
            v_asset_type,
            v_strike_qty,
            v_strike_amt,
            v_strike_fee,
            v_order_no,
            v_report_no,
            v_order_date,
            v_order_time,
            v_order_dir,
            v_order_price,
            v_order_qty,
            v_debt_amt,
            v_debt_qty,
            v_debt_fee,
            v_debt_interest,
            v_intrst_base_amt,
            v_debt_return_amt,
            v_debt_return_qty,
            v_return_interest_amt,
            v_debt_status,
            v_remark_info,
            v_update_times,
            v_stock_code,
            v_stock_acco_no,
            v_target_stock_code_no);

        /* if @错误编码#="0" then */
        if v_error_code="0" then

            /* set @记录序号# = @明细持仓序号#; */
            set v_row_id = v_detail_posi_id;

            /* set @明细持仓序号串# = concat(@明细持仓序号串#,@明细持仓序号#,";"); */
            set v_detail_posi_id_str = concat(v_detail_posi_id_str,v_detail_posi_id,";");
            #该笔明细足够归还

            /* if @负债数量# > (@已归还数量# +@成交变动数量#) then */
            if v_debt_qty > (v_debt_return_qty +v_strike_occur_qty) then

                /* set @变动利息金额# = round((@负债利息#-@归还利息金额#)*@成交变动数量#/(@负债数量#-@已归还数量#),4); */
                set v_occur_intrst_amt = round((v_debt_interest-v_return_interest_amt)*v_strike_occur_qty/(v_debt_qty-v_debt_return_qty),4);

                /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还数量} = {已归还数量} + @成交变动数量#,{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={归还利息金额}+@变动利息金额#][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_return_qty + v_strike_occur_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=return_interest_amt+v_occur_intrst_amt where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.119.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{已归还金额}][@临时_已归还金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt into v_tmp_debt_return_amt from db_tdsecu.tb_tdseac_asac_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# = @临时_归还利息金额#+@变动利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_occur_intrst_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额# - @负债费用# *@成交变动数量# /@负债数量#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt - v_debt_fee *v_strike_occur_qty /v_debt_qty;

                /* set @归还成交费用# = @负债费用# *@成交变动数量# /@负债数量#; */
                set v_return_strike_fee = v_debt_fee *v_strike_occur_qty /v_debt_qty;
                leave loop_label;

           /* elseif @负债数量# = (@已归还数量# +@成交变动数量#) then */
           elseif v_debt_qty = (v_debt_return_qty +v_strike_occur_qty) then
               #该笔明细刚好归还完

                /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={负债利息},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=debt_interest,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.119.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{已归还金额},{归还利息金额}][@临时_已归还金额#,@变动利息金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt,return_interest_amt into v_tmp_debt_return_amt,v_occur_intrst_amt from db_tdsecu.tb_tdseac_asac_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @剩余成交数量# = 0; */
                set v_remain_strike_qty = 0;

                /* set @临时_归还利息金额# =@临时_归还利息金额#+@变动利息金额#-@归还利息金额#; */
                set v_tmp_return_interest_amt =v_tmp_return_interest_amt+v_occur_intrst_amt-v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#  - @负债费用#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt  - v_debt_fee;

                /* set @归还成交费用# = @负债费用#; */
                set v_return_strike_fee = v_debt_fee;
                leave loop_label;
           else
                #该笔明细不足以归还，继续更新下一笔

                /* set @剩余成交数量# = @剩余成交数量# - (@负债数量# - @已归还数量#); */
                set v_remain_strike_qty = v_remain_strike_qty - (v_debt_qty - v_debt_return_qty);

                /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还数量} = {负债数量},{已归还金额} =round({已归还数量}/{负债数量}*{负债金额},4),{归还利息金额}={负债利息},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                set v_update_date = date_format(curdate(),'%Y%m%d');
                set v_update_time = date_format(curtime(),'%H%i%s');
                update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_qty = debt_qty,debt_return_amt =round(debt_return_qty/debt_qty*debt_amt,4),return_interest_amt=debt_interest,debt_status = 2 where row_id = v_detail_posi_id;
                if v_error_code = "1" then
                            
                    SET v_error_code = "tdsecuA.2.119.1";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                    end if;
                    leave label_pro;
                end if;


                /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{已归还金额},{归还利息金额}][@临时_已归还金额#,@变动利息金额#][{记录序号}=@明细持仓序号#] */
                select debt_return_amt,return_interest_amt into v_tmp_debt_return_amt,v_occur_intrst_amt from db_tdsecu.tb_tdseac_asac_debtjour where row_id=v_detail_posi_id limit 1;


                /* set @临时_归还利息金额# = @临时_归还利息金额#+@变动利息金额#-@归还利息金额#; */
                set v_tmp_return_interest_amt = v_tmp_return_interest_amt+v_occur_intrst_amt-v_return_interest_amt;

                /* set @融券归还成交金额# = @融券归还成交金额# +@临时_已归还金额# - @已归还金额#  - @负债费用#; */
                set v_loan_return_strike_amt = v_loan_return_strike_amt +v_tmp_debt_return_amt - v_debt_return_amt  - v_debt_fee;

                /* set @归还成交费用# = @归还成交费用#+@负债费用#; */
                set v_return_strike_fee = v_return_strike_fee+v_debt_fee;
           end if;
        else
            #已经找不到负债记录,可能会存在多还的情况

            /* set @错误编码#="0"; */
            set v_error_code="0";

            /* set @错误信息#=' '; */
            set v_error_info=' ';
            leave loop_label;
        end if;
    end loop;

    /* set @归还利息金额# = @临时_归还利息金额#; */
    set v_return_interest_amt = v_tmp_return_interest_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_qty = v_remain_strike_qty;
    SET p_detail_posi_id_str = v_detail_posi_id_str;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_loan_return_strike_amt = v_loan_return_strike_amt;
    SET p_return_strike_fee = v_return_strike_fee;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_锁定获取资产账户持仓负债记录
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_LockGetAsacStockPosiDebtDetail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_LockGetAsacStockPosiDebtDetail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_stock_code_no int,
    IN p_busi_opor_no int,
    IN p_debt_type int,
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_detail_posi_id bigint,
    OUT p_init_date int,
    OUT p_pass_no int,
    OUT p_exch_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_strike_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_fee decimal(18,4),
    OUT p_order_no int,
    OUT p_report_no varchar(32),
    OUT p_order_date int,
    OUT p_order_time int,
    OUT p_order_dir int,
    OUT p_order_price decimal(16,9),
    OUT p_order_qty decimal(18,2),
    OUT p_debt_amt decimal(18,4),
    OUT p_debt_qty decimal(18,2),
    OUT p_debt_fee decimal(18,4),
    OUT p_debt_interest decimal(18,4),
    OUT p_intrst_base_amt decimal(18,4),
    OUT p_debt_return_amt decimal(18,4),
    OUT p_debt_return_qty decimal(18,2),
    OUT p_return_interest_amt decimal(18,4),
    OUT p_debt_status int,
    OUT p_remark_info varchar(255),
    OUT p_update_times int,
    OUT p_stock_code varchar(6),
    OUT p_stock_acco_no int,
    OUT p_target_stock_code_no int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_stock_code_no int;
    declare v_busi_opor_no int;
    declare v_debt_type int;
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_detail_posi_id bigint;
    declare v_init_date int;
    declare v_pass_no int;
    declare v_exch_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_fee decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_return_interest_amt decimal(18,4);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_update_times int;
    declare v_stock_code varchar(6);
    declare v_stock_acco_no int;
    declare v_target_stock_code_no int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_debt_order_no int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_debt_type = p_debt_type;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_detail_posi_id = 0;
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_exch_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_fee = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_dir = 0;
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_debt_interest = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_return_interest_amt = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_update_times = 1;
    SET v_stock_code = " ";
    SET v_stock_acco_no = 0;
    SET v_target_stock_code_no = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_debt_order_no = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_账户_资产账户负债明细表][字段][字段变量][{操作员编号}=@业务操作员编号# and  {资产账户编号}=@资产账户编号#  and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and {负债类型}=@负债类型# and {负债状态}<>《负债状态-已归还》   order by {负债订单编号}][4][@业务操作员编号#,@资产账户编号#,@股东代码编号#,@证券代码编号#,@市场编号#,@负债类型#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_init_date, 
        v_opor_no, v_co_no, v_pd_no, v_asset_acco_no, 
        v_exch_no, v_stock_acco_no, v_stock_code, v_stock_code_no, 
        v_stock_type, v_asset_type, v_debt_type, v_strike_qty, 
        v_strike_amt, v_strike_fee, v_debt_order_no, v_report_no, 
        v_order_date, v_order_time, v_order_dir, v_order_price, 
        v_order_qty, v_debt_amt, v_debt_qty, v_debt_fee, 
        v_debt_interest, v_intrst_base_amt, v_debt_return_amt, v_debt_return_qty, 
        v_return_interest_amt, v_debt_status, v_remark_info from db_tdsecu.tb_tdseac_asac_debtjour where opor_no=v_busi_opor_no and  asset_acco_no=v_asset_acco_no  and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and debt_type=v_debt_type and debt_status<>2   order by debt_order_no limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.2.120.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("业务操作员编号=",v_busi_opor_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","市场编号=",v_exch_no,",","负债类型=",v_debt_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("业务操作员编号=",v_busi_opor_no,",","资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no,",","市场编号=",v_exch_no,",","负债类型=",v_debt_type);
        end if;
        leave label_pro;
    end if;


    /* set @明细持仓序号# = @记录序号#; */
    set v_detail_posi_id = v_row_id;

    /* set @目标证券代码编号# = @证券代码编号#; */
    set v_target_stock_code_no = v_stock_code_no;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_detail_posi_id = v_detail_posi_id;
    SET p_init_date = v_init_date;
    SET p_pass_no = v_pass_no;
    SET p_exch_no = v_exch_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_strike_qty = v_strike_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_fee = v_strike_fee;
    SET p_order_no = v_order_no;
    SET p_report_no = v_report_no;
    SET p_order_date = v_order_date;
    SET p_order_time = v_order_time;
    SET p_order_dir = v_order_dir;
    SET p_order_price = v_order_price;
    SET p_order_qty = v_order_qty;
    SET p_debt_amt = v_debt_amt;
    SET p_debt_qty = v_debt_qty;
    SET p_debt_fee = v_debt_fee;
    SET p_debt_interest = v_debt_interest;
    SET p_intrst_base_amt = v_intrst_base_amt;
    SET p_debt_return_amt = v_debt_return_amt;
    SET p_debt_return_qty = v_debt_return_qty;
    SET p_return_interest_amt = v_return_interest_amt;
    SET p_debt_status = v_debt_status;
    SET p_remark_info = v_remark_info;
    SET p_update_times = v_update_times;
    SET p_stock_code = v_stock_code;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_target_stock_code_no = v_target_stock_code_no;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_融资融券资产账户成交卖券还款比例释放
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_FinaLoanAsacStrikeBackAmtRatio;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_FinaLoanAsacStrikeBackAmtRatio(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code varchar(6),
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_invest_type int,
    IN p_debt_type int,
    IN p_order_dir int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_strike_occur_amt decimal(18,4),
    IN p_strike_occur_qty decimal(18,2),
    IN p_strike_fee decimal(18,4),
    IN p_busi_opor_no int,
    IN p_fina_return_strike_qty decimal(18,2),
    IN p_fina_return_strike_amt decimal(18,4),
    IN p_fina_return_order_qty decimal(18,2),
    IN p_fina_return_order_amt decimal(18,4),
    IN p_debt_strike_fee decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_remain_strike_amt decimal(18,4),
    OUT p_asac_detail_posi_id_str varchar(1024),
    OUT p_asac_stock_code_no_str varchar(4096)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_invest_type int;
    declare v_debt_type int;
    declare v_order_dir int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_strike_occur_amt decimal(18,4);
    declare v_strike_occur_qty decimal(18,2);
    declare v_strike_fee decimal(18,4);
    declare v_busi_opor_no int;
    declare v_fina_return_strike_qty decimal(18,2);
    declare v_fina_return_strike_amt decimal(18,4);
    declare v_fina_return_order_qty decimal(18,2);
    declare v_fina_return_order_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_remain_strike_amt decimal(18,4);
    declare v_asac_detail_posi_id_str varchar(1024);
    declare v_asac_stock_code_no_str varchar(4096);
    declare v_row_id bigint;
    declare v_tmp_stock_code_no int;
    declare v_tmp_strike_occur_amt decimal(18,4);
    declare v_tmp_strike_fee decimal(18,4);
    declare v_debt_fina_buy_strike_qty decimal(18,2);
    declare v_debt_loan_sell_strike_qty decimal(18,2);
    declare v_loan_return_strike_qty decimal(18,2);
    declare v_debt_fina_buy_order_qty decimal(18,2);
    declare v_debt_loan_sell_order_qty decimal(18,2);
    declare v_loan_return_order_qty decimal(18,2);
    declare v_debt_fina_buy_comm_qty decimal(18,2);
    declare v_fina_return_comm_qty decimal(18,2);
    declare v_debt_loan_sell_comm_qty decimal(18,2);
    declare v_loan_return_comm_qty decimal(18,2);
    declare v_debt_fina_buy_strike_amt decimal(18,4);
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_debt_fina_buy_order_amt decimal(18,4);
    declare v_debt_loan_sell_order_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_debt_fina_buy_comm_amt decimal(18,4);
    declare v_fina_return_comm_amt decimal(18,4);
    declare v_debt_loan_sell_comm_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_debt_interest decimal(18,4);
    declare v_return_interest_amt decimal(18,4);
    declare v_intrst_base_amt decimal(18,4);
    declare v_debt_return_amt decimal(18,4);
    declare v_debt_return_qty decimal(18,2);
    declare v_debt_status int;
    declare v_remark_info varchar(255);
    declare v_detail_posi_id bigint;
    declare v_pass_no int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_order_no int;
    declare v_report_no varchar(32);
    declare v_order_date int;
    declare v_order_time int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_debt_amt decimal(18,4);
    declare v_debt_qty decimal(18,2);
    declare v_debt_fee decimal(18,4);
    declare v_update_times int;
    declare v_target_stock_code_no int;
    declare v_occur_intrst_amt decimal(18,4);
    declare v_tmp_debt_return_amt decimal(18,4);
    declare v_update_date int;
    declare v_update_time int;
    declare v_tmp_debt_return_qty decimal(18,2);
    declare v_create_date int;
    declare v_create_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_invest_type = p_invest_type;
    SET v_debt_type = p_debt_type;
    SET v_order_dir = p_order_dir;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_strike_occur_amt = p_strike_occur_amt;
    SET v_strike_occur_qty = p_strike_occur_qty;
    SET v_strike_fee = p_strike_fee;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_fina_return_strike_qty = p_fina_return_strike_qty;
    SET v_fina_return_strike_amt = p_fina_return_strike_amt;
    SET v_fina_return_order_qty = p_fina_return_order_qty;
    SET v_fina_return_order_amt = p_fina_return_order_amt;
    SET v_debt_strike_fee = p_debt_strike_fee;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_remain_strike_amt = 0;
    SET v_asac_detail_posi_id_str = " ";
    SET v_asac_stock_code_no_str = " ";
    SET v_row_id = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_tmp_strike_occur_amt = 0;
    SET v_tmp_strike_fee = 0;
    SET v_debt_fina_buy_strike_qty = 0;
    SET v_debt_loan_sell_strike_qty = 0;
    SET v_loan_return_strike_qty = 0;
    SET v_debt_fina_buy_order_qty = 0;
    SET v_debt_loan_sell_order_qty = 0;
    SET v_loan_return_order_qty = 0;
    SET v_debt_fina_buy_comm_qty = 0;
    SET v_fina_return_comm_qty = 0;
    SET v_debt_loan_sell_comm_qty = 0;
    SET v_loan_return_comm_qty = 0;
    SET v_debt_fina_buy_strike_amt = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_debt_fina_buy_order_amt = 0;
    SET v_debt_loan_sell_order_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_debt_fina_buy_comm_amt = 0;
    SET v_fina_return_comm_amt = 0;
    SET v_debt_loan_sell_comm_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_debt_interest = 0;
    SET v_return_interest_amt = 0;
    SET v_intrst_base_amt = 0;
    SET v_debt_return_amt = 0;
    SET v_debt_return_qty = 0;
    SET v_debt_status = 0;
    SET v_remark_info = " ";
    SET v_detail_posi_id = 0;
    SET v_pass_no = 0;
    SET v_strike_qty = 0;
    SET v_strike_amt = 0;
    SET v_order_no = 0;
    SET v_report_no = " ";
    SET v_order_date = date_format(curdate(),'%Y%m%d');
    SET v_order_time = date_format(curtime(),'%H%i%s');
    SET v_order_price = 0;
    SET v_order_qty = 0;
    SET v_debt_amt = 0;
    SET v_debt_qty = 0;
    SET v_debt_fee = 0;
    SET v_update_times = 1;
    SET v_target_stock_code_no = 0;
    SET v_occur_intrst_amt = 0;
    SET v_tmp_debt_return_amt = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_debt_return_qty = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #负债金额已经包含费用

    /* set @记录序号# = 0; */
    set v_row_id = 0;

    /* set @资产账户明细持仓序号串# = ""; */
    set v_asac_detail_posi_id_str = "";

    /* set @资产账户证券代码编号串# = ";"; */
    set v_asac_stock_code_no_str = ";";

    /* set @临时_证券代码编号# =@证券代码编号#; */
    set v_tmp_stock_code_no =v_stock_code_no;

    /* set @剩余成交金额# = @成交变动金额#; */
    set v_remain_strike_amt = v_strike_occur_amt;

    /* set @临时_成交变动金额# = @成交变动金额#; */
    set v_tmp_strike_occur_amt = v_strike_occur_amt;

    /* set @临时_成交费用# = @成交费用#; */
    set v_tmp_strike_fee = v_strike_fee;

    /* set @负债成交费用# =0; */
    set v_debt_strike_fee =0;

    /* set @负债融资买入成交数量# = 0; */
    set v_debt_fina_buy_strike_qty = 0;

    /* set @负债融券卖出成交数量# = 0; */
    set v_debt_loan_sell_strike_qty = 0;

    /* set @融券归还成交数量# = 0; */
    set v_loan_return_strike_qty = 0;

    /* set @负债融资买入订单数量# = 0; */
    set v_debt_fina_buy_order_qty = 0;

    /* set @负债融券卖出订单数量# = 0; */
    set v_debt_loan_sell_order_qty = 0;

    /* set @融券归还订单数量# = 0; */
    set v_loan_return_order_qty = 0;

    /* set @负债融资买入指令数量# = 0; */
    set v_debt_fina_buy_comm_qty = 0;

    /* set @融资归还指令数量# = 0; */
    set v_fina_return_comm_qty = 0;

    /* set @负债融券卖出指令数量# = 0; */
    set v_debt_loan_sell_comm_qty = 0;

    /* set @融券归还指令数量# = 0; */
    set v_loan_return_comm_qty = 0;

    /* set @负债融资买入成交金额# = 0; */
    set v_debt_fina_buy_strike_amt = 0;

    /* set @负债融券卖出成交金额# = 0; */
    set v_debt_loan_sell_strike_amt = 0;

    /* set @融券归还成交金额# = 0; */
    set v_loan_return_strike_amt = 0;

    /* set @负债融资买入订单金额# = 0; */
    set v_debt_fina_buy_order_amt = 0;

    /* set @负债融券卖出订单金额# = 0; */
    set v_debt_loan_sell_order_amt = 0;

    /* set @融券归还订单金额# = 0; */
    set v_loan_return_order_amt = 0;

    /* set @负债融资买入指令金额# = 0; */
    set v_debt_fina_buy_comm_amt = 0;

    /* set @融资归还指令金额# = 0; */
    set v_fina_return_comm_amt = 0;

    /* set @负债融券卖出指令金额# = 0; */
    set v_debt_loan_sell_comm_amt = 0;

    /* set @融券归还指令金额# = 0; */
    set v_loan_return_comm_amt = 0;

    /* set @归还成交费用# = 0; */
    set v_return_strike_fee = 0;

    /* set @负债利息# = 0; */
    set v_debt_interest = 0;

    /* set @归还利息金额# = 0; */
    set v_return_interest_amt = 0;

    /* set @利息积数# = 0; */
    set v_intrst_base_amt = 0;

    /* set @已归还金额# = 0; */
    set v_debt_return_amt = 0;

    /* set @已归还数量# = 0; */
    set v_debt_return_qty = 0;

    /* set @负债状态# = 《负债状态-未归还》; */
    set v_debt_status = 1;

    /* set @备注信息# = " "; */
    set v_remark_info = " ";
        loop_label:loop

            /* 调用【原子_交易证券_账户_锁定获取资产账户持仓负债记录】*/
            call db_tdsecu.pra_tdseac_LockGetAsacStockPosiDebtDetail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_stock_code_no,
                v_busi_opor_no,
                v_debt_type,
                v_row_id,
                v_error_code,
                v_error_info,
                v_detail_posi_id,
                v_init_date,
                v_pass_no,
                v_exch_no,
                v_stock_type,
                v_asset_type,
                v_strike_qty,
                v_strike_amt,
                v_strike_fee,
                v_order_no,
                v_report_no,
                v_order_date,
                v_order_time,
                v_order_dir,
                v_order_price,
                v_order_qty,
                v_debt_amt,
                v_debt_qty,
                v_debt_fee,
                v_debt_interest,
                v_intrst_base_amt,
                v_debt_return_amt,
                v_debt_return_qty,
                v_return_interest_amt,
                v_debt_status,
                v_remark_info,
                v_update_times,
                v_stock_code,
                v_stock_acco_no,
                v_target_stock_code_no);

            /* if @错误编码#="0" then */
            if v_error_code="0" then

                /* set @证券代码编号# = @目标证券代码编号#; */
                set v_stock_code_no = v_target_stock_code_no;

                /* set @记录序号# = @明细持仓序号#; */
                set v_row_id = v_detail_posi_id;

                /* set @资产账户明细持仓序号串# = concat(@资产账户明细持仓序号串#,@明细持仓序号#,";"); */
                set v_asac_detail_posi_id_str = concat(v_asac_detail_posi_id_str,v_detail_posi_id,";");
                #该笔明细足够归还

                /* if (@负债金额#+@负债利息#) >(@已归还金额#+@归还利息金额# +@成交变动金额#) then */
                if (v_debt_amt+v_debt_interest) >(v_debt_return_amt+v_return_interest_amt +v_strike_occur_amt) then

                        /* set @变动利息金额# = round(@成交变动金额#*(@负债利息#-@归还利息金额#)/(@负债金额# - @已归还金额#+@负债利息#-@归还利息金额#),4); */
                        set v_occur_intrst_amt = round(v_strike_occur_amt*(v_debt_interest-v_return_interest_amt)/(v_debt_amt - v_debt_return_amt+v_debt_interest-v_return_interest_amt),4);

                        /* set @临时_已归还金额# = round(@成交变动金额#*(@负债金额#-@已归还金额#)/(@负债金额# - @已归还金额#+@负债利息#-@归还利息金额#),4); */
                        set v_tmp_debt_return_amt = round(v_strike_occur_amt*(v_debt_amt-v_debt_return_amt)/(v_debt_amt - v_debt_return_amt+v_debt_interest-v_return_interest_amt),4);

                        /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还金额} = {已归还金额} + @临时_已归还金额#,{归还利息金额} = {归还利息金额}+@变动利息金额#,{已归还数量} = floor({已归还金额}/{负债金额}*{负债数量})][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                        set v_update_date = date_format(curdate(),'%Y%m%d');
                        set v_update_time = date_format(curtime(),'%H%i%s');
                        update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_return_amt + v_tmp_debt_return_amt,return_interest_amt = return_interest_amt+v_occur_intrst_amt,debt_return_qty = floor(debt_return_amt/debt_amt*debt_qty) where row_id = v_detail_posi_id;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.121.1";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                            end if;
                            leave label_pro;
                        end if;


                        /* [获取表记录变量语句][交易证券_账户_资产账户负债明细表][{已归还数量}][@临时_已归还数量#][{记录序号}=@明细持仓序号#] */
                        select debt_return_qty into v_tmp_debt_return_qty from db_tdsecu.tb_tdseac_asac_debtjour where row_id=v_detail_posi_id limit 1;


                        /* set @融资归还成交金额# = @临时_已归还金额#; */
                        set v_fina_return_strike_amt = v_tmp_debt_return_amt;

                        /* set @融资归还成交数量# =@临时_已归还数量#-@已归还数量#; */
                        set v_fina_return_strike_qty =v_tmp_debt_return_qty-v_debt_return_qty;

                        /* set @归还利息金额# = @变动利息金额#; */
                        set v_return_interest_amt = v_occur_intrst_amt;

                        /* set @负债利息# = 0; */
                        set v_debt_interest = 0;

                        /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][5][@资产账户编号#] */
                        set v_create_date = date_format(curdate(),'%Y%m%d');
                        set v_create_time = date_format(curtime(),'%H%i%s');
                        set v_update_date = v_create_date;
                        set v_update_time = v_create_time;
                        set v_update_times = 1;
                        insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                            create_date, create_time, update_date, 
                            update_time, update_times, init_date, co_no, 
                            pd_no, asset_acco_no, exch_no, stock_acco_no, 
                            stock_code, stock_code_no, stock_type, asset_type, 
                            invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                            debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                            debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                            debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                            debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                            debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                            debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                            debt_interest, return_interest_amt) 
                        values(
                            v_create_date, v_create_time, v_update_date, 
                            v_update_time, v_update_times, v_init_date, v_co_no, 
                            v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                            v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                            v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                            v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                            v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                            v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                            v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                            v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                            v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                            v_debt_interest, v_return_interest_amt) 
                        ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                        if v_error_code = "1" then
                                    
                            SET v_error_code = "tdsecuA.2.121.5";
                            if v_mysql_message <> "" then
                                SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                            else
                                SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                            end if;
                            leave label_pro;
                        end if;


                        /* set @剩余成交金额# = 0; */
                        set v_remain_strike_amt = 0;
                        #如果代码不包在串里，则添加进串内

                        /* if instr(@资产账户证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                        if instr(v_asac_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                            /* set @资产账户证券代码编号串# = concat(@资产账户证券代码编号串#,@证券代码编号#,";"); */
                            set v_asac_stock_code_no_str = concat(v_asac_stock_code_no_str,v_stock_code_no,";");
                        end if;
                        leave loop_label;

               /* elseif  (@负债金额#+@负债利息#) = (@已归还金额# +@成交变动金额#+@归还利息金额#) then */
               elseif  (v_debt_amt+v_debt_interest) = (v_debt_return_amt +v_strike_occur_amt+v_return_interest_amt) then
                   #该笔明细刚好归还完

                   /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还金额} = {负债金额}- @负债利息#,{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt- v_debt_interest,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.121.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# =  @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt =  v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                    /* set @负债利息# = 0; */
                    set v_debt_interest = 0;

                    /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][7][@资产账户编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_no, stock_acco_no, 
                        stock_code, stock_code_no, stock_type, asset_type, 
                        invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                        debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                        debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                        debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                        debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                        debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                        debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                        debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                        v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                        v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                        v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                        v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                        v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                        v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                        v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                        v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                        v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.121.7";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                        end if;
                        leave label_pro;
                    end if;


                   /* set @剩余成交金额# = 0; */
                   set v_remain_strike_amt = 0;
                   #如果代码不包在串里，则添加进串内

                   /* if instr(@资产账户证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_asac_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @资产账户证券代码编号串# = concat(@资产账户证券代码编号串#,@证券代码编号#,";"); */
                       set v_asac_stock_code_no_str = concat(v_asac_stock_code_no_str,v_stock_code_no,";");
                   end if;
                   leave loop_label;
               else
                   #该笔明细不足以归还，继续更新下一笔

                   /* [更新表记录][交易证券_账户_资产账户负债明细表][{已归还金额} = {负债金额},{归还利息金额} = @负债利息#,{已归还数量} = {负债数量},{负债状态} = 《负债状态-已归还》][{记录序号} = @明细持仓序号#][1][@明细持仓序号#] */
                   set v_update_date = date_format(curdate(),'%Y%m%d');
                   set v_update_time = date_format(curtime(),'%H%i%s');
                   update db_tdsecu.tb_tdseac_asac_debtjour set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, debt_return_amt = debt_amt,return_interest_amt = v_debt_interest,debt_return_qty = debt_qty,debt_status = 2 where row_id = v_detail_posi_id;
                   if v_error_code = "1" then
                               
                       SET v_error_code = "tdsecuA.2.121.1";
                       if v_mysql_message <> "" then
                           SET v_error_info = CONCAT(concat("明细持仓序号=",v_detail_posi_id),"#",v_mysql_message);
                       else
                           SET v_error_info = concat("明细持仓序号=",v_detail_posi_id);
                       end if;
                       leave label_pro;
                   end if;


                    /* set @融资归还成交金额# = @负债金额# - @已归还金额#; */
                    set v_fina_return_strike_amt = v_debt_amt - v_debt_return_amt;

                    /* set @融资归还成交数量# =@负债数量#-@已归还数量#; */
                    set v_fina_return_strike_qty =v_debt_qty-v_debt_return_qty;

                    /* set @归还利息金额# = @负债利息# - @归还利息金额#; */
                    set v_return_interest_amt = v_debt_interest - v_return_interest_amt;

                   /* set @成交变动金额# = @成交变动金额# - (@负债金额# - @已归还金额#)-@归还利息金额#; */
                   set v_strike_occur_amt = v_strike_occur_amt - (v_debt_amt - v_debt_return_amt)-v_return_interest_amt;

                   /* set @剩余成交金额# = @成交变动金额#; */
                   set v_remain_strike_amt = v_strike_occur_amt;

                    /* set @负债利息# = 0; */
                    set v_debt_interest = 0;

                    /* [插入重复更新][交易证券_账户_资产账户业务持仓负债表][字段][字段变量][{负债融资买入成交数量}={负债融资买入成交数量}+@负债融资买入成交数量#,{负债融资买入成交金额}={负债融资买入成交金额}+@负债融资买入成交金额#,{负债融资买入订单数量}={负债融资买入订单数量}+@负债融资买入订单数量#,{负债融资买入订单金额}={负债融资买入订单金额}+@负债融资买入订单金额#,{负债融券卖出成交数量}={负债融券卖出成交数量}+@负债融券卖出成交数量#,{负债融券卖出成交金额}={负债融券卖出成交金额}+@负债融券卖出成交金额#,{负债融券卖出订单数量}={负债融券卖出订单数量}+@负债融券卖出订单数量#,{负债融券卖出订单金额}={负债融券卖出订单金额}+@负债融券卖出订单金额#,{融资归还成交数量}={融资归还成交数量}+@融资归还成交数量#,{融资归还成交金额}={融资归还成交金额}+@融资归还成交金额#,{归还成交费用}={归还成交费用}+@归还成交费用#,{融券归还成交数量}={融券归还成交数量}+@融券归还成交数量#,{融券归还成交金额}={融券归还成交金额}+@融券归还成交金额#,{融券归还订单金额}={融券归还订单金额}+@融券归还订单金额#,{融券归还订单数量}={融券归还订单数量}+@融券归还订单数量#,{归还利息金额} = {归还利息金额} +@归还利息金额#][9][@资产账户编号#] */
                    set v_create_date = date_format(curdate(),'%Y%m%d');
                    set v_create_time = date_format(curtime(),'%H%i%s');
                    set v_update_date = v_create_date;
                    set v_update_time = v_create_time;
                    set v_update_times = 1;
                    insert into db_tdsecu.tb_tdseac_asac_busi_posi_debt (
                        create_date, create_time, update_date, 
                        update_time, update_times, init_date, co_no, 
                        pd_no, asset_acco_no, exch_no, stock_acco_no, 
                        stock_code, stock_code_no, stock_type, asset_type, 
                        invest_type, debt_type, debt_fina_buy_strike_qty, fina_return_strike_qty, 
                        debt_loan_sell_strike_qty, loan_return_strike_qty, debt_fina_buy_order_qty, fina_return_order_qty, 
                        debt_loan_sell_order_qty, loan_return_order_qty, debt_fina_buy_comm_qty, fina_return_comm_qty, 
                        debt_loan_sell_comm_qty, loan_return_comm_qty, debt_fina_buy_strike_amt, fina_return_strike_amt, 
                        debt_loan_sell_strike_amt, loan_return_strike_amt, debt_fina_buy_order_amt, fina_return_order_amt, 
                        debt_loan_sell_order_amt, loan_return_order_amt, debt_fina_buy_comm_amt, fina_return_comm_amt, 
                        debt_loan_sell_comm_amt, loan_return_comm_amt, debt_strike_fee, return_strike_fee, 
                        debt_interest, return_interest_amt) 
                    values(
                        v_create_date, v_create_time, v_update_date, 
                        v_update_time, v_update_times, v_init_date, v_co_no, 
                        v_pd_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
                        v_stock_code, v_stock_code_no, v_stock_type, v_asset_type, 
                        v_invest_type, v_debt_type, v_debt_fina_buy_strike_qty, v_fina_return_strike_qty, 
                        v_debt_loan_sell_strike_qty, v_loan_return_strike_qty, v_debt_fina_buy_order_qty, v_fina_return_order_qty, 
                        v_debt_loan_sell_order_qty, v_loan_return_order_qty, v_debt_fina_buy_comm_qty, v_fina_return_comm_qty, 
                        v_debt_loan_sell_comm_qty, v_loan_return_comm_qty, v_debt_fina_buy_strike_amt, v_fina_return_strike_amt, 
                        v_debt_loan_sell_strike_amt, v_loan_return_strike_amt, v_debt_fina_buy_order_amt, v_fina_return_order_amt, 
                        v_debt_loan_sell_order_amt, v_loan_return_order_amt, v_debt_fina_buy_comm_amt, v_fina_return_comm_amt, 
                        v_debt_loan_sell_comm_amt, v_loan_return_comm_amt, v_debt_strike_fee, v_return_strike_fee, 
                        v_debt_interest, v_return_interest_amt) 
                    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, debt_fina_buy_strike_qty=debt_fina_buy_strike_qty+v_debt_fina_buy_strike_qty,debt_fina_buy_strike_amt=debt_fina_buy_strike_amt+v_debt_fina_buy_strike_amt,debt_fina_buy_order_qty=debt_fina_buy_order_qty+v_debt_fina_buy_order_qty,debt_fina_buy_order_amt=debt_fina_buy_order_amt+v_debt_fina_buy_order_amt,debt_loan_sell_strike_qty=debt_loan_sell_strike_qty+v_debt_loan_sell_strike_qty,debt_loan_sell_strike_amt=debt_loan_sell_strike_amt+v_debt_loan_sell_strike_amt,debt_loan_sell_order_qty=debt_loan_sell_order_qty+v_debt_loan_sell_order_qty,debt_loan_sell_order_amt=debt_loan_sell_order_amt+v_debt_loan_sell_order_amt,fina_return_strike_qty=fina_return_strike_qty+v_fina_return_strike_qty,fina_return_strike_amt=fina_return_strike_amt+v_fina_return_strike_amt,return_strike_fee=return_strike_fee+v_return_strike_fee,loan_return_strike_qty=loan_return_strike_qty+v_loan_return_strike_qty,loan_return_strike_amt=loan_return_strike_amt+v_loan_return_strike_amt,loan_return_order_amt=loan_return_order_amt+v_loan_return_order_amt,loan_return_order_qty=loan_return_order_qty+v_loan_return_order_qty,return_interest_amt = return_interest_amt +v_return_interest_amt;
                    if v_error_code = "1" then
                                
                        SET v_error_code = "tdsecuA.2.121.9";
                        if v_mysql_message <> "" then
                            SET v_error_info = CONCAT(concat("资产账户编号=",v_asset_acco_no),"#",v_mysql_message);
                        else
                            SET v_error_info = concat("资产账户编号=",v_asset_acco_no);
                        end if;
                        leave label_pro;
                    end if;

                   #如果代码不包在串里，则添加进串内

                   /* if instr(@资产账户证券代码编号串#,concat(";",@证券代码编号#,";")) <= 0 then */
                   if instr(v_asac_stock_code_no_str,concat(";",v_stock_code_no,";")) <= 0 then

                       /* set @资产账户证券代码编号串# = concat(@资产账户证券代码编号串#,@证券代码编号#,";"); */
                       set v_asac_stock_code_no_str = concat(v_asac_stock_code_no_str,v_stock_code_no,";");
                   end if;
                    #如果找不到本票，那么每次都传证券代码为0去匹配其它票

                    /* if @临时_证券代码编号# = 0 then */
                    if v_tmp_stock_code_no = 0 then

                        /* set @证券代码编号# = 0; */
                        set v_stock_code_no = 0;
                    end if;
               end if;
            else

                /* set @错误编码#="0"; */
                set v_error_code="0";

                /* set @错误信息#=' '; */
                set v_error_info=' ';
                leave loop_label;
            end if;
        end loop;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_remain_strike_amt = v_remain_strike_amt;
    SET p_asac_detail_posi_id_str = v_asac_detail_posi_id_str;
    SET p_asac_stock_code_no_str = v_asac_stock_code_no_str;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_根据记录序号串查询资产账户负债明细结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacDebtJourListByIdstr;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacDebtJourListByIdstr(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_detail_posi_id_str varchar(1024),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_detail_posi_id_str varchar(1024);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_detail_posi_id_str = p_detail_posi_id_str;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_count = -1;

    
    label_pro:BEGIN
    

    /* set @指定行数# = -1; */
    set v_row_count = -1;

    /* [获取表记录][交易证券_账户_资产账户负债明细表][字段][(@明细持仓序号串# = ' ' or instr(@明细持仓序号串#,concat(";",{记录序号},";"))>0)order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_asac_debtjour where (v_detail_posi_id_str = ' ' or instr(v_detail_posi_id_str,concat(";",row_id,";"))>0)order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_asac_debtjour where (v_detail_posi_id_str = ' ' or instr(v_detail_posi_id_str,concat(";",row_id,";"))>0)order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_账户_查询资产账户负债明细结果集
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseac_QueryAsacDebtJourList;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseac_QueryAsacDebtJourList(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_asset_acco_no int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_pd_no_rights_str varchar(2048),
    IN p_debt_type int,
    IN p_stock_code_no int,
    IN p_order_dir int,
    IN p_exch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_asset_acco_no int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_pd_no_rights_str varchar(2048);
    declare v_debt_type int;
    declare v_stock_code_no int;
    declare v_order_dir int;
    declare v_exch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_debt_type = p_debt_type;
    SET v_stock_code_no = p_stock_code_no;
    SET v_order_dir = p_order_dir;
    SET v_exch_no = p_exch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][交易证券_账户_资产账户负债明细表][字段][{机构编号} = @机构编号# and (@产品编号# = 0 or {产品编号} = @产品编号#)   and (@负债类型# = 0 or {负债类型} = @负债类型#) and (@证券代码编号# = 0 or {证券代码编号} = @证券代码编号#) and (@订单方向# =0 or {订单方向} = @订单方向#) and (@市场编号# = 0 or {市场编号} = @市场编号#) and (@产品编号权限串# = ' ' or instr(@产品编号权限串#,concat(";",{产品编号},";"))>0)  and  {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_asac_debtjour where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no)   and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no) and (v_order_dir =0 or order_dir = v_order_dir) and (v_exch_no = 0 or exch_no = v_exch_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0)  and  row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, init_date, 
        opor_no, co_no, pd_no, asset_acco_no, 
        exch_no, stock_acco_no, stock_code, stock_code_no, 
        stock_type, asset_type, debt_type, strike_qty, 
        strike_amt, strike_fee, debt_order_no, report_no, 
        order_date, order_time, order_dir, order_price, 
        order_qty, debt_amt, debt_qty, debt_fee, 
        debt_interest, intrst_base_amt, debt_return_amt, debt_return_qty, 
        return_interest_amt, debt_status, remark_info from db_tdsecu.tb_tdseac_asac_debtjour where co_no = v_co_no and (v_pd_no = 0 or pd_no = v_pd_no)   and (v_debt_type = 0 or debt_type = v_debt_type) and (v_stock_code_no = 0 or stock_code_no = v_stock_code_no) and (v_order_dir =0 or order_dir = v_order_dir) and (v_exch_no = 0 or exch_no = v_exch_no) and (v_pd_no_rights_str = ' ' or instr(v_pd_no_rights_str,concat(";",pd_no,";"))>0)  and  row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


