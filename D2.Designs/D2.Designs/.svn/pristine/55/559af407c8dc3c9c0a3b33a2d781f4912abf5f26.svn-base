DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_撤销更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CancelUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CancelUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_comm_cancel_qty decimal(18,2),
    IN p_wtdraw_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_status varchar(2),
    OUT p_comm_date int,
    OUT p_comm_batch_no int,
    OUT p_comm_executor int,
    OUT p_comm_oper_way varchar(2),
    OUT p_comm_dir int,
    OUT p_comm_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_comm_amt decimal(18,4);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_tmp_wtdraw_qty decimal(18,2);
    declare v_occur_qty decimal(18,2);
    declare v_calc_dir int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_dir = 0;
    SET v_comm_amt = 0;
    SET v_tmp_comm_cancel_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_tmp_wtdraw_qty = 0;
    SET v_occur_qty = 0;
    SET v_calc_dir = 1;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_指令撤销数量#=@指令撤销数量#; */
    set v_tmp_comm_cancel_qty=v_comm_cancel_qty;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.1.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #为便于下述判断，指令撤销数量加总为合计指令撤销数量，更新前重置回来

    /* set @指令待撤销数量# = 0; */
    set v_comm_await_cancel_qty = 0;

    /* set @临时_撤单数量# = 0; */
    set v_tmp_wtdraw_qty = 0;

    /* set @指令撤销数量#=@指令撤销数量# + @临时_指令撤销数量#; */
    set v_comm_cancel_qty=v_comm_cancel_qty + v_tmp_comm_cancel_qty;

    /* if @指令状态# = 《指令状态-待撤销》 or @指令状态# = 《指令状态-部分撤销》 or @指令状态# = 《指令状态-全部撤销》 then */
    if v_comm_status = "4" or v_comm_status = "5" or v_comm_status = "6" then

        /* set @指令撤销数量# = @指令撤销数量# + @临时_指令撤销数量# + @撤单数量#; */
        set v_comm_cancel_qty = v_comm_cancel_qty + v_tmp_comm_cancel_qty + v_wtdraw_qty;

        /* set @临时_撤单数量# = @撤单数量#; */
        set v_tmp_wtdraw_qty = v_wtdraw_qty;

        /* set @指令待撤销数量# = 0 - @撤单数量#; */
        set v_comm_await_cancel_qty = 0 - v_wtdraw_qty;
    end if;

    /* set @订单数量#=@订单数量#-@撤单数量#; */
    set v_order_qty=v_order_qty-v_wtdraw_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.1.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* set @变动数量# = -1 * @撤单数量#; */
    set v_occur_qty = -1 * v_wtdraw_qty;

    /* set @指令冻结数量# = 0; */
    set v_comm_frozen_qty = 0;

    /* set @指令冻结金额# = 0; */
    set v_comm_frozen_amt = 0;

    /* if @指令状态# <> 《指令状态-待撤销》 and @指令状态# <> 《指令状态-部分撤销》 and @指令状态# <> 《指令状态-全部撤销》 then */
    if v_comm_status <> "4" and v_comm_status <> "5" and v_comm_status <> "6" then

        /* set @指令数量# = @撤单数量#; */
        set v_comm_qty = v_wtdraw_qty;

        /* set @计算方向# = 《计算方向-加上》; */
        set v_calc_dir = 1;

        /* if @指令方向# = 《指令方向-融资买入》  or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-买券还券》 or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》 then */
        if v_comm_dir = 5  or v_comm_dir = 6 or v_comm_dir = 8 or v_comm_dir = 7 or v_comm_dir = 14 or v_comm_dir = 15 then

            /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_comm_qty,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_calc_dir,
                v_comm_amt,
                v_error_code,
                v_error_info,
                v_comm_frozen_amt,
                v_comm_frozen_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.1.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        else

            /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_comm_qty,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_calc_dir,
                v_error_code,
                v_error_info,
                v_comm_frozen_amt,
                v_comm_frozen_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.1.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;
    end if;

    /* [更新表记录][交易证券_指令_指令表][{订单数量}={订单数量} + @变动数量#, {指令冻结金额}={指令冻结金额} + @指令冻结金额# , {指令冻结数量} = {指令冻结数量} + @指令冻结数量#,{指令撤销数量}=@指令撤销数量#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=order_qty + v_occur_qty, comm_frozen_amt=comm_frozen_amt + v_comm_frozen_amt , comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty,comm_cancel_qty=v_comm_cancel_qty,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.1.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令撤销数量# = @临时_指令撤销数量# + @临时_撤单数量#; */
    set v_comm_cancel_qty = v_tmp_comm_cancel_qty + v_tmp_wtdraw_qty;

    /* 调用【原子_交易证券_指令_撤销更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CancelUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_wtdraw_qty,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.1.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_撤销更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_status = v_comm_status;
    SET p_comm_date = v_comm_date;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_amt = v_comm_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_成交更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_StrikeUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_StrikeUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_sell_ref_rate decimal(18,12),
    IN p_buy_ref_rate decimal(18,12),
    IN p_exch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_date int,
    OUT p_comm_batch_no int,
    OUT p_comm_executor int,
    OUT p_comm_qty decimal(18,2),
    OUT p_comm_oper_way varchar(2),
    OUT p_comm_strike_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_sell_ref_rate decimal(18,12);
    declare v_buy_ref_rate decimal(18,12);
    declare v_exch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_oper_way varchar(2);
    declare v_comm_strike_qty decimal(18,2);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_tmp_row_id bigint;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_exch_no = p_exch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_comm_qty = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_strike_qty = 0;
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_tmp_row_id = 0;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_成交数量#=@成交数量#; */
    set v_tmp_strike_qty=v_strike_qty;

    /* set @临时_成交金额#=@成交金额#; */
    set v_tmp_strike_amt=v_strike_amt;
    #防止并发，加锁获取

    /* [不报错锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;


    /* set @临时_记录序号# = @记录序号#; */
    set v_tmp_row_id = v_row_id;

    /* if @临时_记录序号#=0 then */
    if v_tmp_row_id=0 then

        /* [锁定获取表记录变量][历史_交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][4][@指令序号#] */
        select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_acco_no, 
            stock_code_no, stock_code, target_code_no, trade_code_no, 
            stock_type, asset_type, comm_date, comm_time, 
            comm_batch_no, comm_opor, comm_executor, comm_dir, 
            comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
            order_qty, comm_cancel_qty, strike_amt, strike_qty, 
            comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
            impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
            capit_reback_days, posi_reback_days, strike_status, comm_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
            comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
            basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
            strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
            target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
            asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
            read_flag into v_row_id, v_create_date, v_create_time, 
            v_update_date, v_update_time, v_update_times, v_opor_co_no, 
            v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
            v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
            v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
            v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
            v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
            v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
            v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
            v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
            v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
            v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
            v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
            v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
            v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
            v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
            v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
            v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
            v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
            v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
            v_read_flag from db_tdsecu_his.tb_tdseap_command_his where row_id=v_comm_id limit 1 for update;
        if FOUND_ROWS() = 0 then
                    
            SET v_error_code = "tdsecuA.3.2.4";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令序号=",v_comm_id);
            end if;
            leave label_pro;
        end if;

    end if;

    /* set @成交数量# = @成交数量# + @临时_成交数量#; */
    set v_strike_qty = v_strike_qty + v_tmp_strike_qty;

    /* set @成交金额# = @成交金额# + @临时_成交金额#; */
    set v_strike_amt = v_strike_amt + v_tmp_strike_amt;

    /* set @指令成交数量#=@成交数量#; */
    set v_comm_strike_qty=v_strike_qty;
    #获取指令成交状态

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.2.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令状态# = 《指令状态-待撤销》  and @指令数量# = @成交数量# then */
    if v_comm_status = "4"  and v_comm_qty = v_strike_qty then

        /* set @指令状态# = 《指令状态-全部执行》; */
        set v_comm_status = "3";
    end if;
    #增加指令为暂停状态时的更改。Modify by wjp 20180925

    /* if  @指令状态# = 《指令状态-暂停执行》 and @成交状态# = 《成交状态-已成》  then */
    if  v_comm_status = "7" and v_strike_status = "3"  then

        /* set @指令状态# = 《指令状态-全部执行》; */
        set v_comm_status = "3";
    end if;

    /* if @指令数量# = @成交数量# then */
    if v_comm_qty = v_strike_qty then

        /* set @指令完成标志# = 《指令完成标志-已完成》; */
        set v_comm_comple_flag = 2;
    else

        /* set @指令完成标志# = 《指令完成标志-未完成》; */
        set v_comm_comple_flag = 1;
    end if;

    /* if  @临时_记录序号#<>0 then */
    if  v_tmp_row_id<>0 then

        /* [更新表记录][交易证券_指令_指令表][{成交数量}=@成交数量#, {成交金额}=@成交金额#,{成交状态}=@成交状态#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令完成标志} = @指令完成标志# ][{记录序号}=@指令序号#][2][@指令序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=v_strike_qty, strike_amt=v_strike_amt,strike_status=v_strike_status,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,comm_comple_flag = v_comm_comple_flag  where row_id=v_comm_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.2.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令序号=",v_comm_id);
            end if;
            leave label_pro;
        end if;

    else

        /* [更新表记录][历史_交易证券_指令_指令表][{成交数量}=@成交数量#, {成交金额}=@成交金额#,{成交状态}=@成交状态#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令完成标志} = @指令完成标志# ][{记录序号}=@指令序号#][2][@指令序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu_his.tb_tdseap_command_his set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=v_strike_qty, strike_amt=v_strike_amt,strike_status=v_strike_status,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,comm_comple_flag = v_comm_comple_flag  where row_id=v_comm_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.2.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令序号=",v_comm_id);
            end if;
            leave label_pro;
        end if;

    end if;

    /* set @成交数量#=@临时_成交数量#; */
    set v_strike_qty=v_tmp_strike_qty;

    /* set @成交金额#=@临时_成交金额#; */
    set v_strike_amt=v_tmp_strike_amt;

    /* 调用【原子_交易证券_指令_成交更新汇总指令】*/
    call db_tdsecu.pra_tdseap_StrikeUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_strike_qty,
        v_strike_amt,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_sell_ref_rate,
        v_buy_ref_rate,
        v_exch_no,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.2.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_成交更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_date = v_comm_date;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_qty = v_comm_qty;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_comm_strike_qty = v_comm_strike_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_下单更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_OrderUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_OrderUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_comm_frozen_amt decimal(18,4),
    IN p_comm_frozen_qty decimal(18,2),
    IN p_order_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_exter_comm_flag int,
    OUT p_comm_comple_date int,
    OUT p_comm_comple_time int,
    OUT p_comm_status varchar(2),
    OUT p_strike_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_exter_comm_flag int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_status varchar(2);
    declare v_strike_status varchar(2);
    declare v_tmp_order_qty decimal(18,2);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_qty decimal(18,2);
    declare v_comm_oper_way varchar(2);
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_comm_frozen_qty = p_comm_frozen_qty;
    SET v_order_qty = p_order_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_status = "0";
    SET v_strike_status = "0";
    SET v_tmp_order_qty = 0;
    SET v_co_no = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_qty = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_订单数量#=@订单数量#; */
    set v_tmp_order_qty=v_order_qty;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][{机构编号},{指令日期},{记录序号},{指令批号},{指令数量},{订单数量},{指令撤销数量},{成交数量},{指令实际限价},{体外指令标志},{指令操作方式},{指令执行人},{指令方向}][@机构编号#,@指令日期#,@指令序号#,@指令批号#,@指令数量#,@订单数量#,@指令撤销数量#,@成交数量#,@指令实际限价#,@体外指令标志#,@指令操作方式#,@指令执行人#,@指令方向#][{记录序号}=@指令序号#][1][@指令序号#] */
    select co_no,comm_date,row_id,comm_batch_no,comm_qty,order_qty,comm_cancel_qty,strike_qty,limit_actual_price,exter_comm_flag,comm_oper_way,comm_executor,comm_dir into v_co_no,v_comm_date,v_comm_id,v_comm_batch_no,v_comm_qty,v_order_qty,v_comm_cancel_qty,v_strike_qty,v_limit_actual_price,v_exter_comm_flag,v_comm_oper_way,v_comm_executor,v_comm_dir from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.3.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #判断是否超过指令数量

    /* [检查报错返回][@临时_订单数量# >@指令数量# - @订单数量# - @指令撤销数量#][630][@临时_订单数量#,@指令数量#,@订单数量#,@指令撤销数量#] */
    if v_tmp_order_qty >v_comm_qty - v_order_qty - v_comm_cancel_qty then
        
        SET v_error_code = "tdsecuA.3.3.630";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量#=@临时_订单数量#+@订单数量#; */
    set v_order_qty=v_tmp_order_qty+v_order_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.3.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    #重置订单数量为变动值

    /* set @订单数量#=@临时_订单数量#; */
    set v_order_qty=v_tmp_order_qty;

    /* [更新表记录][交易证券_指令_指令表][{订单数量}={订单数量} + @订单数量#, {指令冻结金额} ={指令冻结金额} + @指令冻结金额#, {指令冻结数量} ={指令冻结数量} + @指令冻结数量#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间# ][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=order_qty + v_order_qty, comm_frozen_amt =comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty =comm_frozen_qty + v_comm_frozen_qty,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time  where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.3.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_指令_下单更新汇总指令】*/
    call db_tdsecu.pra_tdseap_OrderUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_comm_comple_date,
        v_comm_comple_time,
        v_order_qty,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.3.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_下单更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_comm_comple_date = v_comm_comple_date;
    SET p_comm_comple_time = v_comm_comple_time;
    SET p_comm_status = v_comm_status;
    SET p_strike_status = v_strike_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_检查指令业务合法性
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckCommBusi;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckCommBusi(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_comm_dir int,
    IN p_comm_qty decimal(18,2),
    IN p_comm_limit_price decimal(16,9),
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_up_limit_price decimal(16,9),
    IN p_down_limit_price decimal(16,9),
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_subscription_trade_mark int,
    IN p_purchase_trade_mark int,
    IN p_target_purchase_trade_mark int,
    IN p_rede_trade_mark int,
    IN p_first_minimum_amt decimal(18,4),
    IN p_minimum_purchase_amt decimal(18,4),
    IN p_minimum_subscription_amt decimal(18,4),
    IN p_minimum_rede_share decimal(18,2),
    IN p_minimum_holding_share decimal(18,2),
    IN p_fund_manager varchar(64),
    IN p_target_fund_manager varchar(64),
    IN p_charging_method int,
    IN p_target_charging_method int,
    IN p_comm_frozen_amt decimal(18,4),
    IN p_record_count int,
    IN p_exgp_avail_qty decimal(18,2),
    IN p_posi_reback_days int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_comm_dir int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_up_limit_price decimal(16,9);
    declare v_down_limit_price decimal(16,9);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_subscription_trade_mark int;
    declare v_purchase_trade_mark int;
    declare v_target_purchase_trade_mark int;
    declare v_rede_trade_mark int;
    declare v_first_minimum_amt decimal(18,4);
    declare v_minimum_purchase_amt decimal(18,4);
    declare v_minimum_subscription_amt decimal(18,4);
    declare v_minimum_rede_share decimal(18,2);
    declare v_minimum_holding_share decimal(18,2);
    declare v_fund_manager varchar(64);
    declare v_target_fund_manager varchar(64);
    declare v_charging_method int;
    declare v_target_charging_method int;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_record_count int;
    declare v_exgp_avail_qty decimal(18,2);
    declare v_posi_reback_days int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_posi_record_count int;
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_occur_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_up_limit_price = p_up_limit_price;
    SET v_down_limit_price = p_down_limit_price;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_subscription_trade_mark = p_subscription_trade_mark;
    SET v_purchase_trade_mark = p_purchase_trade_mark;
    SET v_target_purchase_trade_mark = p_target_purchase_trade_mark;
    SET v_rede_trade_mark = p_rede_trade_mark;
    SET v_first_minimum_amt = p_first_minimum_amt;
    SET v_minimum_purchase_amt = p_minimum_purchase_amt;
    SET v_minimum_subscription_amt = p_minimum_subscription_amt;
    SET v_minimum_rede_share = p_minimum_rede_share;
    SET v_minimum_holding_share = p_minimum_holding_share;
    SET v_fund_manager = p_fund_manager;
    SET v_target_fund_manager = p_target_fund_manager;
    SET v_charging_method = p_charging_method;
    SET v_target_charging_method = p_target_charging_method;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_record_count = p_record_count;
    SET v_exgp_avail_qty = p_exgp_avail_qty;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_posi_record_count = 0;
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_occur_qty = 0;

    
    label_pro:BEGIN
    

    /* if @指令方向#=《指令方向-基金申购》 then */
    if v_comm_dir=9 then
        #基金申购的判断:申购交易标志、最低申购金额、首次最低金额

        /* [检查报错返回][@申购交易标志#=《申购交易标志-否》][776][@申购交易标志#] */
        if v_purchase_trade_mark=0 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("申购交易标志=",v_purchase_trade_mark),"#",v_mysql_message);
            else
                SET v_error_info = concat("申购交易标志=",v_purchase_trade_mark);
            end if;
            leave label_pro;
        end if;


        /* [检查报错返回][@指令冻结金额#<@最低申购金额# and @最低申购金额#>0][776][@指令冻结金额#,@最低申购金额#] */
        if v_comm_frozen_amt<v_minimum_purchase_amt and v_minimum_purchase_amt>0 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令冻结金额=",v_comm_frozen_amt,",","最低申购金额=",v_minimum_purchase_amt),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令冻结金额=",v_comm_frozen_amt,",","最低申购金额=",v_minimum_purchase_amt);
            end if;
            leave label_pro;
        end if;

        #如果产品库和交易库下持仓数量为0，则判断为是首次申购

        /* [获取表记录数量][交易证券_账户_资产账户业务持仓表][@持仓记录个数#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#] */
        select count(1) into v_posi_record_count from db_tdsecu.tb_tdseac_asac_busi_posi where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;


        /* if @持仓记录个数#=0 and @记录个数#=0 then */
        if v_posi_record_count=0 and v_record_count=0 then

            /* [检查报错返回][@指令冻结金额#<@首次最低金额# and @首次最低金额#>0][776][@指令冻结金额#,@首次最低金额#] */
            if v_comm_frozen_amt<v_first_minimum_amt and v_first_minimum_amt>0 then
                
                SET v_error_code = "tdsecuA.3.4.776";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令冻结金额=",v_comm_frozen_amt,",","首次最低金额=",v_first_minimum_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令冻结金额=",v_comm_frozen_amt,",","首次最低金额=",v_first_minimum_amt);
                end if;
                leave label_pro;
            end if;

        end if;
    end if;

    /* if @指令方向#=《指令方向-基金赎回》 then */
    if v_comm_dir=10 then
        #基金申购的判断:赎回交易标志、最低赎回份额、最低持有份额((赎回的时候，小于该值，必须一次性赎回。最低持有份额就是帐面上最少要有多少份额。例如：你有1200份，而最低持有份额为1000份的话，你要么全部赎回，要么一份也不赎。你不能赎回1000份，留下200份（因为200份低于最低持有份额))

        /* [检查报错返回][@赎回交易标志#=《赎回交易标志-否》][776][@赎回交易标志#] */
        if v_rede_trade_mark=0 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("赎回交易标志=",v_rede_trade_mark),"#",v_mysql_message);
            else
                SET v_error_info = concat("赎回交易标志=",v_rede_trade_mark);
            end if;
            leave label_pro;
        end if;


        /* [检查报错返回][@指令数量#<@最低赎回份额# and @最低赎回份额#>0][776][@指令数量#,@最低赎回份额#] */
        if v_comm_qty<v_minimum_rede_share and v_minimum_rede_share>0 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","最低赎回份额=",v_minimum_rede_share),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令数量=",v_comm_qty,",","最低赎回份额=",v_minimum_rede_share);
            end if;
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_no,
            v_stock_acco_no,
            v_stock_code_no,
            v_posi_reback_days,
            v_error_code,
            v_error_info,
            v_comm_avail_qty,
            v_trade_avail_qty,
            v_static_avail_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.4.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [检查报错返回][@交易组可用数量#+@指令端可用数量#-@指令数量#<@最低持有份额# and @最低持有份额#>0][776][@交易组可用数量#+@指令端可用数量#,@指令数量#,@最低持有份额#] */
        if v_exgp_avail_qty+v_comm_avail_qty-v_comm_qty<v_minimum_holding_share and v_minimum_holding_share>0 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组可用数量+指令端可用数量=",v_exgp_avail_qty+v_comm_avail_qty,",","指令数量=",v_comm_qty,",","最低持有份额=",v_minimum_holding_share),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组可用数量+指令端可用数量=",v_exgp_avail_qty+v_comm_avail_qty,",","指令数量=",v_comm_qty,",","最低持有份额=",v_minimum_holding_share);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @指令方向# = 《指令方向-基金转换》 then */
    if v_comm_dir = 12 then
        #基金转换只能在同一基金管理公司的同一基金账户下进行

        /* [检查报错返回][@基金管理人# <>@目标基金管理人#][776][@基金管理人#,@目标基金管理人#] */
        if v_fund_manager <>v_target_fund_manager then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("基金管理人=",v_fund_manager,",","目标基金管理人=",v_target_fund_manager),"#",v_mysql_message);
            else
                SET v_error_info = concat("基金管理人=",v_fund_manager,",","目标基金管理人=",v_target_fund_manager);
            end if;
            leave label_pro;
        end if;

        #在发生基金转换业务时，转出基金和转入基金必须在“交易”状态下，也就是说，转出基金必须为允许赎回状态，转入基金必须为允许申购状态

        /* [检查报错返回][@赎回交易标志# <>《赎回交易标志-是》 or @目标申购交易标志# <> 《申购交易标志-是》][776][@赎回交易标志#,@目标申购交易标志#] */
        if v_rede_trade_mark <>1 or v_target_purchase_trade_mark <> 1 then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("赎回交易标志=",v_rede_trade_mark,",","目标申购交易标志=",v_target_purchase_trade_mark),"#",v_mysql_message);
            else
                SET v_error_info = concat("赎回交易标志=",v_rede_trade_mark,",","目标申购交易标志=",v_target_purchase_trade_mark);
            end if;
            leave label_pro;
        end if;

        #基金转换通常只允许在同为前端收费或者同为后端收费的基金之间进行，不允许将前端收费基金转换为后端收费基金，或者将后端收费基金转换为前端收费基金

        /* [检查报错返回][@收费方式# <>@目标收费方式#][776][@收费方式#,@目标收费方式#] */
        if v_charging_method <>v_target_charging_method then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("收费方式=",v_charging_method,",","目标收费方式=",v_target_charging_method),"#",v_mysql_message);
            else
                SET v_error_info = concat("收费方式=",v_charging_method,",","目标收费方式=",v_target_charging_method);
            end if;
            leave label_pro;
        end if;

        #各基金管理公司一般设置了最低基金转出份额，大部分为1000份

        /* [检查报错返回][@最低赎回份额#  < @变动数量#][776][@最低赎回份额#] */
        if v_minimum_rede_share  < v_occur_qty then
            
            SET v_error_code = "tdsecuA.3.4.776";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("最低赎回份额=",v_minimum_rede_share),"#",v_mysql_message);
            else
                SET v_error_info = concat("最低赎回份额=",v_minimum_rede_share);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验新增指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckAddComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckAddComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_exgp_avail_amt decimal(18,4),
    IN p_exgp_T_hk_buy_total_amt decimal(18,4),
    IN p_exgp_T_hk_sell_total_amt decimal(18,4),
    IN p_exgp_T1_hk_buy_total_amt decimal(18,4),
    IN p_exgp_T1_hk_sell_total_amt decimal(18,4),
    IN p_asac_avail_amt decimal(18,4),
    IN p_asac_T_hk_buy_total_amt decimal(18,4),
    IN p_asac_T_hk_sell_total_amt decimal(18,4),
    IN p_asac_T1_hk_buy_total_amt decimal(18,4),
    IN p_asac_T1_hk_sell_total_amt decimal(18,4),
    IN p_exgp_avail_qty decimal(18,2),
    IN p_exgp_target_code_avail_qty decimal(18,2),
    IN p_exgp_trade_code_avail_qty decimal(18,2),
    IN p_asac_avail_qty decimal(18,2),
    IN p_asac_target_code_avail_qty decimal(18,2),
    IN p_asac_trade_code_avail_qty decimal(18,2),
    IN p_exgp_busi_config_str varchar(64),
    IN p_asac_busi_config_str varchar(64),
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    IN p_comm_dir int,
    IN p_comm_qty decimal(18,2),
    IN p_comm_frozen_amt decimal(18,4),
    IN p_impawn_ratio decimal(18,12),
    IN p_stock_type int,
    IN p_subscription_trade_mark int,
    IN p_purchase_trade_mark int,
    IN p_rede_trade_mark int,
    IN p_first_minimum_amt decimal(18,4),
    IN p_minimum_purchase_amt decimal(18,4),
    IN p_minimum_subscription_amt decimal(18,4),
    IN p_minimum_rede_share decimal(18,2),
    IN p_minimum_holding_share decimal(18,2),
    IN p_record_count int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_exgp_avail_amt decimal(18,4);
    declare v_exgp_T_hk_buy_total_amt decimal(18,4);
    declare v_exgp_T_hk_sell_total_amt decimal(18,4);
    declare v_exgp_T1_hk_buy_total_amt decimal(18,4);
    declare v_exgp_T1_hk_sell_total_amt decimal(18,4);
    declare v_asac_avail_amt decimal(18,4);
    declare v_asac_T_hk_buy_total_amt decimal(18,4);
    declare v_asac_T_hk_sell_total_amt decimal(18,4);
    declare v_asac_T1_hk_buy_total_amt decimal(18,4);
    declare v_asac_T1_hk_sell_total_amt decimal(18,4);
    declare v_exgp_avail_qty decimal(18,2);
    declare v_exgp_target_code_avail_qty decimal(18,2);
    declare v_exgp_trade_code_avail_qty decimal(18,2);
    declare v_asac_avail_qty decimal(18,2);
    declare v_asac_target_code_avail_qty decimal(18,2);
    declare v_asac_trade_code_avail_qty decimal(18,2);
    declare v_exgp_busi_config_str varchar(64);
    declare v_asac_busi_config_str varchar(64);
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_comm_dir int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_impawn_ratio decimal(18,12);
    declare v_stock_type int;
    declare v_subscription_trade_mark int;
    declare v_purchase_trade_mark int;
    declare v_rede_trade_mark int;
    declare v_first_minimum_amt decimal(18,4);
    declare v_minimum_purchase_amt decimal(18,4);
    declare v_minimum_subscription_amt decimal(18,4);
    declare v_minimum_rede_share decimal(18,2);
    declare v_minimum_holding_share decimal(18,2);
    declare v_record_count int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_hk_cash_avail_date_type int;
    declare v_posi_record_count int;
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_avail_amt decimal(18,4);
    declare v_all_fee decimal(18,4);
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_avail_qty decimal(18,2);
    declare v_curr_qty decimal(18,2);
    declare v_comm_reback_avail_qty decimal(18,2);
    declare v_trade_reback_avail_qty decimal(18,2);
    declare v_target_code_avail_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_exgp_avail_amt = p_exgp_avail_amt;
    SET v_exgp_T_hk_buy_total_amt = p_exgp_T_hk_buy_total_amt;
    SET v_exgp_T_hk_sell_total_amt = p_exgp_T_hk_sell_total_amt;
    SET v_exgp_T1_hk_buy_total_amt = p_exgp_T1_hk_buy_total_amt;
    SET v_exgp_T1_hk_sell_total_amt = p_exgp_T1_hk_sell_total_amt;
    SET v_asac_avail_amt = p_asac_avail_amt;
    SET v_asac_T_hk_buy_total_amt = p_asac_T_hk_buy_total_amt;
    SET v_asac_T_hk_sell_total_amt = p_asac_T_hk_sell_total_amt;
    SET v_asac_T1_hk_buy_total_amt = p_asac_T1_hk_buy_total_amt;
    SET v_asac_T1_hk_sell_total_amt = p_asac_T1_hk_sell_total_amt;
    SET v_exgp_avail_qty = p_exgp_avail_qty;
    SET v_exgp_target_code_avail_qty = p_exgp_target_code_avail_qty;
    SET v_exgp_trade_code_avail_qty = p_exgp_trade_code_avail_qty;
    SET v_asac_avail_qty = p_asac_avail_qty;
    SET v_asac_target_code_avail_qty = p_asac_target_code_avail_qty;
    SET v_asac_trade_code_avail_qty = p_asac_trade_code_avail_qty;
    SET v_exgp_busi_config_str = p_exgp_busi_config_str;
    SET v_asac_busi_config_str = p_asac_busi_config_str;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_stock_type = p_stock_type;
    SET v_subscription_trade_mark = p_subscription_trade_mark;
    SET v_purchase_trade_mark = p_purchase_trade_mark;
    SET v_rede_trade_mark = p_rede_trade_mark;
    SET v_first_minimum_amt = p_first_minimum_amt;
    SET v_minimum_purchase_amt = p_minimum_purchase_amt;
    SET v_minimum_subscription_amt = p_minimum_subscription_amt;
    SET v_minimum_rede_share = p_minimum_rede_share;
    SET v_minimum_holding_share = p_minimum_holding_share;
    SET v_record_count = p_record_count;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_hk_cash_avail_date_type = 0;
    SET v_posi_record_count = 0;
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_avail_amt = 0;
    SET v_all_fee = 0;
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_avail_qty = 0;
    SET v_curr_qty = 0;
    SET v_comm_reback_avail_qty = 0;
    SET v_trade_reback_avail_qty = 0;
    SET v_target_code_avail_qty = 0;

    
    label_pro:BEGIN
    

    /* if @指令方向# = 《指令方向-新股申购》 or @指令方向#=《指令方向-配售申购》 then */
    if v_comm_dir = 11 or v_comm_dir=23 then

        /* [记录已存在][交易证券_指令_指令表][@记录个数#][{股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号# and {指令数量}  <> {指令撤销数量}][729][@资产账户编号#,@股东代码编号#,@证券代码编号#] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command where stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no and comm_qty  <> comm_cancel_qty limit 1;
        if v_record_count > 0 then
                    
            SET v_error_code = "tdsecuA.3.5.729";
            SET v_error_info = concat("资产账户编号=",v_asset_acco_no,",","股东代码编号=",v_stock_acco_no,",","证券代码编号=",v_stock_code_no);
            leave label_pro;
        end if;

    end if;

    /* set @港股通资金可用日期# =cast(substring(@资产账户业务控制配置串#,21,1) as SIGNED); */
    set v_hk_cash_avail_date_type =cast(substring(v_asac_busi_config_str,21,1) as SIGNED);

    /* if @指令方向#=《指令方向-买入》 or  @指令方向#=《指令方向-基金申购》 then */
    if v_comm_dir=1 or  v_comm_dir=9 then

        /* if @指令方向#=《指令方向-基金申购》 then */
        if v_comm_dir=9 then
            #基金申购的判断:申购交易标志、最低申购金额、首次最低金额

            /* [检查报错返回][@申购交易标志#=《申购交易标志-否》][776][@申购交易标志#] */
            if v_purchase_trade_mark=0 then
                
                SET v_error_code = "tdsecuA.3.5.776";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("申购交易标志=",v_purchase_trade_mark),"#",v_mysql_message);
                else
                    SET v_error_info = concat("申购交易标志=",v_purchase_trade_mark);
                end if;
                leave label_pro;
            end if;


            /* [检查报错返回][@指令冻结金额#<@最低申购金额#][776][@指令冻结金额#,@最低申购金额#] */
            if v_comm_frozen_amt<v_minimum_purchase_amt then
                
                SET v_error_code = "tdsecuA.3.5.776";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令冻结金额=",v_comm_frozen_amt,",","最低申购金额=",v_minimum_purchase_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令冻结金额=",v_comm_frozen_amt,",","最低申购金额=",v_minimum_purchase_amt);
                end if;
                leave label_pro;
            end if;

            #如果产品库和交易库下持仓数量为0，则判断为是首次申购

            /* [获取表记录数量][交易证券_账户_资产账户业务持仓表][@持仓记录个数#][{资产账户编号} = @资产账户编号# and {股东代码编号} = @股东代码编号# and {证券代码编号} = @证券代码编号#] */
            select count(1) into v_posi_record_count from db_tdsecu.tb_tdseac_asac_busi_posi where asset_acco_no = v_asset_acco_no and stock_acco_no = v_stock_acco_no and stock_code_no = v_stock_code_no;


            /* if @持仓记录个数#=0 and @记录个数#=0 then */
            if v_posi_record_count=0 and v_record_count=0 then

                /* [检查报错返回][@指令冻结金额#<@首次最低金额#][776][@指令冻结金额#,@首次最低金额#] */
                if v_comm_frozen_amt<v_first_minimum_amt then
                    
                    SET v_error_code = "tdsecuA.3.5.776";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("指令冻结金额=",v_comm_frozen_amt,",","首次最低金额=",v_first_minimum_amt),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("指令冻结金额=",v_comm_frozen_amt,",","首次最低金额=",v_first_minimum_amt);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.5.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @交易组可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#)  * @卖出参考汇率#,2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee)  * v_sell_ref_rate,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.5.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][604][@可用金额#,@指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.604";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,1,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#) * @卖出参考汇率#,2) >@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee) * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.610";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;
    end if;

    /* if @指令方向#=《指令方向-卖出》 or @指令方向#=《指令方向-基金赎回》 then */
    if v_comm_dir=2 or v_comm_dir=10 then

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@交易组可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_exgp_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][605][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;


            /* if @指令方向#=《指令方向-基金赎回》 then */
            if v_comm_dir=10 then
                #基金申购的判断:赎回交易标志、最低赎回份额、最低持有份额((赎回的时候，小于该值，必须一次性赎回。最低持有份额就是帐面上最少要有多少份额。例如：你有1200份，而最低持有份额为1000份的话，你要么全部赎回，要么一份也不赎。你不能赎回1000份，留下200份（因为200份低于最低持有份额))

                /* [检查报错返回][@赎回交易标志#=《赎回交易标志-否》][776][@赎回交易标志#] */
                if v_rede_trade_mark=0 then
                    
                    SET v_error_code = "tdsecuA.3.5.776";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("赎回交易标志=",v_rede_trade_mark),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("赎回交易标志=",v_rede_trade_mark);
                    end if;
                    leave label_pro;
                end if;


                /* [检查报错返回][@指令数量#<@最低赎回份额#][776][@指令数量#,@最低赎回份额#] */
                if v_comm_qty<v_minimum_rede_share then
                    
                    SET v_error_code = "tdsecuA.3.5.776";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","最低赎回份额=",v_minimum_rede_share),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("指令数量=",v_comm_qty,",","最低赎回份额=",v_minimum_rede_share);
                    end if;
                    leave label_pro;
                end if;


                /* [检查报错返回][@可用数量#-@指令数量#<@最低持有份额#][776][@可用数量#,@指令数量#,@最低持有份额#] */
                if v_avail_qty-v_comm_qty<v_minimum_holding_share then
                    
                    SET v_error_code = "tdsecuA.3.5.776";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty,",","最低持有份额=",v_minimum_holding_share),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty,",","最低持有份额=",v_minimum_holding_share);
                    end if;
                    leave label_pro;
                end if;

            end if;
            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@交易组可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_exgp_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][611][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@资产账户可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_asac_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][606][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@资产账户可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_asac_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][612][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;

    /* if @指令方向#=《指令方向-质押提交》 then */
    if v_comm_dir=21 then

        /* set @证券代码编号#=@交易代码编号#; */
        set v_stock_code_no=v_trade_code_no;

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@交易组交易代码可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_exgp_trade_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][605][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@交易组交易代码可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_exgp_trade_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][611][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@资产账户交易代码可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_asac_trade_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][606][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@资产账户交易代码可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_asac_trade_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][612][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    #质押转回,判断标准券持仓可用,以及根据质押流水判断转回可用，这里的可用是否需要包含账户的，还需要后续确认

    /* if @指令方向#=《指令方向-质押转回》  then */
    if v_comm_dir=22  then

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* set @证券代码编号#=@交易代码编号#; */
            set v_stock_code_no=v_trade_code_no;

            /* 调用【原子_交易证券_账户_获取交易组债券质押转回可用数量】*/
            call db_tdsecu.pra_tdseac_GetExgpBondImpawnBackAvailQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_error_code,
                v_error_info,
                v_curr_qty,
                v_comm_reback_avail_qty,
                v_trade_reback_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_获取交易组债券质押转回可用数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @证券代码编号#=@标的代码编号#; */
            set v_stock_code_no=v_target_code_no;

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @交易组可用数量# = @交易组交易代码可用数量# + @指令端转回可用数量#; */
            set v_exgp_avail_qty = v_exgp_trade_code_avail_qty + v_comm_reback_avail_qty;

            /* set @标的代码可用数量# = @交易组标的代码可用数量# + @指令端可用数量#; */
            set v_target_code_avail_qty = v_exgp_target_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][(@指令数量#>(@交易组可用数量#)) or (@指令数量# * @质押比例#>(@标的代码可用数量#))][605][@指令数量#,@交易组可用数量#,@质押比例#,@标的代码可用数量#] */
            if (v_comm_qty>(v_exgp_avail_qty)) or (v_comm_qty * v_impawn_ratio>(v_target_code_avail_qty)) then
                
                SET v_error_code = "tdsecuA.3.5.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","交易组可用数量=",v_exgp_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令数量=",v_comm_qty,",","交易组可用数量=",v_exgp_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @交易组可用数量# = @交易组交易代码可用数量# + @交易端转回可用数量#; */
                set v_exgp_avail_qty = v_exgp_trade_code_avail_qty + v_trade_reback_avail_qty;

                /* set @标的代码可用数量# = @交易组标的代码可用数量# + @交易端可用数量#; */
                set v_target_code_avail_qty = v_exgp_target_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][(@指令数量#>(@交易组可用数量#)) or (@指令数量# * @质押比例#>(@标的代码可用数量#))][611][@指令数量#,@交易组可用数量#,@质押比例#,@标的代码可用数量#] */
                if (v_comm_qty>(v_exgp_avail_qty)) or (v_comm_qty * v_impawn_ratio>(v_target_code_avail_qty)) then
                    
                    SET v_error_code = "tdsecuA.3.5.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","交易组可用数量=",v_exgp_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("指令数量=",v_comm_qty,",","交易组可用数量=",v_exgp_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* set @证券代码编号#=@交易代码编号#; */
            set v_stock_code_no=v_trade_code_no;

            /* 调用【原子_交易证券_账户_获取资产账户债券质押转回可用数量】*/
            call db_tdsecu.pra_tdseac_GetAsacBondImpawnBackAvailQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_error_code,
                v_error_info,
                v_curr_qty,
                v_comm_reback_avail_qty,
                v_trade_reback_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_获取资产账户债券质押转回可用数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @证券代码编号#=@标的代码编号#; */
            set v_stock_code_no=v_target_code_no;

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @资产账户可用数量# = @资产账户交易代码可用数量# + @指令端转回可用数量#; */
            set v_asac_avail_qty = v_asac_trade_code_avail_qty + v_comm_reback_avail_qty;

            /* set @标的代码可用数量# = @资产账户标的代码可用数量# + @指令端可用数量#; */
            set v_target_code_avail_qty = v_asac_target_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][(@指令数量#>@资产账户可用数量# ) or (@指令数量# * @质押比例#>(@标的代码可用数量#))][606][@指令数量#,@资产账户可用数量#,@质押比例#,@标的代码可用数量#] */
            if (v_comm_qty>v_asac_avail_qty ) or (v_comm_qty * v_impawn_ratio>(v_target_code_avail_qty)) then
                
                SET v_error_code = "tdsecuA.3.5.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","资产账户可用数量=",v_asac_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令数量=",v_comm_qty,",","资产账户可用数量=",v_asac_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @资产账户可用数量# = @资产账户交易代码可用数量# + @交易端转回可用数量#; */
                set v_asac_avail_qty = v_asac_trade_code_avail_qty + v_trade_reback_avail_qty;

                /* set @标的代码可用数量# = @资产账户标的代码可用数量# + @交易端可用数量#; */
                set v_target_code_avail_qty = v_asac_target_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][(@指令数量#>(@资产账户可用数量#)) or (@指令数量# * @质押比例#>(@标的代码可用数量#))][612][@指令数量#,@资产账户可用数量#,@质押比例#,@标的代码可用数量#] */
                if (v_comm_qty>(v_asac_avail_qty)) or (v_comm_qty * v_impawn_ratio>(v_target_code_avail_qty)) then
                    
                    SET v_error_code = "tdsecuA.3.5.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","资产账户可用数量=",v_asac_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("指令数量=",v_comm_qty,",","资产账户可用数量=",v_asac_avail_qty,",","质押比例=",v_impawn_ratio,",","标的代码可用数量=",v_target_code_avail_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    #融资回购,判断标准券持仓可用

    /* if @指令方向#=《指令方向-融资回购》 then */
    if v_comm_dir=3 then

        /* set @证券代码编号#=@标的代码编号#; */
        set v_stock_code_no=v_target_code_no;

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@交易组标的代码可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_exgp_target_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][605][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@交易组标的代码可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_exgp_target_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][611][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@资产账户标的代码可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_asac_target_code_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][606][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.5.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@资产账户标的代码可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_asac_target_code_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][612][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.5.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    #融券回购,校验资金是否足够

    /* if @指令方向#=《指令方向-融券回购》 then */
    if v_comm_dir=4 then

        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_crncy_type,
                v_exch_crncy_type,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_capit_reback_days,
                v_error_code,
                v_error_info,
                v_shsz_comm_avail_amt,
                v_hk_comm_avail_amt,
                v_shsz_trade_avail_amt,
                v_hk_trade_avail_amt,
                v_comm_avail_amt,
                v_trade_avail_amt,
                v_static_avail_amt);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
            set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;

            /* [检查报错返回][@指令冻结金额#>@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if v_comm_frozen_amt>v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

                /* set @可用金额#=@交易组可用金额# + @交易端可用金额#; */
                set v_avail_amt=v_exgp_avail_amt + v_trade_avail_amt;

                /* [检查报错返回][(@指令冻结金额# + @全部费用#)>@可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
                if (v_comm_frozen_amt + v_all_fee)>v_avail_amt then
                    
                    SET v_error_code = "tdsecuA.3.5.609";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_crncy_type,
                v_exch_crncy_type,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_capit_reback_days,
                v_error_code,
                v_error_info,
                v_shsz_comm_avail_amt,
                v_hk_comm_avail_amt,
                v_shsz_trade_avail_amt,
                v_hk_trade_avail_amt,
                v_comm_avail_amt,
                v_trade_avail_amt,
                v_static_avail_amt);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.5.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
            set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;

            /* [检查报错返回][@指令冻结金额#>@可用金额#][604][@可用金额#, @指令冻结金额#] */
            if v_comm_frozen_amt>v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.5.604";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,3,1) <> 2 then

                /* set @可用金额#=@资产账户可用金额# + @交易端可用金额#; */
                set v_avail_amt=v_asac_avail_amt + v_trade_avail_amt;

                /* [检查报错返回][(@指令冻结金额# + @全部费用#)>@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
                if (v_comm_frozen_amt + v_all_fee)>v_avail_amt then
                    
                    SET v_error_code = "tdsecuA.3.5.610";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_新增指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_AddComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_AddComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_out_acco varchar(32),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_code varchar(6),
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_batch_no int,
    IN p_comm_dir int,
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_comm_qty decimal(18,2),
    IN p_comm_amt decimal(18,4),
    IN p_comm_frozen_amt decimal(18,4),
    IN p_comm_frozen_qty decimal(18,2),
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_comm_appr_status varchar(2),
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_impawn_ratio decimal(18,12),
    IN p_intrst_days int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_combo_code varchar(32),
    IN p_target_stock_code varchar(6),
    IN p_target_stock_code_no int,
    IN p_comm_remark_info varchar(1024),
    IN p_workflow_type int,
    IN p_contra_no varchar(32),
    IN p_asset_acco_type int,
    IN p_exist_debt_flag int,
    IN p_disp_opor int,
    IN p_disp_status int,
    IN p_acco_concat_info varchar(4096),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_id bigint,
    OUT p_comm_status varchar(2),
    OUT p_strike_status varchar(2),
    OUT p_comm_comple_flag int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_appr_status varchar(2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_acco_concat_info varchar(4096);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_id bigint;
    declare v_comm_status varchar(2);
    declare v_strike_status varchar(2);
    declare v_comm_comple_flag int;
    declare v_comm_time int;
    declare v_oper_func_code varchar(16);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_remark varchar(255);
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_read_flag int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_row_id bigint;
    declare v_comm_appr_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_date = p_comm_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_out_acco = p_out_acco;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_code = p_stock_code;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_amt = p_comm_amt;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_comm_frozen_qty = p_comm_frozen_qty;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_intrst_days = p_intrst_days;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_combo_code = p_combo_code;
    SET v_target_stock_code = p_target_stock_code;
    SET v_target_stock_code_no = p_target_stock_code_no;
    SET v_comm_remark_info = p_comm_remark_info;
    SET v_workflow_type = p_workflow_type;
    SET v_contra_no = p_contra_no;
    SET v_asset_acco_type = p_asset_acco_type;
    SET v_exist_debt_flag = p_exist_debt_flag;
    SET v_disp_opor = p_disp_opor;
    SET v_disp_status = p_disp_status;
    SET v_acco_concat_info = p_acco_concat_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_id = 0;
    SET v_comm_status = "0";
    SET v_strike_status = "0";
    SET v_comm_comple_flag = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_oper_func_code = " ";
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_remark = " ";
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_read_flag = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_row_id = 0;
    SET v_comm_appr_qty = 0;

    
    label_pro:BEGIN
    

    /* [获取机器时间][@指令时间#] */
    select date_format(curtime(),'%H%i%s') into v_comm_time;


    /* set @工作流模式# = if(ifnull(@工作流模式#,0) =0 ,0 ,@工作流模式#); */
    set v_workflow_type = if(ifnull(v_workflow_type,0) =0 ,0 ,v_workflow_type);

    /* set @操作功能#=@功能编码#; */
    set v_oper_func_code=v_func_code;

    /* set @指令完成日期#=0; */
    set v_comm_comple_date=0;

    /* set @指令完成时间#=0; */
    set v_comm_comple_time=0;

    /* set @指令状态#=《指令状态-未执行》; */
    set v_comm_status="1";

    /* set @成交状态#=《成交状态-未成》; */
    set v_strike_status="1";

    /* set @指令审批说明#=" "; */
    set v_comm_appr_remark=" ";

    /* set @指令审批日期#=0; */
    set v_comm_appr_date=0;

    /* set @指令审批时间#=0; */
    set v_comm_appr_time=0;

    /* set @指令审批操作员序号#=0; */
    set v_comm_appr_oper_no=0;

    /* set @指令审批操作员#=0; */
    set v_comm_appr_oper=0;

    /* set @订单数量#=0; */
    set v_order_qty=0;

    /* set @指令撤销数量#=0; */
    set v_comm_cancel_qty=0;

    /* set @成交金额#=0; */
    set v_strike_amt=0;

    /* set @成交数量#=0; */
    set v_strike_qty=0;

    /* set @策略订单数量# = 0; */
    set v_strategy_order_qty = 0;

    /* set @策略占用数量# = 0; */
    set v_strategy_capt_qty = 0;

    /* set @指令完成标志# = 《指令完成标志-未完成》; */
    set v_comm_comple_flag = 1;

    /* set @已读标记# = 《已读标记-未读》; */
    set v_read_flag = 0;

    /* [插入表记录][交易证券_指令_指令表][字段][字段变量][1][@初始化日期#,@指令批号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, pass_no, out_acco, 
        exch_crncy_type, exch_no, stock_acco_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, strike_amt, strike_qty, comm_frozen_amt, 
        comm_frozen_qty, net_price_flag, par_value, impawn_ratio, 
        intrst_days, bond_accr_intrst, bond_rate_type, capit_reback_days, 
        posi_reback_days, strike_status, comm_status, comm_begin_date, 
        comm_end_date, comm_begin_time, comm_end_time, comm_comple_date, 
        comm_comple_time, comm_appr_date, comm_appr_time, comm_appr_status, 
        comm_appr_oper_no, comm_appr_oper, comm_appr_remark, basket_id, 
        comm_oper_way, exter_comm_flag, comm_comple_flag, strategy_order_qty, 
        strategy_capt_qty, combo_code, target_stock_code, target_stock_code_no, 
        comm_remark_info, workflow_type, contra_no, asset_acco_type, 
        exist_debt_flag, disp_opor, disp_status, read_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_pass_no, v_out_acco, 
        v_exch_crncy_type, v_exch_no, v_stock_acco_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_strike_amt, v_strike_qty, v_comm_frozen_amt, 
        v_comm_frozen_qty, v_net_price_flag, v_par_value, v_impawn_ratio, 
        v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, v_capit_reback_days, 
        v_posi_reback_days, v_strike_status, v_comm_status, v_comm_begin_date, 
        v_comm_end_date, v_comm_begin_time, v_comm_end_time, v_comm_comple_date, 
        v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, v_comm_appr_status, 
        v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, v_basket_id, 
        v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, v_strategy_order_qty, 
        v_strategy_capt_qty, v_combo_code, v_target_stock_code, v_target_stock_code_no, 
        v_comm_remark_info, v_workflow_type, v_contra_no, v_asset_acco_type, 
        v_exist_debt_flag, v_disp_opor, v_disp_status, v_read_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.6.1";
        SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","指令批号=",v_comm_batch_no),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* [获取记录序号][@记录序号#] */
    select LAST_INSERT_ID() into v_row_id;


    /* set @指令序号#=@记录序号#; */
    set v_comm_id=v_row_id;

    /* set @指令审批数量# = 0; */
    set v_comm_appr_qty = 0;

    /* 调用【原子_交易证券_指令_指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_oper_func_code,
        v_init_date,
        v_comm_date,
        v_comm_time,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_pass_no,
        v_out_acco,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_code_no,
        v_stock_code,
        v_target_code_no,
        v_trade_code_no,
        v_stock_type,
        v_asset_type,
        v_comm_opor,
        v_comm_executor,
        v_comm_batch_no,
        v_comm_dir,
        v_comm_limit_price,
        v_limit_actual_price,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_appr_qty,
        v_comm_begin_date,
        v_comm_end_date,
        v_comm_begin_time,
        v_comm_end_time,
        v_net_price_flag,
        v_par_value,
        v_impawn_ratio,
        v_intrst_days,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_strike_status,
        v_comm_status,
        v_comm_appr_status,
        v_basket_id,
        v_comm_oper_way,
        v_exter_comm_flag,
        v_buy_ref_rate,
        v_sell_ref_rate,
        v_comm_remark_info,
        v_acco_concat_info,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.6.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_id = v_comm_id;
    SET p_comm_status = v_comm_status;
    SET p_strike_status = v_strike_status;
    SET p_comm_comple_flag = v_comm_comple_flag;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_审批指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ApprComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ApprComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code varchar(6),
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_date int,
    IN p_comm_id bigint,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_batch_no int,
    IN p_comm_appr_oper_no int,
    IN p_comm_appr_oper int,
    IN p_comm_appr_status varchar(2),
    IN p_comm_appr_remark varchar(255),
    IN p_comm_qty decimal(18,2),
    IN p_comm_dir int,
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_comm_status varchar(2),
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_exter_comm_flag int,
    IN p_comm_oper_way varchar(2),
    IN p_comm_amt decimal(18,4),
    IN p_co_busi_config_str varchar(64),
    IN p_online_opor_no_str varchar(2048),
    IN p_curr_opor_no int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_before_comm_executor int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_occur_amt decimal(18,4),
    OUT p_comm_occur_qty decimal(18,2),
    OUT p_comm_appr_date int,
    OUT p_comm_appr_time int,
    OUT p_disp_status int,
    OUT p_disp_opor int,
    OUT p_auto_comm_executor int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code varchar(6);
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_id bigint;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_batch_no int;
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_remark varchar(255);
    declare v_comm_qty decimal(18,2);
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_exter_comm_flag int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_amt decimal(18,4);
    declare v_co_busi_config_str varchar(64);
    declare v_online_opor_no_str varchar(2048);
    declare v_curr_opor_no int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_before_comm_executor int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_disp_status int;
    declare v_disp_opor int;
    declare v_auto_comm_executor int;
    declare v_oper_func_code varchar(16);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_tmp_comm_frozen_qty decimal(18,2);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_comm_qty decimal(18,2);
    declare v_calc_dir int;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_update_date int;
    declare v_update_time int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_times int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_cmmd_select_trader int;
    declare v_cmmd_auto_distribute int;
    declare v_filter_not_online_trader int;
    declare v_distribute_last_trader int;
    declare v_distribute_by_jobs int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_date = p_comm_date;
    SET v_comm_id = p_comm_id;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_appr_oper_no = p_comm_appr_oper_no;
    SET v_comm_appr_oper = p_comm_appr_oper;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_comm_appr_remark = p_comm_appr_remark;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_order_qty = p_order_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_comm_status = p_comm_status;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_comm_amt = p_comm_amt;
    SET v_co_busi_config_str = p_co_busi_config_str;
    SET v_online_opor_no_str = p_online_opor_no_str;
    SET v_curr_opor_no = p_curr_opor_no;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_occur_amt = 0;
    SET v_comm_occur_qty = 0;
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_disp_status = 0;
    SET v_disp_opor = 0;
    SET v_auto_comm_executor = 0;
    SET v_oper_func_code = " ";
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_frozen_qty = 0;
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_comm_qty = 0;
    SET v_calc_dir = 1;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_comm_appr_qty = 0;
    SET v_cmmd_select_trader = 0;
    SET v_cmmd_auto_distribute = 0;
    SET v_filter_not_online_trader = 0;
    SET v_distribute_last_trader = 0;
    SET v_distribute_by_jobs = 0;

    
    label_pro:BEGIN
    

    /* [获取机器日期][@指令审批日期#] */
    select date_format(curdate(),'%Y%m%d') into v_comm_appr_date;


    /* [获取机器时间][@指令审批时间#] */
    select date_format(curtime(),'%H%i%s') into v_comm_appr_time;


    /* set @操作功能# = @功能编码#; */
    set v_oper_func_code = v_func_code;

    /* set @指令完成日期# = 0; */
    set v_comm_comple_date = 0;

    /* set @指令完成时间# = 0; */
    set v_comm_comple_time = 0;

    /* set @指令变动金额#=0; */
    set v_comm_occur_amt=0;

    /* set @指令变动数量#=0; */
    set v_comm_occur_qty=0;

    /* set @临时_指令冻结数量# = 0; */
    set v_tmp_comm_frozen_qty = 0;

    /* set @临时_指令撤销数量# = 0; */
    set v_tmp_comm_cancel_qty = 0;

    /* if @指令执行人# > 0 then */
    if v_comm_executor > 0 then

        /* set @分发状态# = 《分发状态-分发通过》; */
        set v_disp_status = 1;
    else

        /* set @分发状态# = 《分发状态-待分发》; */
        set v_disp_status = 3;
    end if;

    /* if @指令审批状态# <> 《指令审批状态-不审批》 then */
    if v_comm_appr_status <> "4" then

        /* [检查报错返回][@指令下达人#=@指令审批操作员#][726][@指令下达人#,@指令审批操作员#] */
        if v_comm_opor=v_comm_appr_oper then
            
            SET v_error_code = "tdsecuA.3.7.726";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令下达人=",v_comm_opor,",","指令审批操作员=",v_comm_appr_oper),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令下达人=",v_comm_opor,",","指令审批操作员=",v_comm_appr_oper);
            end if;
            leave label_pro;
        end if;


        /* if @指令审批状态# = 《指令审批状态-审批拒绝》 then */
        if v_comm_appr_status = "3" then

            /* set @临时_指令撤销数量# = @指令数量# - @订单数量# - @指令撤销数量#; */
            set v_tmp_comm_cancel_qty = v_comm_qty - v_order_qty - v_comm_cancel_qty;

            /* set @临时_指令数量# = @指令数量#; */
            set v_tmp_comm_qty = v_comm_qty;

            /* set @指令数量# = @临时_指令撤销数量#; */
            set v_comm_qty = v_tmp_comm_cancel_qty;

            /* set @计算方向# = 《计算方向-减去》; */
            set v_calc_dir = -1;

            /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-融券卖出》  or @指令方向# = 《指令方向-买券还券》  or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》  then */
            if v_comm_dir = 5 or v_comm_dir = 6  or v_comm_dir = 8  or v_comm_dir = 7 or v_comm_dir = 14 or v_comm_dir = 15  then

                /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_comm_amt,
                    v_error_code,
                    v_error_info,
                    v_comm_frozen_amt,
                    v_comm_frozen_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.7.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            else

                /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_error_code,
                    v_error_info,
                    v_comm_frozen_amt,
                    v_comm_frozen_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.7.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;

            /* set @指令数量# = @临时_指令数量#; */
            set v_comm_qty = v_tmp_comm_qty;

            /* [获取机器日期][@指令完成日期#] */
            select date_format(curdate(),'%Y%m%d') into v_comm_comple_date;


            /* [获取机器时间][@指令完成时间#] */
            select date_format(curtime(),'%H%i%s') into v_comm_comple_time;


            /* set @指令数量# = @临时_指令撤销数量#; */
            set v_comm_qty = v_tmp_comm_cancel_qty;
            #计算指令变动金额和数量

            /* set @计算方向# = 《计算方向-减去》; */
            set v_calc_dir = -1;

            /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-买券还券》  or @指令方向# = 《指令方向-卖券还款》  or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》  then */
            if v_comm_dir = 5 or v_comm_dir = 6 or v_comm_dir = 8  or v_comm_dir = 7  or v_comm_dir = 14 or v_comm_dir = 15  then

                /* 调用【原子_交易证券_公用_计算融资融券指令变动金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetFinaLoanCommOccurAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_comm_amt,
                    v_error_code,
                    v_error_info,
                    v_comm_occur_amt,
                    v_comm_occur_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.7.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令变动金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            else

                /* 调用【原子_交易证券_公用_计算指令变动金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetCommOccurAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_error_code,
                    v_error_info,
                    v_comm_occur_amt,
                    v_comm_occur_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.7.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令变动金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;

            /* set @指令状态# = 《指令状态-全部撤销》; */
            set v_comm_status = "6";
        end if;

        /* [更新表记录][交易证券_指令_指令表][{指令撤销数量}= {指令撤销数量} + @临时_指令撤销数量#, {指令冻结金额} = {指令冻结金额} + @指令冻结金额#, {指令冻结数量} = {指令冻结数量} + @指令冻结数量#, {指令完成日期} = @指令完成日期#, {指令完成时间} = @指令完成时间#, {指令审批日期}=@指令审批日期#,{指令审批时间}=@指令审批时间#,{指令审批操作员序号}=@指令审批操作员序号#,{指令审批操作员}=@指令审批操作员#,{指令审批说明}=@指令审批说明#,{指令审批状态}=@指令审批状态#,{指令状态}=@指令状态#,{指令执行人}=@指令执行人#,{分发状态} = @分发状态#][{记录序号}=@指令序号#][2][@指令序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_cancel_qty= comm_cancel_qty + v_tmp_comm_cancel_qty, comm_frozen_amt = comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty, comm_comple_date = v_comm_comple_date, comm_comple_time = v_comm_comple_time, comm_appr_date=v_comm_appr_date,comm_appr_time=v_comm_appr_time,comm_appr_oper_no=v_comm_appr_oper_no,comm_appr_oper=v_comm_appr_oper,comm_appr_remark=v_comm_appr_remark,comm_appr_status=v_comm_appr_status,comm_status=v_comm_status,comm_executor=v_comm_executor,disp_status = v_disp_status where row_id=v_comm_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.7.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令序号=",v_comm_id);
            end if;
            leave label_pro;
        end if;


        /* [插入表记录][交易证券_指令_指令审批表][字段][字段变量][1][@指令序号#] */
        set v_create_date = date_format(curdate(),'%Y%m%d');
        set v_create_time = date_format(curtime(),'%H%i%s');
        set v_update_date = v_create_date;
        set v_update_time = v_create_time;
        set v_update_times = 1;
        insert into db_tdsecu.tb_tdseap_command_approve(
            create_date, create_time, update_date, 
            update_time, update_times, opor_co_no, opor_no, 
            oper_mac, oper_ip_addr, oper_info, oper_way, 
            oper_func_code, init_date, comm_appr_date, comm_appr_time, 
            comm_appr_oper_no, comm_appr_oper, co_no, pd_no, 
            exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
            stock_code_no, stock_type, asset_type, comm_date, 
            comm_id, comm_opor, comm_dir, comm_qty, 
            comm_limit_price, limit_actual_price, comm_begin_date, comm_end_date, 
            comm_begin_time, comm_end_time, comm_appr_status, comm_appr_remark, 
            exter_comm_flag) 
        value( 
            v_create_date, v_create_time, v_update_date, 
            v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
            v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
            v_oper_func_code, v_init_date, v_comm_appr_date, v_comm_appr_time, 
            v_comm_appr_oper_no, v_comm_appr_oper, v_co_no, v_pd_no, 
            v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
            v_stock_code_no, v_stock_type, v_asset_type, v_comm_date, 
            v_comm_id, v_comm_opor, v_comm_dir, v_comm_qty, 
            v_comm_limit_price, v_limit_actual_price, v_comm_begin_date, v_comm_end_date, 
            v_comm_begin_time, v_comm_end_time, v_comm_appr_status, v_comm_appr_remark, 
            v_exter_comm_flag);
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.7.1";
            SET v_error_info =  CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            leave label_pro;
        end if;

    end if;

    /* set @指令审批数量#=@指令数量#; */
    set v_comm_appr_qty=v_comm_qty;

    /* set @指令撤销数量# = @临时_指令撤销数量#; */
    set v_comm_cancel_qty = v_tmp_comm_cancel_qty;

    /* 调用【原子_交易证券_指令_审批指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_ApprCommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_appr_status,
        v_comm_qty,
        v_comm_appr_qty,
        v_comm_cancel_qty,
        v_comm_appr_date,
        v_comm_appr_time,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.7.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_审批指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令审批状态# = 《指令审批状态-不审批》 or @指令审批状态# = 《指令审批状态-审批通过》 then */
    if v_comm_appr_status = "4" or v_comm_appr_status = "2" then
        #指令转发处理
        #指令下达时，若禁止指定、交易员为0且自动分发开启，则进入规则判断，若无自定义规则，则优先级：过滤不在线的交易员>同券分发给上次分发的交易员>按工作量分发，若有自定义规则，则按照自定义规则优先级依次判断直到找到交易员为止

        /* set @指令指定交易员# =cast(substring(@机构业务控制配置串#,30,1) as SIGNED); */
        set v_cmmd_select_trader =cast(substring(v_co_busi_config_str,30,1) as SIGNED);

        /* set @指令自动分发# =cast(substring(@机构业务控制配置串#,31,1) as SIGNED); */
        set v_cmmd_auto_distribute =cast(substring(v_co_busi_config_str,31,1) as SIGNED);

        /* set @指令自动分发过滤不在线交易员# =cast(substring(@机构业务控制配置串#,32,1) as SIGNED); */
        set v_filter_not_online_trader =cast(substring(v_co_busi_config_str,32,1) as SIGNED);

        /* set @指令自动分发同券分发给上次分发的交易员# =cast(substring(@机构业务控制配置串#,33,1) as SIGNED); */
        set v_distribute_last_trader =cast(substring(v_co_busi_config_str,33,1) as SIGNED);

        /* set @指令自动分发按工作量分发# =cast(substring(@机构业务控制配置串#,34,1) as SIGNED); */
        set v_distribute_by_jobs =cast(substring(v_co_busi_config_str,34,1) as SIGNED);

        /* if @指令执行人# = 0 and @指令指定交易员# = 《指令指定交易员-不指定》 and @指令自动分发# = 《指令自动分发-开启》 then */
        if v_comm_executor = 0 and v_cmmd_select_trader = 1 and v_cmmd_auto_distribute = 1 then

            /* 调用【原子_交易证券_指令_指令自动分发】*/
            call db_tdsecu.pra_tdseap_AutoDispComm(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code,
                v_stock_code_no,
                v_stock_type,
                v_asset_type,
                v_filter_not_online_trader,
                v_distribute_last_trader,
                v_distribute_by_jobs,
                v_online_opor_no_str,
                v_comm_id,
                v_curr_opor_no,
                v_buy_ref_rate,
                v_sell_ref_rate,
                v_before_comm_executor,
                v_error_code,
                v_error_info,
                v_disp_opor,
                v_disp_status,
                v_comm_executor);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.7.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_指令自动分发出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @自动分发指令执行人# = @指令执行人#; */
            set v_auto_comm_executor = v_comm_executor;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_occur_amt = v_comm_occur_amt;
    SET p_comm_occur_qty = v_comm_occur_qty;
    SET p_comm_appr_date = v_comm_appr_date;
    SET p_comm_appr_time = v_comm_appr_time;
    SET p_disp_status = v_disp_status;
    SET p_disp_opor = v_disp_opor;
    SET p_auto_comm_executor = v_auto_comm_executor;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验撤销指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckCancelComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckCancelComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_cancel_info varchar(255),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_acco varchar(16),
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_status varchar(2),
    OUT p_all_fee decimal(18,4),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_cancel_info varchar(255);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_acco varchar(16);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_status varchar(2);
    declare v_all_fee decimal(18,4);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_cancel_info = p_cancel_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_acco = " ";
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_status = "0";
    SET v_all_fee = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    
    #获取指令信息

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.8.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #检查指令状态

    /* [检查报错返回][@成交状态#=《成交状态-已成》][613][@成交状态#] */
    if v_strike_status="3" then
        
        SET v_error_code = "tdsecuA.3.8.613";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("成交状态=",v_strike_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("成交状态=",v_strike_status);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@指令状态# =《指令状态-待撤销》 or @指令状态# =《指令状态-部分撤销》 or @指令状态# =《指令状态-全部撤销》 ][614][@指令状态#] */
    if v_comm_status ="4" or v_comm_status ="5" or v_comm_status ="6"  then
        
        SET v_error_code = "tdsecuA.3.8.614";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令状态=",v_comm_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令状态=",v_comm_status);
        end if;
        leave label_pro;
    end if;


    /* set @指令撤销数量#=@指令数量# - @订单数量# - @指令撤销数量#; */
    set v_comm_cancel_qty=v_comm_qty - v_order_qty - v_comm_cancel_qty;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_acco = v_stock_acco;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_status = v_comm_status;
    SET p_all_fee = v_all_fee;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_amt = v_comm_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_撤销指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CancelComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CancelComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_id bigint,
    IN p_cancel_info varchar(255),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_acco varchar(16),
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_comm_status varchar(2),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_impawn_ratio decimal(18,12),
    OUT p_comm_dir int,
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_frozen_amt decimal(18,4),
    OUT p_comm_date int,
    OUT p_comm_batch_no int,
    OUT p_comm_executor int,
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_id bigint;
    declare v_cancel_info varchar(255);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_acco varchar(16);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_limit_actual_price decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_comm_dir int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_intrst_days int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_tmp_comm_qty decimal(18,2);
    declare v_calc_dir int;
    declare v_jour_occur_field varchar(2048);
    declare v_jour_occur_info varchar(2048);
    declare v_jour_after_occur_info varchar(2048);
    declare v_remark_info varchar(255);
    declare v_wtdraw_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_id = p_comm_id;
    SET v_cancel_info = p_cancel_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_acco = " ";
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_status = "0";
    SET v_limit_actual_price = 0;
    SET v_impawn_ratio = 0;
    SET v_comm_dir = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_qty = 0;
    SET v_intrst_days = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_tmp_comm_qty = 0;
    SET v_calc_dir = 1;
    SET v_jour_occur_field = " ";
    SET v_jour_occur_info = " ";
    SET v_jour_after_occur_info = " ";
    SET v_remark_info = " ";
    SET v_wtdraw_qty = 0;

    
    label_pro:BEGIN
    

    /* set @指令状态#=《指令状态-全部撤销》; */
    set v_comm_status="6";
    #获取当前指令数量，以计算指令撤销数量和变动金额

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][4][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.9.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #检查指令状态

    /* [检查报错返回][@成交状态#=《成交状态-已成》][613][@成交状态#] */
    if v_strike_status="3" then
        
        SET v_error_code = "tdsecuA.3.9.613";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("成交状态=",v_strike_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("成交状态=",v_strike_status);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@指令状态# =《指令状态-待撤销》 or @指令状态# =《指令状态-部分撤销》 or @指令状态# =《指令状态-全部撤销》 ][614][@指令状态#] */
    if v_comm_status ="4" or v_comm_status ="5" or v_comm_status ="6"  then
        
        SET v_error_code = "tdsecuA.3.9.614";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令状态=",v_comm_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令状态=",v_comm_status);
        end if;
        leave label_pro;
    end if;


    /* [获取机器日期][@指令完成日期#] */
    select date_format(curdate(),'%Y%m%d') into v_comm_comple_date;


    /* [获取机器时间][@指令完成时间#] */
    select date_format(curtime(),'%H%i%s') into v_comm_comple_time;


    /* set @指令撤销数量#=@指令数量# - @订单数量# - @指令撤销数量#; */
    set v_comm_cancel_qty=v_comm_qty - v_order_qty - v_comm_cancel_qty;

    /* set @指令待撤销数量#=@指令数量# - @指令撤销数量# - @成交数量#; */
    set v_comm_await_cancel_qty=v_comm_qty - v_comm_cancel_qty - v_strike_qty;
    #根据指令撤销数量置指令状态

    /* if @指令撤销数量#=0 and @指令数量#=@订单数量# then */
    if v_comm_cancel_qty=0 and v_comm_qty=v_order_qty then

        /* set @指令状态#=《指令状态-待撤销》; */
        set v_comm_status="4";

        /* set @指令完成日期#=0; */
        set v_comm_comple_date=0;

        /* set @指令完成时间#=0; */
        set v_comm_comple_time=0;

    /* elseif @指令数量#=@指令撤销数量# then */
    elseif v_comm_qty=v_comm_cancel_qty then

        /* set @指令状态#=《指令状态-全部撤销》; */
        set v_comm_status="6";

    /* elseif @指令撤销数量#>0 and @指令数量#>@订单数量# then */
    elseif v_comm_cancel_qty>0 and v_comm_qty>v_order_qty then

        /* set @指令状态#=《指令状态-部分撤销》; */
        set v_comm_status="5";

        /* set @指令完成日期#=0; */
        set v_comm_comple_date=0;

        /* set @指令完成时间#=0; */
        set v_comm_comple_time=0;
    end if;

    /* set @指令冻结金额# = 0; */
    set v_comm_frozen_amt = 0;

    /* set @指令冻结数量# = 0; */
    set v_comm_frozen_qty = 0;

    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @指令数量# = @指令撤销数量#; */
    set v_comm_qty = v_comm_cancel_qty;

    /* set @计算方向# = 《计算方向-减去》; */
    set v_calc_dir = -1;

    /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-买券还券》 or @指令方向# = 《指令方向-卖券还款》  or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》 then */
    if v_comm_dir = 5 or v_comm_dir = 6 or v_comm_dir = 8 or v_comm_dir = 7  or v_comm_dir = 14 or v_comm_dir = 15 then

        /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_comm_dir,
            v_limit_actual_price,
            v_comm_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_calc_dir,
            v_comm_amt,
            v_error_code,
            v_error_info,
            v_comm_frozen_amt,
            v_comm_frozen_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.9.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    else

        /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_comm_dir,
            v_limit_actual_price,
            v_comm_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_calc_dir,
            v_error_code,
            v_error_info,
            v_comm_frozen_amt,
            v_comm_frozen_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.9.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* set @指令数量# = @临时_指令数量#; */
    set v_comm_qty = v_tmp_comm_qty;

    /* [获取流水变动][{指令撤销数量},{指令冻结金额},{指令状态}][@指令撤销数量#,@指令冻结金额#,@指令状态#]; */
    set v_jour_occur_field = concat("指令撤销数量","|","指令冻结金额","|","指令状态","|");
    set v_jour_occur_info = concat(v_comm_cancel_qty,"|",v_comm_frozen_amt,"|",v_comm_status,"|");


    /* [更新表记录][交易证券_指令_指令表][{指令撤销数量}={指令撤销数量} + @指令撤销数量#, {指令冻结金额}={指令冻结金额} + @指令冻结金额#, {指令冻结数量} = {指令冻结数量} + @指令冻结数量#, {指令状态}=@指令状态#,{指令完成日期}= @指令完成日期#,{指令完成时间}=@指令完成时间#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_cancel_qty=comm_cancel_qty + v_comm_cancel_qty, comm_frozen_amt=comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty, comm_status=v_comm_status,comm_comple_date= v_comm_comple_date,comm_comple_time=v_comm_comple_time where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.9.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_指令_指令表][{指令状态}][@指令状态#][{记录序号}=@指令序号#][4][@指令序号#] */
    select comm_status into v_comm_status from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.9.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [获取流水后信息][@指令撤销数量#,@指令冻结金额#,@指令状态#]; */
    set v_jour_after_occur_info = concat(v_comm_cancel_qty,"|",v_comm_frozen_amt,"|",v_comm_status,"|");


    /* set @备注信息#=@撤销说明#; */
    set v_remark_info=v_cancel_info;

    /* set @操作功能#=@功能编码#; */
    set v_oper_func_code=v_func_code;

    /* [插入表记录][交易证券_指令_指令流水表][字段][字段变量][1][@初始化日期#,@指令序号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command_jour(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, comm_date, comm_id, jour_occur_field, 
        jour_occur_info, jour_after_occur_info, remark_info, exter_comm_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_comm_date, v_comm_id, v_jour_occur_field, 
        v_jour_occur_info, v_jour_after_occur_info, v_remark_info, v_exter_comm_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.9.1";
        SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","指令序号=",v_comm_id),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* set @撤单数量# = 0; */
    set v_wtdraw_qty = 0;

    /* 调用【原子_交易证券_指令_撤销更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CancelUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_wtdraw_qty,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.9.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_撤销更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_acco = v_stock_acco;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_comm_status = v_comm_status;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_impawn_ratio = v_impawn_ratio;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_frozen_amt = v_comm_frozen_amt;
    SET p_comm_date = v_comm_date;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_executor = v_comm_executor;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_amt = v_comm_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_撤销指令订单
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CancelCommOrder;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CancelCommOrder(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_out_acco varchar(32),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_acco varchar(16),
    IN p_stock_code_no int,
    IN p_stock_code varchar(6),
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_id bigint,
    IN p_external_no bigint,
    IN p_order_batch_no int,
    IN p_order_date int,
    IN p_report_no varchar(32),
    IN p_order_id bigint,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_order_status varchar(2),
    IN p_order_frozen_amt decimal(18,4),
    IN p_order_frozen_qty decimal(18,2),
    IN p_impawn_ratio decimal(18,12),
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_wtdraw_batch_no int,
    IN p_wtdraw_remark varchar(255),
    IN p_order_oper_way varchar(2),
    IN p_busi_opor_no int,
    IN p_is_record_jour int,
    IN p_target_stock_code_no int,
    IN p_trade_acco varchar(32),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_frozen_amt decimal(18,4),
    OUT p_wtdraw_status varchar(2),
    OUT p_wtdraw_qty decimal(18,2),
    OUT p_wtdraw_id bigint
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_acco varchar(16);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_id bigint;
    declare v_external_no bigint;
    declare v_order_batch_no int;
    declare v_order_date int;
    declare v_report_no varchar(32);
    declare v_order_id bigint;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_order_status varchar(2);
    declare v_order_frozen_amt decimal(18,4);
    declare v_order_frozen_qty decimal(18,2);
    declare v_impawn_ratio decimal(18,12);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_wtdraw_batch_no int;
    declare v_wtdraw_remark varchar(255);
    declare v_order_oper_way varchar(2);
    declare v_busi_opor_no int;
    declare v_is_record_jour int;
    declare v_target_stock_code_no int;
    declare v_trade_acco varchar(32);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_frozen_amt decimal(18,4);
    declare v_wtdraw_status varchar(2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_wtdraw_id bigint;
    declare v_open_close_permission int;
    declare v_pass_status varchar(2);
    declare v_wtdraw_date int;
    declare v_wtdraw_time int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_comm_amt decimal(18,4);
    declare v_comm_qty decimal(18,2);
    declare v_calc_dir int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_total_strike_qty decimal(18,2);
    declare v_all_wtdraw_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_avail_cal_flag int;
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_open_posi_date int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_out_acco = p_out_acco;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_acco = p_stock_acco;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_code = p_stock_code;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_id = p_comm_id;
    SET v_external_no = p_external_no;
    SET v_order_batch_no = p_order_batch_no;
    SET v_order_date = p_order_date;
    SET v_report_no = p_report_no;
    SET v_order_id = p_order_id;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_order_qty = p_order_qty;
    SET v_order_status = p_order_status;
    SET v_order_frozen_amt = p_order_frozen_amt;
    SET v_order_frozen_qty = p_order_frozen_qty;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_wtdraw_batch_no = p_wtdraw_batch_no;
    SET v_wtdraw_remark = p_wtdraw_remark;
    SET v_order_oper_way = p_order_oper_way;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_is_record_jour = p_is_record_jour;
    SET v_target_stock_code_no = p_target_stock_code_no;
    SET v_trade_acco = p_trade_acco;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_frozen_amt = 0;
    SET v_wtdraw_status = "0";
    SET v_wtdraw_qty = 0;
    SET v_wtdraw_id = 0;
    SET v_open_close_permission = 0;
    SET v_pass_status = "0";
    SET v_wtdraw_date = date_format(curdate(),'%Y%m%d');
    SET v_wtdraw_time = date_format(curtime(),'%H%i%s');
    SET v_comm_cancel_qty = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_dir = 0;
    SET v_comm_amt = 0;
    SET v_comm_qty = 0;
    SET v_calc_dir = 1;
    SET v_comm_occur_amt = 0;
    SET v_comm_occur_qty = 0;
    SET v_total_strike_qty = 0;
    SET v_all_wtdraw_qty = 0;
    SET v_trade_occur_amt = 0;
    SET v_trade_occur_qty = 0;
    SET v_avail_cal_flag = 0;
    SET v_combo_code = " ";
    SET v_combo_posi_id = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');

    
    label_pro:BEGIN
    

    /* set @开平仓权限# =《开平仓权限-不限制》; */
    set v_open_close_permission =0;

    /* if @订单状态# <> 《订单状态-未报》  then */
    if v_order_status <> "1"  then
        #非未报订单,只修改订单状态

        /* if @证券类型# <> 《证券类型-申购》 and @订单方向# <> 《订单方向-新股申购》 and @订单方向# <>《订单方向-配售申购》 and @订单方向# <> 《订单方向-质押提交》 and @订单方向# <> 《订单方向-质押转回》 then */
        if v_stock_type <> 2 and v_order_dir <> 11 and v_order_dir <>23 and v_order_dir <> 21 and v_order_dir <> 22 then

            /* set @订单状态#=《订单状态-待撤》; */
            set v_order_status="3";

            /* set @撤单状态#=《撤单状态-未报》; */
            set v_wtdraw_status="1";
            #需主推，直接更新状态为已报

            /* 调用【原子_交易证券_公用_获取通道状态】*/
            call db_tdsecu.pra_tdsepb_GetChannelStatus(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_pass_no,
                v_error_code,
                v_error_info,
                v_pass_status);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.10.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_获取通道状态出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* if @通道状态#=《通道状态-正常》 then */
            if v_pass_status="1" then

                /* set @撤单状态#=《撤单状态-已报》; */
                set v_wtdraw_status="2";
            end if;

            /* set @撤单说明#="撤销指令订单！"; */
            set v_wtdraw_remark="撤销指令订单！";

            /* set @撤单数量# = 0; */
            set v_wtdraw_qty = 0;

            /* set @订单冻结金额# = 0; */
            set v_order_frozen_amt = 0;

            /* set @订单冻结数量# = 0; */
            set v_order_frozen_qty = 0;

            /* 调用【原子_交易证券_交易_撤销订单】*/
            call db_tdsecu.pra_tdsetd_CancelOrder(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_init_date,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_pass_no,
                v_out_acco,
                v_exch_crncy_type,
                v_exch_no,
                v_stock_acco_no,
                v_stock_acco,
                v_stock_code_no,
                v_stock_code,
                v_external_no,
                v_order_date,
                v_order_id,
                v_report_no,
                v_order_frozen_amt,
                v_order_frozen_qty,
                v_order_status,
                v_wtdraw_batch_no,
                v_wtdraw_qty,
                v_wtdraw_remark,
                v_wtdraw_status,
                v_order_price,
                v_trade_acco,
                v_error_code,
                v_error_info,
                v_wtdraw_id,
                v_wtdraw_date,
                v_wtdraw_time);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.10.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_交易_撤销订单出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;
    else
        #未报撤单处理逻辑

        /* set @订单状态#=《订单状态-已撤》; */
        set v_order_status="4";

        /* set @撤单状态#=《撤单状态-成功》; */
        set v_wtdraw_status="3";

        /* set @撤单数量# = @订单数量#; */
        set v_wtdraw_qty = v_order_qty;
        #更新指令表

        /* if @指令序号#>0 then */
        if v_comm_id>0 then

            /* set @指令撤销数量# = 0; */
            set v_comm_cancel_qty = 0;

            /* 调用【原子_交易证券_指令_撤销更新指令】*/
            call db_tdsecu.pra_tdseap_CancelUpdateComm(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_comm_id,
                v_comm_cancel_qty,
                v_wtdraw_qty,
                v_error_code,
                v_error_info,
                v_limit_actual_price,
                v_comm_status,
                v_comm_date,
                v_comm_batch_no,
                v_comm_executor,
                v_comm_oper_way,
                v_comm_dir,
                v_comm_amt);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.10.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_撤销更新指令出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

            #计算指令变动金额

            /* set @指令方向# = @订单方向#; */
            set v_comm_dir = v_order_dir;

            /* set @指令数量# = @撤单数量#; */
            set v_comm_qty = v_wtdraw_qty;

            /* set @计算方向# = 《计算方向-加上》; */
            set v_calc_dir = 1;

            /* 调用【原子_交易证券_公用_计算撤单指令变动金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetCancelCommOccurAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_wtdraw_qty,
                v_comm_status,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_calc_dir,
                v_error_code,
                v_error_info,
                v_comm_occur_amt,
                v_comm_occur_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.10.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算撤单指令变动金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;

        /* set @总成交数量# = 0; */
        set v_total_strike_qty = 0;

        /* set @总撤单数量# = @撤单数量#; */
        set v_all_wtdraw_qty = v_wtdraw_qty;

        /* 调用【原子_交易证券_公用_计算撤单交易变动金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetCancelExchChangeAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_order_dir,
            v_order_qty,
            v_order_price,
            v_order_frozen_amt,
            v_wtdraw_qty,
            v_total_strike_qty,
            v_all_wtdraw_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_error_code,
            v_error_info,
            v_trade_occur_amt,
            v_trade_occur_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.10.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算撤单交易变动金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

        #更新订单表，冻结数量这个字段还没有处理，后续统一处理掉

        /* set @订单冻结金额# = -1 * @订单冻结金额#; */
        set v_order_frozen_amt = -1 * v_order_frozen_amt;

        /* set @订单冻结数量# = -1 * @订单冻结数量#; */
        set v_order_frozen_qty = -1 * v_order_frozen_qty;

        /* set @撤单说明#="撤销指令订单！"; */
        set v_wtdraw_remark="撤销指令订单！";

        /* 调用【原子_交易证券_交易_撤销订单】*/
        call db_tdsecu.pra_tdsetd_CancelOrder(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_pass_no,
            v_out_acco,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_acco_no,
            v_stock_acco,
            v_stock_code_no,
            v_stock_code,
            v_external_no,
            v_order_date,
            v_order_id,
            v_report_no,
            v_order_frozen_amt,
            v_order_frozen_qty,
            v_order_status,
            v_wtdraw_batch_no,
            v_wtdraw_qty,
            v_wtdraw_remark,
            v_wtdraw_status,
            v_order_price,
            v_trade_acco,
            v_error_code,
            v_error_info,
            v_wtdraw_id,
            v_wtdraw_date,
            v_wtdraw_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.10.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_交易_撤销订单出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

        #处理订单资金持仓数据，保护指令变动和交易的变动

        /* set @可用计算标志# = 0; */
        set v_avail_cal_flag = 0;

        /* set @组合代码# = " "; */
        set v_combo_code = " ";

        /* set @组合持仓序号# = 0 ; */
        set v_combo_posi_id = 0 ;

        /* 调用【原子_交易证券_账户_更新指令交易资金持仓】*/
        call db_tdsecu.pra_tdseac_UpdateApprExchCashPosi(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_comm_id,
            v_order_id,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_order_dir,
            v_impawn_ratio,
            v_stock_acco_no,
            v_stock_code_no,
            v_trade_code_no,
            v_target_code_no,
            v_comm_occur_amt,
            v_comm_occur_qty,
            v_trade_occur_amt,
            v_trade_occur_qty,
            v_is_record_jour,
            v_order_oper_way,
            v_busi_opor_no,
            v_open_close_permission,
            v_avail_cal_flag,
            v_combo_code,
            v_combo_posi_id,
            v_target_stock_code_no,
            v_error_code,
            v_error_info,
            v_open_posi_date);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.10.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新指令交易资金持仓出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_frozen_amt = v_frozen_amt;
    SET p_wtdraw_status = v_wtdraw_status;
    SET p_wtdraw_qty = v_wtdraw_qty;
    SET p_wtdraw_id = v_wtdraw_id;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取指令信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckCommInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckCommInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_comm_date int,
    OUT p_comm_time int,
    OUT p_comm_batch_no int,
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_comm_amt decimal(18,4),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_qty decimal(18,2),
    OUT p_comm_frozen_amt decimal(18,4),
    OUT p_comm_frozen_qty decimal(18,2),
    OUT p_all_fee decimal(18,4),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_strike_status varchar(2),
    OUT p_comm_status varchar(2),
    OUT p_comm_begin_date int,
    OUT p_comm_end_date int,
    OUT p_comm_begin_time int,
    OUT p_comm_end_time int,
    OUT p_comm_comple_date int,
    OUT p_comm_comple_time int,
    OUT p_comm_appr_status varchar(2),
    OUT p_exter_comm_flag int,
    OUT p_comm_oper_way varchar(2),
    OUT p_combo_posi_id bigint,
    OUT p_combo_code varchar(32),
    OUT p_asset_acco_type int,
    OUT p_exist_debt_flag int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_all_fee decimal(18,4);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_status varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_oper_way varchar(2);
    declare v_combo_posi_id bigint;
    declare v_combo_code varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_asset_type int;
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_all_fee = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_oper_way = " ";
    SET v_combo_posi_id = 0;
    SET v_combo_code = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_asset_type = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][4][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.11.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_comm_date = v_comm_date;
    SET p_comm_time = v_comm_time;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_qty = v_comm_qty;
    SET p_comm_amt = v_comm_amt;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_qty = v_strike_qty;
    SET p_comm_frozen_amt = v_comm_frozen_amt;
    SET p_comm_frozen_qty = v_comm_frozen_qty;
    SET p_all_fee = v_all_fee;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_strike_status = v_strike_status;
    SET p_comm_status = v_comm_status;
    SET p_comm_begin_date = v_comm_begin_date;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_begin_time = v_comm_begin_time;
    SET p_comm_end_time = v_comm_end_time;
    SET p_comm_comple_date = v_comm_comple_date;
    SET p_comm_comple_time = v_comm_comple_time;
    SET p_comm_appr_status = v_comm_appr_status;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_combo_posi_id = v_combo_posi_id;
    SET p_combo_code = v_combo_code;
    SET p_asset_acco_type = v_asset_acco_type;
    SET p_exist_debt_flag = v_exist_debt_flag;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_锁定获取指令信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_LockGetCommInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_LockGetCommInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_acco varchar(16),
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_comm_date int,
    OUT p_comm_time int,
    OUT p_comm_batch_no int,
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_comm_amt decimal(18,4),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_qty decimal(18,2),
    OUT p_comm_frozen_amt decimal(18,4),
    OUT p_comm_frozen_qty decimal(18,2),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_impawn_ratio decimal(18,12),
    OUT p_intrst_days int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_capit_reback_days int,
    OUT p_posi_reback_days int,
    OUT p_strike_status varchar(2),
    OUT p_comm_status varchar(2),
    OUT p_comm_begin_date int,
    OUT p_comm_end_date int,
    OUT p_comm_begin_time int,
    OUT p_comm_end_time int,
    OUT p_comm_comple_date int,
    OUT p_comm_comple_time int,
    OUT p_comm_appr_status varchar(2),
    OUT p_exter_comm_flag int,
    OUT p_strategy_capt_qty decimal(18,2),
    OUT p_strategy_order_qty decimal(18,2),
    OUT p_comm_oper_way varchar(2),
    OUT p_combo_code varchar(32),
    OUT p_combo_posi_id bigint,
    OUT p_target_stock_code varchar(6),
    OUT p_target_stock_code_no int,
    OUT p_contra_no varchar(32),
    OUT p_disp_status int,
    OUT p_exist_debt_flag int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_acco varchar(16);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_status varchar(2);
    declare v_exter_comm_flag int;
    declare v_strategy_capt_qty decimal(18,2);
    declare v_strategy_order_qty decimal(18,2);
    declare v_comm_oper_way varchar(2);
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_contra_no varchar(32);
    declare v_disp_status int;
    declare v_exist_debt_flag int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_comple_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_asset_acco_type int;
    declare v_disp_opor int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_acco = " ";
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_exter_comm_flag = 0;
    SET v_strategy_capt_qty = 0;
    SET v_strategy_order_qty = 0;
    SET v_comm_oper_way = " ";
    SET v_combo_code = " ";
    SET v_combo_posi_id = 0;
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_contra_no = " ";
    SET v_disp_status = 0;
    SET v_exist_debt_flag = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_comple_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_asset_acco_type = 0;
    SET v_disp_opor = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][4][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.12.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_acco = v_stock_acco;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_comm_date = v_comm_date;
    SET p_comm_time = v_comm_time;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_qty = v_comm_qty;
    SET p_comm_amt = v_comm_amt;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_qty = v_strike_qty;
    SET p_comm_frozen_amt = v_comm_frozen_amt;
    SET p_comm_frozen_qty = v_comm_frozen_qty;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_impawn_ratio = v_impawn_ratio;
    SET p_intrst_days = v_intrst_days;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_capit_reback_days = v_capit_reback_days;
    SET p_posi_reback_days = v_posi_reback_days;
    SET p_strike_status = v_strike_status;
    SET p_comm_status = v_comm_status;
    SET p_comm_begin_date = v_comm_begin_date;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_begin_time = v_comm_begin_time;
    SET p_comm_end_time = v_comm_end_time;
    SET p_comm_comple_date = v_comm_comple_date;
    SET p_comm_comple_time = v_comm_comple_time;
    SET p_comm_appr_status = v_comm_appr_status;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_strategy_capt_qty = v_strategy_capt_qty;
    SET p_strategy_order_qty = v_strategy_order_qty;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_combo_code = v_combo_code;
    SET p_combo_posi_id = v_combo_posi_id;
    SET p_target_stock_code = v_target_stock_code;
    SET p_target_stock_code_no = v_target_stock_code_no;
    SET p_contra_no = v_contra_no;
    SET p_disp_status = v_disp_status;
    SET p_exist_debt_flag = v_exist_debt_flag;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_修改指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ModiComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ModiComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_stock_type int,
    IN p_comm_id bigint,
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_comm_qty decimal(18,2),
    IN p_comm_amt decimal(18,4),
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_par_value decimal(16,9),
    IN p_impawn_ratio decimal(18,12),
    IN p_net_price_flag int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_modi_info varchar(255),
    IN p_read_flag int,
    IN p_comm_remark_info varchar(1024),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_occur_amt decimal(18,4),
    OUT p_comm_occur_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_stock_type int;
    declare v_comm_id bigint;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_modi_info varchar(255);
    declare v_read_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);
    declare v_tmp_comm_qty decimal(18,2);
    declare v_tmp_comm_amt decimal(18,4);
    declare v_tmp_comm_begin_date int;
    declare v_tmp_comm_end_date int;
    declare v_tmp_comm_begin_time int;
    declare v_tmp_comm_end_time int;
    declare v_tmp_comm_remark_info varchar(1024);
    declare v_tmp_read_flag int;
    declare v_comm_status varchar(2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_intrst_days int;
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_jour_occur_field varchar(2048);
    declare v_jour_occur_info varchar(2048);
    declare v_comm_capt_qty decimal(18,2);
    declare v_occur_qty decimal(18,2);
    declare v_occur_amt decimal(18,4);
    declare v_calc_dir int;
    declare v_jour_after_occur_info varchar(2048);
    declare v_remark_info varchar(255);
    declare v_tmp_comm_occur_amt decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_stock_type = p_stock_type;
    SET v_comm_id = p_comm_id;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_amt = p_comm_amt;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_par_value = p_par_value;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_net_price_flag = p_net_price_flag;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_modi_info = p_modi_info;
    SET v_read_flag = p_read_flag;
    SET v_comm_remark_info = p_comm_remark_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_occur_amt = 0;
    SET v_comm_occur_qty = 0;
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;
    SET v_tmp_comm_qty = 0;
    SET v_tmp_comm_amt = 0;
    SET v_tmp_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_remark_info = " ";
    SET v_tmp_read_flag = 0;
    SET v_comm_status = "0";
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_intrst_days = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_jour_occur_field = " ";
    SET v_jour_occur_info = " ";
    SET v_comm_capt_qty = 0;
    SET v_occur_qty = 0;
    SET v_occur_amt = 0;
    SET v_calc_dir = 1;
    SET v_jour_after_occur_info = " ";
    SET v_remark_info = " ";
    SET v_tmp_comm_occur_amt = 0;

    
    label_pro:BEGIN
    

    /* [获取机器日期][@指令完成日期#] */
    select date_format(curdate(),'%Y%m%d') into v_comm_comple_date;


    /* [获取机器时间][@指令完成时间#] */
    select date_format(curtime(),'%H%i%s') into v_comm_comple_time;


    /* set @临时_指令限价#=@指令限价#; */
    set v_tmp_comm_limit_price=v_comm_limit_price;

    /* set @临时_指令实际限价#=@指令实际限价#; */
    set v_tmp_limit_actual_price=v_limit_actual_price;

    /* set @临时_指令数量#=@指令数量#; */
    set v_tmp_comm_qty=v_comm_qty;

    /* set @临时_指令金额#=@指令金额#; */
    set v_tmp_comm_amt=v_comm_amt;

    /* set @临时_指令开始日期# = @指令开始日期#; */
    set v_tmp_comm_begin_date = v_comm_begin_date;

    /* set @临时_指令结束日期# = @指令结束日期#; */
    set v_tmp_comm_end_date = v_comm_end_date;

    /* set @临时_指令开始时间# = @指令开始时间#; */
    set v_tmp_comm_begin_time = v_comm_begin_time;

    /* set @临时_指令结束时间# = @指令结束时间#; */
    set v_tmp_comm_end_time = v_comm_end_time;

    /* set @临时_指令备注信息# = @指令备注信息#; */
    set v_tmp_comm_remark_info = v_comm_remark_info;

    /* set @临时_已读标记# = @已读标记#; */
    set v_tmp_read_flag = v_read_flag;

    /* set @指令状态#=《指令状态-全部撤销》; */
    set v_comm_status="6";
    #获取当前指令数量，以计算指令撤销数量和变动金额

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][4][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.13.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [获取流水变动][{指令限价},{指令实际限价},{指令数量},{指令金额},{指令撤销数量},{指令冻结金额},{指令冻结数量},{成交状态},{指令状态},{指令开始日期},{指令结束日期},{指令开始时间},{指令结束时间}][@指令限价#,@指令实际限价#,@指令数量#,@指令金额#,@指令撤销数量#,@指令冻结金额#,@指令冻结数量#,@成交状态#,@指令状态#,@指令开始日期#,@指令结束日期#,@指令开始时间#,@指令结束时间#]; */
    set v_jour_occur_field = concat("指令限价","|","指令实际限价","|","指令数量","|","指令金额","|","指令撤销数量","|","指令冻结金额","|","指令冻结数量","|","成交状态","|","指令状态","|","指令开始日期","|","指令结束日期","|","指令开始时间","|","指令结束时间","|");
    set v_jour_occur_info = concat(v_comm_limit_price,"|",v_limit_actual_price,"|",v_comm_qty,"|",v_comm_amt,"|",v_comm_cancel_qty,"|",v_comm_frozen_amt,"|",v_comm_frozen_qty,"|",v_strike_status,"|",v_comm_status,"|",v_comm_begin_date,"|",v_comm_end_date,"|",v_comm_begin_time,"|",v_comm_end_time,"|");

    #用于修改汇总表时判断，是否只有一笔

    /* set @指令占用数量# = @指令数量#; */
    set v_comm_capt_qty = v_comm_qty;

    /* set @已读标记# = @临时_已读标记#; */
    set v_read_flag = v_tmp_read_flag;

    /* [检查报错返回][((@指令方向#=《指令方向-质押提交》) or (@指令方向#>《指令方向-质押转回》)) and @指令限价# =0][623][@指令限价#] */
    if ((v_comm_dir=21) or (v_comm_dir>22)) and v_comm_limit_price =0 then
        
        SET v_error_code = "tdsecuA.3.13.623";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令限价=",v_comm_limit_price);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][(@指令状态#=《指令状态-待撤销》 or @指令状态#=《指令状态-部分撤销》 or @指令状态#=《指令状态-全部撤销》 or @成交状态#=《成交状态-已成》) and @已读标记# <>《已读标记-已读》 ][624][@指令状态#,@成交状态#] */
    if (v_comm_status="4" or v_comm_status="5" or v_comm_status="6" or v_strike_status="3") and v_read_flag <>1  then
        
        SET v_error_code = "tdsecuA.3.13.624";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令状态=",v_comm_status,",","成交状态=",v_strike_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令状态=",v_comm_status,",","成交状态=",v_strike_status);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@临时_指令数量# < @订单数量# ][625][@临时_指令数量#,@订单数量#] */
    if v_tmp_comm_qty < v_order_qty  then
        
        SET v_error_code = "tdsecuA.3.13.625";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_指令数量=",v_tmp_comm_qty,",","订单数量=",v_order_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_指令数量=",v_tmp_comm_qty,",","订单数量=",v_order_qty);
        end if;
        leave label_pro;
    end if;

    #计算变动数量和金额，用于指令汇总表处理

    /* set @变动数量#=@临时_指令数量# - @指令数量#; */
    set v_occur_qty=v_tmp_comm_qty - v_comm_qty;

    /* set @变动金额#=@临时_指令数量# * @临时_指令实际限价# - @指令数量# * @指令实际限价#; */
    set v_occur_amt=v_tmp_comm_qty * v_tmp_limit_actual_price - v_comm_qty * v_limit_actual_price;
    #计算指令变动金额和指令变动数量

    /* set @指令变动数量#=@临时_指令数量# - @指令数量#; */
    set v_comm_occur_qty=v_tmp_comm_qty - v_comm_qty;

    /* set @指令变动金额# = 0; */
    set v_comm_occur_amt = 0;

    /* if @指令方向# = 《指令方向-买入》   or @指令方向# = 《指令方向-买券还券》  or @指令方向# = 《指令方向-直接还款》  then */
    if v_comm_dir = 1   or v_comm_dir = 8  or v_comm_dir = 14  then

        /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * @临时_指令实际限价# - @指令冻结金额#; */
        set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * v_tmp_limit_actual_price - v_comm_frozen_amt;

        /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
        if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

          /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * (@临时_指令实际限价# + @债券计提利息#) - @指令冻结金额#; */
          set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * (v_tmp_limit_actual_price + v_bond_accr_intrst) - v_comm_frozen_amt;
        end if;

    /* elseif @指令方向# = 《指令方向-融资买入》    then */
    elseif v_comm_dir = 5    then

        /* set @指令变动金额# =(@临时_指令数量# - @订单数量#) * @临时_指令实际限价# -(@指令数量# - @订单数量#) * @指令实际限价#; */
        set v_comm_occur_amt =(v_tmp_comm_qty - v_order_qty) * v_tmp_limit_actual_price -(v_comm_qty - v_order_qty) * v_limit_actual_price;

        /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
        if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

            /* set @指令变动金额# =(@临时_指令数量# - @订单数量#) *  (@临时_指令实际限价# + @债券计提利息#) -(@指令数量# - @订单数量#) *  (@指令实际限价# + @债券计提利息#); */
            set v_comm_occur_amt =(v_tmp_comm_qty - v_order_qty) *  (v_tmp_limit_actual_price + v_bond_accr_intrst) -(v_comm_qty - v_order_qty) *  (v_limit_actual_price + v_bond_accr_intrst);
        end if;

    /* elseif @指令方向# = 《指令方向-卖出》  or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》   then */
    elseif v_comm_dir = 2  or v_comm_dir = 6 or v_comm_dir = 7   then

        /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * @临时_指令实际限价# - (@指令数量# - @订单数量#) * @指令实际限价#; */
        set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * v_tmp_limit_actual_price - (v_comm_qty - v_order_qty) * v_limit_actual_price;

        /* if @证券类型# > 20 and @证券类型# < 50 and @净价标志# = 《净价标志-净价》 and @债券利率类型# <> 《债券利率类型-零息》 then */
        if v_stock_type > 20 and v_stock_type < 50 and v_net_price_flag = 1 and v_bond_rate_type <> 3 then

          /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * (@临时_指令实际限价# + @债券计提利息#) - (@指令数量# - @订单数量#) * (@指令实际限价# + @债券计提利息#) ; */
          set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * (v_tmp_limit_actual_price + v_bond_accr_intrst) - (v_comm_qty - v_order_qty) * (v_limit_actual_price + v_bond_accr_intrst) ;
        end if;

    /* elseif @指令方向# = 《指令方向-融资回购》 then */
    elseif v_comm_dir = 3 then

        /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * @票面面值# - (@指令数量# - @订单数量#) * @票面面值#; */
        set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * v_par_value - (v_comm_qty - v_order_qty) * v_par_value;

    /* elseif @指令方向# = 《指令方向-融券回购》 then */
    elseif v_comm_dir = 4 then

        /* set @指令变动金额# = (@临时_指令数量# - @订单数量#) * @票面面值# - @指令冻结金额#; */
        set v_comm_occur_amt = (v_tmp_comm_qty - v_order_qty) * v_par_value - v_comm_frozen_amt;
    end if;
    #重置回来输入参数值

    /* set @指令限价#=@临时_指令限价#; */
    set v_comm_limit_price=v_tmp_comm_limit_price;

    /* set @指令实际限价#=@临时_指令实际限价#; */
    set v_limit_actual_price=v_tmp_limit_actual_price;

    /* set @指令数量#=@临时_指令数量#; */
    set v_comm_qty=v_tmp_comm_qty;

    /* set @指令金额#=@临时_指令金额#; */
    set v_comm_amt=v_tmp_comm_amt;

    /* set @指令开始日期# = @临时_指令开始日期#; */
    set v_comm_begin_date = v_tmp_comm_begin_date;

    /* set @指令结束日期# = @临时_指令结束日期#; */
    set v_comm_end_date = v_tmp_comm_end_date;

    /* set @指令开始时间# = @临时_指令开始时间#; */
    set v_comm_begin_time = v_tmp_comm_begin_time;

    /* set @指令结束时间# = @临时_指令结束时间#; */
    set v_comm_end_time = v_tmp_comm_end_time;
    #计算新的冻结金额数量

    /* set @指令冻结金额# = 0; */
    set v_comm_frozen_amt = 0;

    /* set @指令冻结数量# = 0; */
    set v_comm_frozen_qty = 0;

    /* set @计算方向# = 《计算方向-加上》; */
    set v_calc_dir = 1;
    #计算占用的指令有效数量

    /* set @指令数量#=@指令数量#-@订单数量#-@指令撤销数量#; */
    set v_comm_qty=v_comm_qty-v_order_qty-v_comm_cancel_qty;

    /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# =《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-买券还券》 or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还款》 then */
    if v_comm_dir = 5 or v_comm_dir =6 or v_comm_dir = 7 or v_comm_dir = 8 or v_comm_dir = 14 or v_comm_dir = 14 then

        /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_comm_dir,
            v_limit_actual_price,
            v_comm_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_calc_dir,
            v_comm_amt,
            v_error_code,
            v_error_info,
            v_comm_frozen_amt,
            v_comm_frozen_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.13.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    else

        /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_comm_dir,
            v_limit_actual_price,
            v_comm_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_calc_dir,
            v_error_code,
            v_error_info,
            v_comm_frozen_amt,
            v_comm_frozen_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.13.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* set @指令数量#=@临时_指令数量#; */
    set v_comm_qty=v_tmp_comm_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.13.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.13.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令备注信息# = @临时_指令备注信息#; */
    set v_comm_remark_info = v_tmp_comm_remark_info;

    /* [更新表记录][交易证券_指令_指令表][{指令数量}=@指令数量#,{指令金额}=@指令金额#, {指令限价}=@指令限价#, {指令实际限价}=@指令实际限价#, {指令开始日期}=@指令开始日期#, {指令开始时间}=@指令开始时间#, {指令结束日期}=@指令结束日期#, {指令结束时间}=@指令结束时间#,{指令冻结金额}=@指令冻结金额#, {指令冻结数量}=@指令冻结数量#, {指令状态}=@指令状态#,{指令完成日期}= @指令完成日期#,{指令完成时间}=@指令完成时间#,{成交状态} = @成交状态#,{指令备注信息}=@指令备注信息#,{已读标记} = @已读标记#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_qty=v_comm_qty,comm_amt=v_comm_amt, comm_limit_price=v_comm_limit_price, limit_actual_price=v_limit_actual_price, comm_begin_date=v_comm_begin_date, comm_begin_time=v_comm_begin_time, comm_end_date=v_comm_end_date, comm_end_time=v_comm_end_time,comm_frozen_amt=v_comm_frozen_amt, comm_frozen_qty=v_comm_frozen_qty, comm_status=v_comm_status,comm_comple_date= v_comm_comple_date,comm_comple_time=v_comm_comple_time,strike_status = v_strike_status,comm_remark_info=v_comm_remark_info,read_flag = v_read_flag where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.13.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [获取流水后信息][@指令限价#,@指令实际限价#,@指令数量#,@指令金额#,@指令撤销数量#,@指令冻结金额#,@指令冻结数量#,@成交状态#,@指令状态#,@指令开始日期#,@指令结束日期#,@指令开始时间#,@指令结束时间#,@备注信息#]; */
    set v_jour_after_occur_info = concat(v_comm_limit_price,"|",v_limit_actual_price,"|",v_comm_qty,"|",v_comm_amt,"|",v_comm_cancel_qty,"|",v_comm_frozen_amt,"|",v_comm_frozen_qty,"|",v_strike_status,"|",v_comm_status,"|",v_comm_begin_date,"|",v_comm_end_date,"|",v_comm_begin_time,"|",v_comm_end_time,"|",v_remark_info,"|");

    #流水表的备注信息 和指令表备注信息不一样。  修改指令的备注信息为了判断体外指令界面是否隐藏。

    /* set @备注信息#=@修改说明#; */
    set v_remark_info=v_modi_info;

    /* set @操作功能#=@功能编码#; */
    set v_oper_func_code=v_func_code;

    /* [插入表记录][交易证券_指令_指令流水表][字段][字段变量][1][@初始化日期#,@指令序号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command_jour(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, comm_date, comm_id, jour_occur_field, 
        jour_occur_info, jour_after_occur_info, remark_info, exter_comm_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_comm_date, v_comm_id, v_jour_occur_field, 
        v_jour_occur_info, v_jour_after_occur_info, v_remark_info, v_exter_comm_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.13.1";
        SET v_error_info =  CONCAT(concat("初始化日期=",v_init_date,",","指令序号=",v_comm_id),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* set @临时_指令变动金额# = @指令变动金额#; */
    set v_tmp_comm_occur_amt = v_comm_occur_amt;

    /* set @指令变动金额# = @变动金额#; */
    set v_comm_occur_amt = v_occur_amt;

    /* if @市场编号# =《市场编号-沪港通证券交易所》 or @市场编号# =《市场编号-深港通证券交易所》 then */
    if v_exch_no =3 or v_exch_no =4 then

        /* if @指令方向# = 《指令方向-买入》 then */
        if v_comm_dir = 1 then

            /* set @指令变动金额# = round(@指令变动金额# * @卖出参考汇率#,2); */
            set v_comm_occur_amt = round(v_comm_occur_amt * v_sell_ref_rate,2);
        else

            /* set @指令变动金额# = round(@指令变动金额# * @买入参考汇率#,2); */
            set v_comm_occur_amt = round(v_comm_occur_amt * v_buy_ref_rate,2);
        end if;
    end if;
    #更新汇总指令表记录

    /* 调用【原子_交易证券_指令_修改指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_ModiCommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_dir,
        v_comm_limit_price,
        v_limit_actual_price,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_begin_date,
        v_comm_end_date,
        v_comm_begin_time,
        v_comm_end_time,
        v_comm_appr_status,
        v_comm_capt_qty,
        v_comm_occur_qty,
        v_comm_occur_amt,
        v_comm_oper_way,
        v_read_flag,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.13.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_修改指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令变动金额# = @临时_指令变动金额#; */
    set v_comm_occur_amt = v_tmp_comm_occur_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_occur_amt = v_comm_occur_amt;
    SET p_comm_occur_qty = v_comm_occur_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验订单指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckOrderComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckOrderComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_order_date int,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_price_type int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_batch_no int,
    OUT p_exter_comm_flag int,
    OUT p_comm_date int,
    OUT p_comm_executor int,
    OUT p_comm_opor int,
    OUT p_comm_oper_way varchar(2),
    OUT p_comm_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_order_date int;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_price_type int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_batch_no int;
    declare v_exter_comm_flag int;
    declare v_comm_date int;
    declare v_comm_executor int;
    declare v_comm_opor int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_amt decimal(18,4);
    declare v_mach_time int;
    declare v_tmp_order_qty decimal(18,2);
    declare v_comm_status varchar(2);
    declare v_comm_appr_status varchar(2);
    declare v_comm_end_date int;
    declare v_comm_begin_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_disp_status int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_order_date = p_order_date;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_order_qty = p_order_qty;
    SET v_price_type = p_price_type;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_comm_batch_no = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_executor = 0;
    SET v_comm_opor = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_amt = 0;
    SET v_mach_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_order_qty = 0;
    SET v_comm_status = "0";
    SET v_comm_appr_status = " ";
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_disp_status = 0;

    
    label_pro:BEGIN
    

    /* [获取机器时间][@机器时间#] */
    select date_format(curtime(),'%H%i%s') into v_mach_time;


    /* set @临时_订单数量#=@订单数量#; */
    set v_tmp_order_qty=v_order_qty;
    #获取指令信息，检查指令状态

    /* [获取表记录变量][交易证券_指令_指令表][{指令状态},{指令审批状态},{指令执行人},{指令结束日期},{指令开始日期},{指令开始时间},{指令结束时间},{指令数量},{订单数量},{指令撤销数量},{指令方向},{指令限价},{指令实际限价},{指令批号},{体外指令标志},{指令下达人},{指令操作方式},{指令金额},{分发状态}][@指令状态#,@指令审批状态#,@指令执行人#,@指令结束日期#,@指令开始日期#,@指令开始时间#,@指令结束时间#,@指令数量#,@订单数量#,@指令撤销数量#,@指令方向#,@指令限价#,@指令实际限价#,@指令批号#,@体外指令标志#,@指令下达人#,@指令操作方式#,@指令金额#,@分发状态#][{记录序号}=@指令序号#][1][@指令序号#] */
    select comm_status,comm_appr_status,comm_executor,comm_end_date,comm_begin_date,comm_begin_time,comm_end_time,comm_qty,order_qty,comm_cancel_qty,comm_dir,comm_limit_price,limit_actual_price,comm_batch_no,exter_comm_flag,comm_opor,comm_oper_way,comm_amt,disp_status into v_comm_status,v_comm_appr_status,v_comm_executor,v_comm_end_date,v_comm_begin_date,v_comm_begin_time,v_comm_end_time,v_comm_qty,v_order_qty,v_comm_cancel_qty,v_comm_dir,v_comm_limit_price,v_limit_actual_price,v_comm_batch_no,v_exter_comm_flag,v_comm_opor,v_comm_oper_way,v_comm_amt,v_disp_status from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.14.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #数量是否满足指令要求

    /* [检查报错返回][@指令审批状态# <> 《指令审批状态-审批通过》 and @指令审批状态# <> 《指令审批状态-不审批》][626][@指令审批状态#] */
    if v_comm_appr_status <> "2" and v_comm_appr_status <> "4" then
        
        SET v_error_code = "tdsecuA.3.14.626";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令审批状态=",v_comm_appr_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令审批状态=",v_comm_appr_status);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@分发状态# <> 《分发状态-分发通过》 and @分发状态# <> 《分发状态-不分发》][627][@分发状态#] */
    if v_disp_status <> 1 and v_disp_status <> 4 then
        
        SET v_error_code = "tdsecuA.3.14.627";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("分发状态=",v_disp_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("分发状态=",v_disp_status);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@指令执行人#=0][627][@指令执行人#] */
    if v_comm_executor=0 then
        
        SET v_error_code = "tdsecuA.3.14.627";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@操作员编号# <> @指令执行人# ][628][@操作员编号#,@指令执行人#] */
    if v_opor_no <> v_comm_executor  then
        
        SET v_error_code = "tdsecuA.3.14.628";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("操作员编号=",v_opor_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("操作员编号=",v_opor_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@指令状态#=《指令状态-暂停执行》][804][@指令状态#] */
    if v_comm_status="7" then
        
        SET v_error_code = "tdsecuA.3.14.804";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令状态=",v_comm_status),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令状态=",v_comm_status);
        end if;
        leave label_pro;
    end if;


    /* if @指令结束日期# <> 0 or @指令开始日期# <> 0 or @指令开始时间# <> 0 or @指令开始时间# <> 0 then */
    if v_comm_end_date <> 0 or v_comm_begin_date <> 0 or v_comm_begin_time <> 0 or v_comm_begin_time <> 0 then

        /* [检查报错返回][@订单日期#>@指令结束日期# or @订单日期# < @指令开始日期# or (@订单日期#=@指令开始日期# and @机器时间# < @指令开始时间#) or (@订单日期#=@指令结束日期# and @机器时间#>@指令结束时间#)][629][@指令开始日期#,@指令开始时间# ,@指令结束日期#,@指令结束时间#] */
        if v_order_date>v_comm_end_date or v_order_date < v_comm_begin_date or (v_order_date=v_comm_begin_date and v_mach_time < v_comm_begin_time) or (v_order_date=v_comm_end_date and v_mach_time>v_comm_end_time) then
            
            SET v_error_code = "tdsecuA.3.14.629";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令开始日期=",v_comm_begin_date,",","指令开始时间 =",v_comm_begin_time ,",","指令结束日期=",v_comm_end_date,",","指令结束时间=",v_comm_end_time),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令开始日期=",v_comm_begin_date,",","指令开始时间 =",v_comm_begin_time ,",","指令结束日期=",v_comm_end_date,",","指令结束时间=",v_comm_end_time);
            end if;
            leave label_pro;
        end if;

    end if;

    /* [检查报错返回][@临时_订单数量#>@指令数量# - @订单数量# - @指令撤销数量#][630][@临时_订单数量#,@指令数量#,@订单数量#,@指令撤销数量#] */
    if v_tmp_order_qty>v_comm_qty - v_order_qty - v_comm_cancel_qty then
        
        SET v_error_code = "tdsecuA.3.14.630";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty);
        end if;
        leave label_pro;
    end if;

    #校验方向是否一致

    /* [检查报错返回][@订单方向# <> @指令方向#][631]["订单下达失败：订单方向与指令方向不一致"] */
    if v_order_dir <> v_comm_dir then
        
        SET v_error_code = "tdsecuA.3.14.631";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT("订单下达失败：订单方向与指令方向不一致","#",v_mysql_message);
        else
            SET v_error_info = "订单下达失败：订单方向与指令方向不一致";
        end if;
        leave label_pro;
    end if;

    #价格是否满足指令要求

    /* if @订单方向#=《订单方向-买入》  or @订单方向#=《订单方向-融资买入》 or @订单方向#=《订单方向-买券还券》 then */
    if v_order_dir=1  or v_order_dir=5 or v_order_dir=8 then

        /* [检查报错返回][@指令限价# <> 0 and @订单价格#>@指令限价#][632][@订单价格#,@指令限价#] */
        if v_comm_limit_price <> 0 and v_order_price>v_comm_limit_price then
            
            SET v_error_code = "tdsecuA.3.14.632";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @订单方向#=《订单方向-卖出》 or @订单方向#=《订单方向-融券卖出》 or @订单方向#=《订单方向-卖券还款》 then */
    if v_order_dir=2 or v_order_dir=6 or v_order_dir=7 then

        /* [检查报错返回][@指令限价# <> 0 and @订单价格# < @指令限价#][632][@订单价格#,@指令限价#] */
        if v_comm_limit_price <> 0 and v_order_price < v_comm_limit_price then
            
            SET v_error_code = "tdsecuA.3.14.632";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @订单方向#=《订单方向-融资回购》 then */
    if v_order_dir=3 then

        /* [检查报错返回][@指令限价# <> 0 and @订单价格#>@指令限价#][632][@订单价格#,@指令限价#] */
        if v_comm_limit_price <> 0 and v_order_price>v_comm_limit_price then
            
            SET v_error_code = "tdsecuA.3.14.632";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @订单方向#=《订单方向-融券回购》 then */
    if v_order_dir=4 then

        /* [检查报错返回][@指令限价# <> 0 and @订单价格# < @指令限价#][632][@订单价格#,@指令限价#] */
        if v_comm_limit_price <> 0 and v_order_price < v_comm_limit_price then
            
            SET v_error_code = "tdsecuA.3.14.632";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @订单方向#=《订单方向-新股申购》 or @订单方向#=《订单方向-配售申购》 then */
    if v_order_dir=11 or v_order_dir=23 then

        /* [检查报错返回][@指令限价# <> 0 and @订单价格# <> @指令限价#][632][@订单价格#,@指令限价#] */
        if v_comm_limit_price <> 0 and v_order_price <> v_comm_limit_price then
            
            SET v_error_code = "tdsecuA.3.14.632";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price),"#",v_mysql_message);
            else
                SET v_error_info = concat("订单价格=",v_order_price,",","指令限价=",v_comm_limit_price);
            end if;
            leave label_pro;
        end if;

    end if;

    /* [检查报错返回][@指令限价# <> 0 and @价格类型# <> 《价格类型-限价》 and @价格类型# <> 《价格类型-增强限价盘》  and @价格类型# <> 《价格类型-竞价限价盘》 ][633][@指令限价#,@价格类型#] */
    if v_comm_limit_price <> 0 and v_price_type <> 1 and v_price_type <> 9  and v_price_type <> 10  then
        
        SET v_error_code = "tdsecuA.3.14.633";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,",","价格类型=",v_price_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令限价=",v_comm_limit_price,",","价格类型=",v_price_type);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_comm_date = v_comm_date;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_comm_amt = v_comm_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_检查改单指令业务
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckModiOrderComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckModiOrderComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_id bigint,
    IN p_order_date int,
    IN p_order_id bigint,
    IN p_modi_batch_no int,
    IN p_modi_order_price decimal(16,9),
    IN p_modi_order_qty decimal(18,2),
    IN p_modi_price_type int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_id bigint;
    declare v_order_date int;
    declare v_order_id bigint;
    declare v_modi_batch_no int;
    declare v_modi_order_price decimal(16,9);
    declare v_modi_order_qty decimal(18,2);
    declare v_modi_price_type int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_id = p_comm_id;
    SET v_order_date = p_order_date;
    SET v_order_id = p_order_id;
    SET v_modi_batch_no = p_modi_batch_no;
    SET v_modi_order_price = p_modi_order_price;
    SET v_modi_order_qty = p_modi_order_qty;
    SET v_modi_price_type = p_modi_price_type;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.15.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@改单数量# > @指令数量#][2][concat("改单下达失败：订单数量超出指令数量， 改单数量 = ", @改单数量#, " 指令数量 = ", @指令数量#)] */
    if v_modi_order_qty > v_comm_qty then
        
        SET v_error_code = "tdsecuA.3.15.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("改单下达失败：订单数量超出指令数量， 改单数量 = ", v_modi_order_qty, " 指令数量 = ", v_comm_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("改单下达失败：订单数量超出指令数量， 改单数量 = ", v_modi_order_qty, " 指令数量 = ", v_comm_qty);
        end if;
        leave label_pro;
    end if;

    #价格是否满足指令要求

    /* if @指令方向# = 《指令方向-买入》 or  @指令方向# = 《指令方向-融资买入》 or  @指令方向# = 《指令方向-买券还券》 then */
    if v_comm_dir = 1 or  v_comm_dir = 5 or  v_comm_dir = 8 then

      /* [检查报错返回][@指令限价# <> 0 and @改单价格# > @指令限价#][632][@指令限价#, @改单价格#] */
      if v_comm_limit_price <> 0 and v_modi_order_price > v_comm_limit_price then
          
          SET v_error_code = "tdsecuA.3.15.632";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price),"#",v_mysql_message);
          else
              SET v_error_info = concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price);
          end if;
          leave label_pro;
      end if;

    end if;

    /* if @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》 then */
    if v_comm_dir = 2 or v_comm_dir = 6 or v_comm_dir = 7 then

      /* [检查报错返回][@指令限价# <> 0 and @改单价格# < @指令限价#][632][@指令限价#, @改单价格#] */
      if v_comm_limit_price <> 0 and v_modi_order_price < v_comm_limit_price then
          
          SET v_error_code = "tdsecuA.3.15.632";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price),"#",v_mysql_message);
          else
              SET v_error_info = concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price);
          end if;
          leave label_pro;
      end if;

    end if;

    /* if @指令方向# = 《指令方向-融资回购》 then */
    if v_comm_dir = 3 then

      /* [检查报错返回][@指令限价# <> 0 and @改单价格# > @指令限价#][632][@指令限价#, @改单价格#] */
      if v_comm_limit_price <> 0 and v_modi_order_price > v_comm_limit_price then
          
          SET v_error_code = "tdsecuA.3.15.632";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price),"#",v_mysql_message);
          else
              SET v_error_info = concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price);
          end if;
          leave label_pro;
      end if;

    end if;

    /* if @指令方向# = 《指令方向-融券回购》 then */
    if v_comm_dir = 4 then

      /* [检查报错返回][@指令限价# <> 0 and @改单价格# < @指令限价#][632][@指令限价#, @改单价格#] */
      if v_comm_limit_price <> 0 and v_modi_order_price < v_comm_limit_price then
          
          SET v_error_code = "tdsecuA.3.15.632";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price),"#",v_mysql_message);
          else
              SET v_error_info = concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price);
          end if;
          leave label_pro;
      end if;

    end if;

    /* if @指令方向# = 《指令方向-新股申购》 or @指令方向#=《指令方向-配售申购》 then */
    if v_comm_dir = 11 or v_comm_dir=23 then

      /* [检查报错返回][@指令限价# <> 0 and @改单价格# <> @指令限价#][632][@指令限价#, @改单价格#] */
      if v_comm_limit_price <> 0 and v_modi_order_price <> v_comm_limit_price then
          
          SET v_error_code = "tdsecuA.3.15.632";
          if v_mysql_message <> "" then
              SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price),"#",v_mysql_message);
          else
              SET v_error_info = concat("指令限价=",v_comm_limit_price,","," 改单价格=", v_modi_order_price);
          end if;
          leave label_pro;
      end if;

    end if;

    /* [检查报错返回][@指令限价# <> 0 and @改单价格类型# <> 1][633][@指令限价#,@改单价格类型#] */
    if v_comm_limit_price <> 0 and v_modi_price_type <> 1 then
        
        SET v_error_code = "tdsecuA.3.15.633";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令限价=",v_comm_limit_price,",","改单价格类型=",v_modi_price_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令限价=",v_comm_limit_price,",","改单价格类型=",v_modi_price_type);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_分发指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_DispComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_DispComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_date int,
    IN p_comm_id bigint,
    IN p_comm_batch_no int,
    IN p_comm_dir int,
    IN p_comm_status varchar(2),
    IN p_comm_executor int,
    IN p_disp_flag int,
    IN p_disp_remark varchar(255),
    IN p_before_comm_executor int,
    IN p_is_withdraw int,
    IN p_exter_comm_flag int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_id bigint;
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_status varchar(2);
    declare v_comm_executor int;
    declare v_disp_flag int;
    declare v_disp_remark varchar(255);
    declare v_before_comm_executor int;
    declare v_is_withdraw int;
    declare v_exter_comm_flag int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_disp_time int;
    declare v_disp_date int;
    declare v_oper_func_code varchar(16);
    declare v_comm_remark_info varchar(1024);
    declare v_update_date int;
    declare v_update_time int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_times int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_date = p_comm_date;
    SET v_comm_id = p_comm_id;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_status = p_comm_status;
    SET v_comm_executor = p_comm_executor;
    SET v_disp_flag = p_disp_flag;
    SET v_disp_remark = p_disp_remark;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_is_withdraw = p_is_withdraw;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_disp_time = date_format(curtime(),'%H%i%s');
    SET v_disp_date = date_format(curdate(),'%Y%m%d');
    SET v_oper_func_code = " ";
    SET v_comm_remark_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_comm_appr_qty = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [获取机器时间][@分发时间#] */
    select date_format(curtime(),'%H%i%s') into v_disp_time;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* set @操作功能# = @功能编码#; */
    set v_oper_func_code = v_func_code;

    /* set @指令备注信息#=" "; */
    set v_comm_remark_info=" ";

    /* [更新表记录][交易证券_指令_指令表][{指令执行人}=@指令执行人#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_executor=v_comm_executor where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.16.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #获取指令信息，检查指令状态

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.16.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* [插入表记录][交易证券_指令_指令分发表][字段][字段变量][1][@指令序号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command_dispense(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, comm_date, 
        comm_id, comm_batch_no, comm_dir, comm_status, 
        comm_opor, disp_date, disp_time, before_comm_executor, 
        comm_executor, is_withdraw, disp_flag, disp_remark, 
        exter_comm_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_comm_date, 
        v_comm_id, v_comm_batch_no, v_comm_dir, v_comm_status, 
        v_comm_opor, v_disp_date, v_disp_time, v_before_comm_executor, 
        v_comm_executor, v_is_withdraw, v_disp_flag, v_disp_remark, 
        v_exter_comm_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.16.1";
        SET v_error_info =  CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* if @指令审批状态# <> 《指令审批状态-未审批》 then */
    if v_comm_appr_status <> "1" then

        /* set @指令审批数量# = @指令数量#; */
        set v_comm_appr_qty = v_comm_qty;
    end if;

    /* 调用【原子_交易证券_指令_分发更新原汇总指令】*/
    call db_tdsecu.pra_tdseap_DispUpdateOrgBatchComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_date,
        v_co_no,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_status,
        v_strike_status,
        v_comm_appr_status,
        v_before_comm_executor,
        v_sell_ref_rate,
        v_buy_ref_rate,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.16.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_分发更新原汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @买入参考汇率# = 0; */
    set v_buy_ref_rate = 0;

    /* set @卖出参考汇率# = 0; */
    set v_sell_ref_rate = 0;
    #这里需要更新一下转发后的指令

    /* set @账户拼接信息# = ""; */
    set v_acco_concat_info = "";

    /* 调用【原子_交易证券_指令_指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_oper_func_code,
        v_init_date,
        v_comm_date,
        v_comm_time,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_pass_no,
        v_out_acco,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_code_no,
        v_stock_code,
        v_target_code_no,
        v_trade_code_no,
        v_stock_type,
        v_asset_type,
        v_comm_opor,
        v_comm_executor,
        v_comm_batch_no,
        v_comm_dir,
        v_comm_limit_price,
        v_limit_actual_price,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_appr_qty,
        v_comm_begin_date,
        v_comm_end_date,
        v_comm_begin_time,
        v_comm_end_time,
        v_net_price_flag,
        v_par_value,
        v_impawn_ratio,
        v_intrst_days,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_strike_status,
        v_comm_status,
        v_comm_appr_status,
        v_basket_id,
        v_comm_oper_way,
        v_exter_comm_flag,
        v_buy_ref_rate,
        v_sell_ref_rate,
        v_comm_remark_info,
        v_acco_concat_info,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.16.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_分发更新原汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_DispUpdateOrgBatchComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_DispUpdateOrgBatchComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_date int,
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_qty decimal(18,2),
    IN p_comm_amt decimal(18,4),
    IN p_order_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_strike_qty decimal(18,2),
    IN p_comm_status varchar(2),
    IN p_strike_status varchar(2),
    IN p_comm_appr_status varchar(2),
    IN p_before_comm_executor int,
    IN p_sell_ref_rate decimal(18,12),
    IN p_buy_ref_rate decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_date int;
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_status varchar(2);
    declare v_strike_status varchar(2);
    declare v_comm_appr_status varchar(2);
    declare v_before_comm_executor int;
    declare v_sell_ref_rate decimal(18,12);
    declare v_buy_ref_rate decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_comm_executor int;
    declare v_tmp_comm_date int;
    declare v_tmp_co_no int;
    declare v_tmp_comm_batch_no int;
    declare v_tmp_comm_qty decimal(18,2);
    declare v_tmp_comm_amt decimal(18,4);
    declare v_tmp_order_qty decimal(18,2);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_strike_status varchar(2);
    declare v_tmp_comm_appr_status varchar(2);
    declare v_read_flag int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_acco_concat_info varchar(4096);
    declare v_tmp_row_id bigint;
    declare v_tmp_pd_no int;
    declare v_tmp_exch_group_no int;
    declare v_tmp_asset_acco_no int;
    declare v_tmp_pass_no int;
    declare v_tmp_stock_code_no int;
    declare v_tmp_target_code_no int;
    declare v_tmp_trade_code_no int;
    declare v_tmp_stock_type int;
    declare v_tmp_asset_type int;
    declare v_tmp_comm_time int;
    declare v_tmp_comm_opor int;
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);
    declare v_tmp_net_price_flag int;
    declare v_tmp_par_value decimal(16,9);
    declare v_tmp_impawn_ratio decimal(18,12);
    declare v_tmp_intrst_days int;
    declare v_tmp_bond_accr_intrst decimal(18,12);
    declare v_tmp_bond_rate_type int;
    declare v_tmp_exter_comm_flag int;
    declare v_record_count int;
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_date = p_comm_date;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_amt = p_comm_amt;
    SET v_order_qty = p_order_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_qty = p_strike_qty;
    SET v_comm_status = p_comm_status;
    SET v_strike_status = p_strike_status;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_comm_executor = 0;
    SET v_tmp_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_co_no = 0;
    SET v_tmp_comm_batch_no = 0;
    SET v_tmp_comm_qty = 0;
    SET v_tmp_comm_amt = 0;
    SET v_tmp_order_qty = 0;
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_tmp_strike_qty = 0;
    SET v_tmp_comm_status = "0";
    SET v_tmp_strike_status = "0";
    SET v_tmp_comm_appr_status = " ";
    SET v_read_flag = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_acco_concat_info = " ";
    SET v_tmp_row_id = 0;
    SET v_tmp_pd_no = 0;
    SET v_tmp_exch_group_no = 0;
    SET v_tmp_asset_acco_no = 0;
    SET v_tmp_pass_no = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_tmp_target_code_no = 0;
    SET v_tmp_trade_code_no = 0;
    SET v_tmp_stock_type = 0;
    SET v_tmp_asset_type = 0;
    SET v_tmp_comm_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_opor = 0;
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;
    SET v_tmp_net_price_flag = 0;
    SET v_tmp_par_value = 0;
    SET v_tmp_impawn_ratio = 0;
    SET v_tmp_intrst_days = 0;
    SET v_tmp_bond_accr_intrst = 0;
    SET v_tmp_bond_rate_type = 0;
    SET v_tmp_exter_comm_flag = 0;
    SET v_record_count = 0;
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* set @临时_指令执行人#= @指令执行人#; */
    set v_tmp_comm_executor= v_comm_executor;

    /* set @临时_指令日期#= @指令日期#; */
    set v_tmp_comm_date= v_comm_date;

    /* set @临时_机构编号#= @机构编号#; */
    set v_tmp_co_no= v_co_no;

    /* set @临时_指令批号#= @指令批号#; */
    set v_tmp_comm_batch_no= v_comm_batch_no;

    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @临时_指令金额# = @指令金额#; */
    set v_tmp_comm_amt = v_comm_amt;

    /* set @临时_订单数量# = @订单数量#; */
    set v_tmp_order_qty = v_order_qty;

    /* set @临时_指令撤销数量# = @指令撤销数量#; */
    set v_tmp_comm_cancel_qty = v_comm_cancel_qty;

    /* set @临时_成交金额# = @成交金额#; */
    set v_tmp_strike_amt = v_strike_amt;

    /* set @临时_成交数量# = @成交数量#; */
    set v_tmp_strike_qty = v_strike_qty;

    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_成交状态# = @成交状态#; */
    set v_tmp_strike_status = v_strike_status;

    /* set @临时_指令审批状态# = @指令审批状态#; */
    set v_tmp_comm_appr_status = v_comm_appr_status;

    /* set @已读标记# = 《已读标记-未读》; */
    set v_read_flag = 0;

    /* [获取表记录变量语句][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @前指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_before_comm_executor limit 1;


    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{记录序号}=@记录序号#][1][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where row_id=v_row_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.17.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* set @临时_记录序号# = @记录序号#; */
    set v_tmp_row_id = v_row_id;

    /* set @指令数量# = @指令数量# - @临时_指令数量#; */
    set v_comm_qty = v_comm_qty - v_tmp_comm_qty;

    /* if @市场编号# =《市场编号-沪港通证券交易所》 or @市场编号# =《市场编号-深港通证券交易所》 then */
    if v_exch_no =3 or v_exch_no =4 then

        /* if @指令方向# = 《指令方向-买入》 then */
        if v_comm_dir = 1 then

            /* set @临时_指令金额# = round(@临时_指令金额# * @卖出参考汇率#,2); */
            set v_tmp_comm_amt = round(v_tmp_comm_amt * v_sell_ref_rate,2);

            /* set @临时_成交金额# = round(@临时_成交金额# * @卖出参考汇率#,2); */
            set v_tmp_strike_amt = round(v_tmp_strike_amt * v_sell_ref_rate,2);
        else

            /* set @临时_指令金额# = round(@临时_指令金额# * @买入参考汇率#,2); */
            set v_tmp_comm_amt = round(v_tmp_comm_amt * v_buy_ref_rate,2);

            /* set @临时_成交金额# = round(@临时_成交金额# * @买入参考汇率#,2); */
            set v_tmp_strike_amt = round(v_tmp_strike_amt * v_buy_ref_rate,2);
        end if;
    end if;

    /* set @指令金额# = @指令金额# - @临时_指令金额#; */
    set v_comm_amt = v_comm_amt - v_tmp_comm_amt;

    /* set @订单数量# = @订单数量# - @临时_订单数量#; */
    set v_order_qty = v_order_qty - v_tmp_order_qty;

    /* set @成交金额# = @成交金额# - @临时_成交金额#; */
    set v_strike_amt = v_strike_amt - v_tmp_strike_amt;

    /* set @成交数量# = @成交数量# - @临时_成交数量#; */
    set v_strike_qty = v_strike_qty - v_tmp_strike_qty;

    /* if @临时_指令状态# = 《指令状态-待撤销》 or @临时_指令状态# = 《指令状态-部分撤销》 or @临时_指令状态# = 《指令状态-全部撤销》 then */
    if v_tmp_comm_status = "4" or v_tmp_comm_status = "5" or v_tmp_comm_status = "6" then

        /* set @指令待撤销数量# = @指令待撤销数量# - (@临时_指令数量#-@临时_指令撤销数量#-@临时_成交数量#); */
        set v_comm_await_cancel_qty = v_comm_await_cancel_qty - (v_tmp_comm_qty-v_tmp_comm_cancel_qty-v_tmp_strike_qty);

        /* if @指令待撤销数量#<0 then */
        if v_comm_await_cancel_qty<0 then

            /* set @指令待撤销数量# = 0; */
            set v_comm_await_cancel_qty = 0;
        end if;
    end if;

    /* if @临时_指令审批状态# <> 《指令审批状态-未审批》 then */
    if v_tmp_comm_appr_status <> "1" then

        /* set @指令审批数量# = @指令审批数量# - @临时_指令数量#; */
        set v_comm_appr_qty = v_comm_appr_qty - v_tmp_comm_qty;
    end if;
    #计算分类项数据

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 then

        /* set @买入指令数量# = @买入指令数量# - @临时_指令数量#; */
        set v_buy_comm_qty = v_buy_comm_qty - v_tmp_comm_qty;

        /* set @买入指令金额# = @买入指令金额# - @临时_指令金额#; */
        set v_buy_comm_amt = v_buy_comm_amt - v_tmp_comm_amt;

        /* set @买入订单数量# = @买入订单数量# - @临时_订单数量#; */
        set v_buy_order_qty = v_buy_order_qty - v_tmp_order_qty;

        /* set @买入成交金额# = @买入成交金额# - @临时_成交金额#; */
        set v_buy_strike_amt = v_buy_strike_amt - v_tmp_strike_amt;

        /* set @买入成交数量# = @买入成交数量# - @临时_成交数量#; */
        set v_buy_strike_qty = v_buy_strike_qty - v_tmp_strike_qty;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 then

        /* set @卖出指令数量# = @卖出指令数量# - @临时_指令数量#; */
        set v_sell_comm_qty = v_sell_comm_qty - v_tmp_comm_qty;

        /* set @卖出指令金额# = @卖出指令金额# - @临时_指令金额#; */
        set v_sell_comm_amt = v_sell_comm_amt - v_tmp_comm_amt;

        /* set @卖出订单数量# = @卖出订单数量# - @临时_订单数量#; */
        set v_sell_order_qty = v_sell_order_qty - v_tmp_order_qty;

        /* set @卖出成交金额# = @卖出成交金额# - @临时_成交金额#; */
        set v_sell_strike_amt = v_sell_strike_amt - v_tmp_strike_amt;

        /* set @卖出成交数量# = @卖出成交数量# - @临时_成交数量#; */
        set v_sell_strike_qty = v_sell_strike_qty - v_tmp_strike_qty;
    end if;

    /* [获取表记录变量][交易证券_指令_指令表][ifnull(min({指令开始日期}),0),ifnull(max({指令结束日期}),0),ifnull(min({指令开始时间}),0),ifnull(max({指令结束时间}),0),ifnull(min({指令完成日期}),0),ifnull(min({指令完成时间}),0),ifnull(max({指令完成日期}),0),ifnull(max({指令完成时间}),0),ifnull(max({指令审批日期}),0),ifnull(max({指令审批时间}),0),ifnull(sum({产品编号}),0),ifnull({产品编号},0),ifnull(sum({交易组编号}),0),ifnull({交易组编号},0),ifnull(sum({资产账户编号}),0),ifnull({资产账户编号},0),ifnull(sum({通道编号}),0),ifnull({通道编号},0),ifnull({外部账号}," "),ifnull({交易币种},"CNY"),ifnull({市场编号},0),ifnull(sum({证券代码编号}),0),ifnull({证券代码编号},0),ifnull({证券代码}," "),ifnull(sum({标的代码编号}),0), ifnull({标的代码编号},0),ifnull(sum({交易代码编号}),0),ifnull({交易代码编号},0),ifnull(sum({证券类型}),0),ifnull({证券类型},0),ifnull(sum({资产类型}),0),ifnull({资产类型},0),ifnull(sum({指令时间}),0),ifnull({指令时间},0),ifnull(sum({指令下达人}),0),ifnull({指令下达人},0),ifnull(sum({指令限价}),0),ifnull({指令限价},0),ifnull(sum({指令实际限价}),0),ifnull({指令实际限价},0),ifnull(sum({净价标志}),0),ifnull({净价标志},0),ifnull(sum({票面面值}),0),ifnull({票面面值},0),ifnull(sum({质押比例}),0),ifnull({质押比例},0),ifnull(sum({计息天数}),0),ifnull({计息天数},0),ifnull(sum({债券计提利息}),0),ifnull({债券计提利息},0),ifnull(sum({债券利率类型}),0),ifnull({债券利率类型},0),ifnull(sum({体外指令标志}),0),ifnull({体外指令标志},0),count(*)][@指令开始日期#, @指令结束日期#, @指令开始时间#,@指令结束时间#,@指令完成日期#,@指令完成时间#,@指令最大完成日期#,@指令最大完成时间#,@指令审批日期#,@指令审批时间#,@临时_产品编号#,@产品编号#,@临时_交易组编号#,@交易组编号#,@临时_资产账户编号#,@资产账户编号#,@临时_通道编号#,@通道编号#,@外部账号#,@交易币种#,@市场编号#,@临时_证券代码编号#,@证券代码编号#,@证券代码#,@临时_标的代码编号#, @标的代码编号#,@临时_交易代码编号#,@交易代码编号#,@临时_证券类型#,@证券类型#,@临时_资产类型#,@资产类型#,@临时_指令时间#,@指令时间#,@临时_指令下达人#,@指令下达人#,@临时_指令限价#,@指令限价#,@临时_指令实际限价#,@指令实际限价#,@临时_净价标志#,@净价标志#,@临时_票面面值#,@票面面值#,@临时_质押比例#,@质押比例#,@临时_计息天数#,@计息天数#,@临时_债券计提利息#,@债券计提利息#,@临时_债券利率类型#,@债券利率类型#,@临时_体外指令标志#,@体外指令标志#,@记录个数#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @前指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @前指令执行人#] */
    select ifnull(min(comm_begin_date),0),ifnull(max(comm_end_date),0),ifnull(min(comm_begin_time),0),ifnull(max(comm_end_time),0),ifnull(min(comm_comple_date),0),ifnull(min(comm_comple_time),0),ifnull(max(comm_comple_date),0),ifnull(max(comm_comple_time),0),ifnull(max(comm_appr_date),0),ifnull(max(comm_appr_time),0),ifnull(sum(pd_no),0),ifnull(pd_no,0),ifnull(sum(exch_group_no),0),ifnull(exch_group_no,0),ifnull(sum(asset_acco_no),0),ifnull(asset_acco_no,0),ifnull(sum(pass_no),0),ifnull(pass_no,0),ifnull(out_acco," "),ifnull(exch_crncy_type,"CNY"),ifnull(exch_no,0),ifnull(sum(stock_code_no),0),ifnull(stock_code_no,0),ifnull(stock_code," "),ifnull(sum(target_code_no),0), ifnull(target_code_no,0),ifnull(sum(trade_code_no),0),ifnull(trade_code_no,0),ifnull(sum(stock_type),0),ifnull(stock_type,0),ifnull(sum(asset_type),0),ifnull(asset_type,0),ifnull(sum(comm_time),0),ifnull(comm_time,0),ifnull(sum(comm_opor),0),ifnull(comm_opor,0),ifnull(sum(comm_limit_price),0),ifnull(comm_limit_price,0),ifnull(sum(limit_actual_price),0),ifnull(limit_actual_price,0),ifnull(sum(net_price_flag),0),ifnull(net_price_flag,0),ifnull(sum(par_value),0),ifnull(par_value,0),ifnull(sum(impawn_ratio),0),ifnull(impawn_ratio,0),ifnull(sum(intrst_days),0),ifnull(intrst_days,0),ifnull(sum(bond_accr_intrst),0),ifnull(bond_accr_intrst,0),ifnull(sum(bond_rate_type),0),ifnull(bond_rate_type,0),ifnull(sum(exter_comm_flag),0),ifnull(exter_comm_flag,0),count(*) into v_comm_begin_date, v_comm_end_date, v_comm_begin_time,v_comm_end_time,v_comm_comple_date,v_comm_comple_time,v_max_comm_comple_date,v_max_comm_comple_time,v_comm_appr_date,v_comm_appr_time,v_tmp_pd_no,v_pd_no,v_tmp_exch_group_no,v_exch_group_no,v_tmp_asset_acco_no,v_asset_acco_no,v_tmp_pass_no,v_pass_no,v_out_acco,v_exch_crncy_type,v_exch_no,v_tmp_stock_code_no,v_stock_code_no,v_stock_code,v_tmp_target_code_no, v_target_code_no,v_tmp_trade_code_no,v_trade_code_no,v_tmp_stock_type,v_stock_type,v_tmp_asset_type,v_asset_type,v_tmp_comm_time,v_comm_time,v_tmp_comm_opor,v_comm_opor,v_tmp_comm_limit_price,v_comm_limit_price,v_tmp_limit_actual_price,v_limit_actual_price,v_tmp_net_price_flag,v_net_price_flag,v_tmp_par_value,v_par_value,v_tmp_impawn_ratio,v_impawn_ratio,v_tmp_intrst_days,v_intrst_days,v_tmp_bond_accr_intrst,v_bond_accr_intrst,v_tmp_bond_rate_type,v_bond_rate_type,v_tmp_exter_comm_flag,v_exter_comm_flag,v_record_count from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_before_comm_executor limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.17.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 前指令执行人=", v_before_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 前指令执行人=", v_before_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if @记录个数# > 0 then */
    if v_record_count > 0 then

        /* if @临时_产品编号# / @记录个数# <> @产品编号# then */
        if v_tmp_pd_no / v_record_count <> v_pd_no then

            /* set @产品编号# = 0; */
            set v_pd_no = 0;
        end if;

        /* if @临时_交易组编号# / @记录个数# <> @交易组编号# then */
        if v_tmp_exch_group_no / v_record_count <> v_exch_group_no then

            /* set @交易组编号# = 0; */
            set v_exch_group_no = 0;
        end if;

        /* if @临时_资产账户编号# / @记录个数# <> @资产账户编号# then */
        if v_tmp_asset_acco_no / v_record_count <> v_asset_acco_no then

            /* set @资产账户编号# = 0; */
            set v_asset_acco_no = 0;

            /* set @外部账号# = 0; */
            set v_out_acco = 0;
        end if;

        /* if @临时_通道编号# / @记录个数# <> @通道编号# then */
        if v_tmp_pass_no / v_record_count <> v_pass_no then

            /* set @通道编号# = 0; */
            set v_pass_no = 0;
        end if;

        /* if @临时_证券代码编号# / @记录个数# <> @证券代码编号# then */
        if v_tmp_stock_code_no / v_record_count <> v_stock_code_no then

            /* set @证券代码编号# = 0; */
            set v_stock_code_no = 0;

            /* set @市场编号# = 0; */
            set v_exch_no = 0;

            /* set @交易币种# = " "; */
            set v_exch_crncy_type = " ";

            /* set @证券代码# = " "; */
            set v_stock_code = " ";

            /* set @交易代码编号# = 0; */
            set v_trade_code_no = 0;

            /* set @标的代码编号# = 0; */
            set v_target_code_no = 0;

            /* set @证券类型# = 0; */
            set v_stock_type = 0;

            /* set @资产类型# = 0; */
            set v_asset_type = 0;

            /* set @净价标志# = 0; */
            set v_net_price_flag = 0;

            /* set @票面面值# = 0; */
            set v_par_value = 0;

            /* set @计息天数# = 0; */
            set v_intrst_days = 0;

            /* set @债券计提利息# = 0; */
            set v_bond_accr_intrst = 0;

            /* set @债券利率类型# = 0; */
            set v_bond_rate_type = 0;
        end if;

        /* if @临时_指令下达人# / @记录个数# <> @指令下达人# then */
        if v_tmp_comm_opor / v_record_count <> v_comm_opor then

            /* set @指令下达人# = 0; */
            set v_comm_opor = 0;
        end if;

        /* if @临时_指令限价# / @记录个数# <> @指令限价# then */
        if v_tmp_comm_limit_price / v_record_count <> v_comm_limit_price then

            /* set @指令限价# = 0; */
            set v_comm_limit_price = 0;
        end if;

        /* if @临时_指令实际限价# / @记录个数# <> @指令实际限价# then */
        if v_tmp_limit_actual_price / v_record_count <> v_limit_actual_price then

            /* set @指令实际限价# = 0; */
            set v_limit_actual_price = 0;
        end if;

        /* if @临时_质押比例# / @记录个数# <> @质押比例# then */
        if v_tmp_impawn_ratio / v_record_count <> v_impawn_ratio then

            /* set @质押比例# = 0; */
            set v_impawn_ratio = 0;
        end if;
    end if;

    /* set @临时_指令完成日期#  = @指令完成日期#; */
    set v_tmp_comm_comple_date  = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;
    #获取指令状态

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.17.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令汇总审批状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumApprStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_comm_appr_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_approve_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.17.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总审批状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.17.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令完成日期#  = @临时_指令完成日期#; */
    set v_comm_comple_date  = v_tmp_comm_comple_date;

    /* set @指令完成时间# = @临时_指令完成时间#; */
    set v_comm_comple_time = v_tmp_comm_comple_time;
    #[更新表记录][交易证券_指令_指令汇总表][{买入订单数量} = @买入订单数量#,{卖出订单数量} = @卖出订单数量#,{买入指令数量} = @买入指令数量#,{卖出指令数量} = @卖出指令数量#,{买入成交数量} = @买入成交数量#,{卖出指令数量} = @卖出成交数量#,{买入成交金额} = @买入成交金额#,{卖出成交金额} = @卖出成交金额#,{买入指令金额} = @买入指令金额#,{卖出指令金额} = @卖出指令金额#,{指令汇总审批状态}=@指令汇总审批状态#,{指令汇总状态}=@指令汇总状态#, {成交状态}=@成交状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间#,{指令开始日期} = @指令开始日期#,{指令结束日期} = @指令结束日期#,{指令开始时间} = @指令开始时间#,{指令结束时间} = @指令结束时间#,{指令撤销数量}= @指令撤销数量#,{指令审批数量}= @指令审批数量#,{指令数量} = @指令数量#, {指令金额} = @指令金额#,{成交数量} = @成交数量#, {成交金额} = @成交金额#,{订单数量}=@订单数量#,{指令待撤销数量}=@指令待撤销数量#,{产品编号}=@产品编号#,{交易组编号}=@交易组编号#,{资产账户编号}=@资产账户编号#,{外部账号}=@外部账号#,{通道编号}=@通道编号#,{证券代码编号}=@证券代码编号#,{市场编号}=@市场编号#,{交易币种}=@交易币种#,{证券代码}=@证券代码#,{交易代码编号}=@交易代码编号#,{标的代码编号}=@标的代码编号#,{证券类型}=@证券类型#,{资产类型}=@资产类型#,{净价标志}=@净价标志#,{票面面值}=@票面面值#,{计息天数}=@计息天数#,{债券计提利息}=@债券计提利息#,{债券利率类型}=@债券利率类型#,{指令限价}=@指令限价#,{指令实际限价}=@指令实际限价#,{质押比例}=@质押比例#][{指令日期}=@临时_指令日期# and {机构编号}=@临时_机构编号# and {指令批号}=@临时_指令批号# and {指令执行人}=@前指令执行人#][2][@临时_指令日期#, @临时_机构编号#, @临时_指令批号#,@前指令执行人#]

    /* [更新表记录][交易证券_指令_指令汇总表][{买入订单数量} = @买入订单数量#,{卖出订单数量} = @卖出订单数量#,{买入指令数量} = @买入指令数量#,{卖出指令数量} = @卖出指令数量#,{买入成交数量} = @买入成交数量#,{卖出指令数量} = @卖出成交数量#,{买入成交金额} = @买入成交金额#,{卖出成交金额} = @卖出成交金额#,{买入指令金额} = @买入指令金额#,{卖出指令金额} = @卖出指令金额#,{指令汇总状态}=@指令汇总状态#, {成交状态}=@成交状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间#,{指令开始日期} = @指令开始日期#,{指令结束日期} = @指令结束日期#,{指令开始时间} = @指令开始时间#,{指令结束时间} = @指令结束时间#,{指令数量} = @指令数量#, {指令金额} = @指令金额#,{成交数量} = @成交数量#, {成交金额} = @成交金额#,{订单数量}=@订单数量#,{指令待撤销数量}=@指令待撤销数量#,{产品编号}=@产品编号#,{交易组编号}=@交易组编号#,{资产账户编号}=@资产账户编号#,{外部账号}=@外部账号#,{通道编号}=@通道编号#,{证券代码编号}=@证券代码编号#,{市场编号}=@市场编号#,{交易币种}=@交易币种#,{证券代码}=@证券代码#,{交易代码编号}=@交易代码编号#,{标的代码编号}=@标的代码编号#,{证券类型}=@证券类型#,{资产类型}=@资产类型#,{净价标志}=@净价标志#,{票面面值}=@票面面值#,{计息天数}=@计息天数#,{债券计提利息}=@债券计提利息#,{债券利率类型}=@债券利率类型#,{指令限价}=@指令限价#,{指令实际限价}=@指令实际限价#,{质押比例}=@质押比例#,{指令审批数量} = @指令审批数量#,{指令汇总审批状态} = @指令汇总审批状态#][{记录序号}=@临时_记录序号#][2][@临时_记录序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, buy_order_qty = v_buy_order_qty,sell_order_qty = v_sell_order_qty,buy_comm_qty = v_buy_comm_qty,sell_comm_qty = v_sell_comm_qty,buy_strike_qty = v_buy_strike_qty,sell_comm_qty = v_sell_strike_qty,buy_strike_amt = v_buy_strike_amt,sell_strike_amt = v_sell_strike_amt,buy_comm_amt = v_buy_comm_amt,sell_comm_amt = v_sell_comm_amt,comm_sum_status=v_comm_sum_status, strike_status=v_strike_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time,comm_begin_date = v_comm_begin_date,comm_end_date = v_comm_end_date,comm_begin_time = v_comm_begin_time,comm_end_time = v_comm_end_time,comm_qty = v_comm_qty, comm_amt = v_comm_amt,strike_qty = v_strike_qty, strike_amt = v_strike_amt,order_qty=v_order_qty,comm_await_cancel_qty=v_comm_await_cancel_qty,pd_no=v_pd_no,exch_group_no=v_exch_group_no,asset_acco_no=v_asset_acco_no,out_acco=v_out_acco,pass_no=v_pass_no,stock_code_no=v_stock_code_no,exch_no=v_exch_no,exch_crncy_type=v_exch_crncy_type,stock_code=v_stock_code,trade_code_no=v_trade_code_no,target_code_no=v_target_code_no,stock_type=v_stock_type,asset_type=v_asset_type,net_price_flag=v_net_price_flag,par_value=v_par_value,intrst_days=v_intrst_days,bond_accr_intrst=v_bond_accr_intrst,bond_rate_type=v_bond_rate_type,comm_limit_price=v_comm_limit_price,limit_actual_price=v_limit_actual_price,impawn_ratio=v_impawn_ratio,comm_appr_qty = v_comm_appr_qty,comm_sum_approve_status = v_comm_sum_approve_status where row_id=v_tmp_row_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.17.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_记录序号=",v_tmp_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_记录序号=",v_tmp_row_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_指令更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CommUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CommUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_oper_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_date int,
    IN p_comm_time int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_out_acco varchar(32),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_code_no int,
    IN p_stock_code varchar(6),
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_batch_no int,
    IN p_comm_dir int,
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_comm_qty decimal(18,2),
    IN p_comm_amt decimal(18,4),
    IN p_order_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_strike_qty decimal(18,2),
    IN p_comm_appr_qty decimal(18,2),
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_impawn_ratio decimal(18,12),
    IN p_intrst_days int,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_strike_status varchar(2),
    IN p_comm_status varchar(2),
    IN p_comm_appr_status varchar(2),
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_comm_remark_info varchar(1024),
    IN p_acco_concat_info varchar(4096),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_appr_status varchar(2);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_comm_remark_info varchar(1024);
    declare v_acco_concat_info varchar(4096);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_sum_status varchar(2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_read_flag int;
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_tmp_comm_qty decimal(18,2);
    declare v_tmp_exch_crncy_type varchar(3);
    declare v_tmp_exch_no int;
    declare v_tmp_stock_code_no int;
    declare v_tmp_stock_code varchar(6);
    declare v_tmp_target_code_no int;
    declare v_tmp_trade_code_no int;
    declare v_tmp_stock_type int;
    declare v_tmp_asset_type int;
    declare v_tmp_comm_opor int;
    declare v_tmp_comm_executor int;
    declare v_tmp_comm_batch_no int;
    declare v_tmp_comm_dir int;
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);
    declare v_tmp_comm_begin_date int;
    declare v_tmp_comm_end_date int;
    declare v_tmp_comm_begin_time int;
    declare v_tmp_comm_end_time int;
    declare v_tmp_net_price_flag int;
    declare v_tmp_par_value decimal(16,9);
    declare v_tmp_impawn_ratio decimal(18,12);
    declare v_tmp_intrst_days int;
    declare v_tmp_bond_accr_intrst decimal(18,12);
    declare v_tmp_bond_rate_type int;
    declare v_tmp_pd_no int;
    declare v_tmp_exch_group_no int;
    declare v_tmp_asset_acco_no int;
    declare v_tmp_pass_no int;
    declare v_tmp_out_acco varchar(32);
    declare v_tmp_comm_oper_way varchar(2);
    declare v_tmp_exter_comm_flag int;
    declare v_tmp_basket_id bigint;
    declare v_tmp_comm_appr_status varchar(2);
    declare v_row_id bigint;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_oper_func_code = p_oper_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_date = p_comm_date;
    SET v_comm_time = p_comm_time;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_out_acco = p_out_acco;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_code = p_stock_code;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_amt = p_comm_amt;
    SET v_order_qty = p_order_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_strike_qty = p_strike_qty;
    SET v_comm_appr_qty = p_comm_appr_qty;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_intrst_days = p_intrst_days;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_strike_status = p_strike_status;
    SET v_comm_status = p_comm_status;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_comm_remark_info = p_comm_remark_info;
    SET v_acco_concat_info = p_acco_concat_info;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_sum_status = "0";
    SET v_comm_sum_approve_status = "0";
    SET v_read_flag = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_tmp_comm_qty = 0;
    SET v_tmp_exch_crncy_type = "CNY";
    SET v_tmp_exch_no = 0;
    SET v_tmp_stock_code_no = 0;
    SET v_tmp_stock_code = " ";
    SET v_tmp_target_code_no = 0;
    SET v_tmp_trade_code_no = 0;
    SET v_tmp_stock_type = 0;
    SET v_tmp_asset_type = 0;
    SET v_tmp_comm_opor = 0;
    SET v_tmp_comm_executor = 0;
    SET v_tmp_comm_batch_no = 0;
    SET v_tmp_comm_dir = 0;
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;
    SET v_tmp_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_net_price_flag = 0;
    SET v_tmp_par_value = 0;
    SET v_tmp_impawn_ratio = 0;
    SET v_tmp_intrst_days = 0;
    SET v_tmp_bond_accr_intrst = 0;
    SET v_tmp_bond_rate_type = 0;
    SET v_tmp_pd_no = 0;
    SET v_tmp_exch_group_no = 0;
    SET v_tmp_asset_acco_no = 0;
    SET v_tmp_pass_no = 0;
    SET v_tmp_out_acco = " ";
    SET v_tmp_comm_oper_way = " ";
    SET v_tmp_exter_comm_flag = 0;
    SET v_tmp_basket_id = 0;
    SET v_tmp_comm_appr_status = " ";
    SET v_row_id = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* set @指令完成日期# = 0; */
    set v_comm_comple_date = 0;

    /* set @指令完成时间# = 0; */
    set v_comm_comple_time = 0;

    /* set @指令最大完成日期# = 0; */
    set v_max_comm_comple_date = 0;

    /* set @指令最大完成时间# = 0; */
    set v_max_comm_comple_time = 0;

    /* set @指令审批日期# = 0; */
    set v_comm_appr_date = 0;

    /* set @指令审批时间# = 0; */
    set v_comm_appr_time = 0;

    /* set @指令汇总状态# = 《指令汇总状态-未执行》; */
    set v_comm_sum_status = "1";

    /* set @指令汇总审批状态# = 《指令汇总审批状态-未审批》; */
    set v_comm_sum_approve_status = "1";

    /* set @成交状态# = 《成交状态-未成》; */
    set v_strike_status = "1";

    /* set @已读标记# = 《已读标记-未读》; */
    set v_read_flag = 0;

    /* if @指令状态# = 《指令状态-待撤销》 or @指令状态# = 《指令状态-部分撤销》 then */
    if v_comm_status = "4" or v_comm_status = "5" then

        /* set @指令待撤销数量# = @指令数量# - @指令撤销数量# - @成交数量#; */
        set v_comm_await_cancel_qty = v_comm_qty - v_comm_cancel_qty - v_strike_qty;
    end if;

    /* if @市场编号# =《市场编号-沪港通证券交易所》 or @市场编号# =《市场编号-深港通证券交易所》 then */
    if v_exch_no =3 or v_exch_no =4 then

        /* if @指令方向# = 《指令方向-买入》 then */
        if v_comm_dir = 1 then

            /* set @指令金额# = round(@指令金额# * @卖出参考汇率#,2); */
            set v_comm_amt = round(v_comm_amt * v_sell_ref_rate,2);

            /* set @成交金额# = round(@成交金额# * @卖出参考汇率#,2); */
            set v_strike_amt = round(v_strike_amt * v_sell_ref_rate,2);
        else

            /* set @指令金额# = round(@指令金额# * @买入参考汇率#,2); */
            set v_comm_amt = round(v_comm_amt * v_buy_ref_rate,2);

            /* set @成交金额# = round(@成交金额# * @买入参考汇率#,2); */
            set v_strike_amt = round(v_strike_amt * v_buy_ref_rate,2);
        end if;
    end if;

    /* set @买入订单数量# = 0; */
    set v_buy_order_qty = 0;

    /* set @卖出订单数量# = 0; */
    set v_sell_order_qty = 0;

    /* set @买入指令数量# = 0; */
    set v_buy_comm_qty = 0;

    /* set @卖出指令数量# = 0; */
    set v_sell_comm_qty = 0;

    /* set @买入成交数量# = 0; */
    set v_buy_strike_qty = 0;

    /* set @卖出成交数量# = 0; */
    set v_sell_strike_qty = 0;

    /* set @买入成交金额# = 0; */
    set v_buy_strike_amt = 0;

    /* set @卖出成交金额# = 0; */
    set v_sell_strike_amt = 0;

    /* set @买入指令金额# = 0; */
    set v_buy_comm_amt = 0;

    /* set @卖出指令金额# = 0; */
    set v_sell_comm_amt = 0;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》  or @指令方向# = 《指令方向-融资买入》  or @指令方向# = 《指令方向-买券还券》  then */
    if v_comm_dir = 1 or v_comm_dir = 3  or v_comm_dir = 5  or v_comm_dir = 8  then

        /* set @买入订单数量# = @订单数量#; */
        set v_buy_order_qty = v_order_qty;

        /* set @买入指令数量# = @指令数量#; */
        set v_buy_comm_qty = v_comm_qty;

        /* set @买入成交数量# = @成交数量#; */
        set v_buy_strike_qty = v_strike_qty;

        /* set @买入成交金额# = @成交金额#; */
        set v_buy_strike_amt = v_strike_amt;

        /* set @买入指令金额# = @指令金额#; */
        set v_buy_comm_amt = v_comm_amt;

    /* elseif @指令方向# = 《指令方向-卖出》 or  @指令方向# = 《指令方向-融券回购》  or @指令方向# = 《指令方向-融券卖出》  or @指令方向# = 《指令方向-卖券还款》 then */
    elseif v_comm_dir = 2 or  v_comm_dir = 4  or v_comm_dir = 6  or v_comm_dir = 7 then

        /* set @卖出订单数量# = @订单数量#; */
        set v_sell_order_qty = v_order_qty;

        /* set @卖出指令数量# = @指令数量#; */
        set v_sell_comm_qty = v_comm_qty;

        /* set @卖出成交数量# = @成交数量#; */
        set v_sell_strike_qty = v_strike_qty;

        /* set @卖出成交金额# = @成交金额#; */
        set v_sell_strike_amt = v_strike_amt;

        /* set @卖出指令金额# = @指令金额#; */
        set v_sell_comm_amt = v_comm_amt;
    end if;

    /* [插入重复更新][交易证券_指令_指令汇总表][字段][字段变量][{指令数量} = {指令数量} + @指令数量#, {指令金额} = {指令金额} + @指令金额#,{指令审批数量}={指令审批数量}+@指令审批数量#,{指令撤销数量}={指令撤销数量}+@指令撤销数量#,{订单数量}={订单数量}+@订单数量#,{成交数量}={成交数量}+@成交数量#,{成交金额}={成交金额}+@成交金额#,{买入订单数量} = {买入订单数量} + @买入订单数量#,{卖出订单数量} = {卖出订单数量} + @卖出订单数量#,{买入指令数量} = {买入指令数量} + @买入指令数量#,{卖出指令数量} = {卖出指令数量} + @卖出指令数量#,{买入成交数量} = {买入成交数量} + @买入成交数量#,{卖出成交数量} = {卖出成交数量} + @卖出成交数量#,{买入成交金额} = {买入成交金额} + @买入成交金额#,{卖出成交金额} = {卖出成交金额} + @卖出成交金额#,{买入指令金额} = {买入指令金额} + @买入指令金额#,{卖出指令金额} = {卖出指令金额} + @卖出指令金额#][1][@指令日期#, @机构编号#,@指令批号#,@指令执行人#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_sumcommand (
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, pass_no, out_acco, 
        exch_crncy_type, exch_no, stock_code_no, stock_code, 
        target_code_no, trade_code_no, stock_type, asset_type, 
        comm_date, comm_time, comm_batch_no, comm_opor, 
        comm_executor, comm_dir, comm_limit_price, limit_actual_price, 
        comm_qty, comm_amt, order_qty, comm_cancel_qty, 
        comm_await_cancel_qty, strike_amt, strike_qty, net_price_flag, 
        par_value, impawn_ratio, intrst_days, bond_accr_intrst, 
        bond_rate_type, strike_status, comm_sum_status, comm_begin_date, 
        comm_end_date, comm_begin_time, comm_end_time, comm_comple_date, 
        comm_comple_time, max_comm_comple_date, max_comm_comple_time, comm_appr_date, 
        comm_appr_time, comm_appr_qty, comm_sum_approve_status, basket_id, 
        buy_order_qty, sell_order_qty, buy_comm_qty, sell_comm_qty, 
        buy_strike_qty, sell_strike_qty, buy_strike_amt, sell_strike_amt, 
        buy_comm_amt, sell_comm_amt, comm_oper_way, exter_comm_flag, 
        comm_remark_info, read_flag, acco_concat_info) 
    values(
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_pass_no, v_out_acco, 
        v_exch_crncy_type, v_exch_no, v_stock_code_no, v_stock_code, 
        v_target_code_no, v_trade_code_no, v_stock_type, v_asset_type, 
        v_comm_date, v_comm_time, v_comm_batch_no, v_comm_opor, 
        v_comm_executor, v_comm_dir, v_comm_limit_price, v_limit_actual_price, 
        v_comm_qty, v_comm_amt, v_order_qty, v_comm_cancel_qty, 
        v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, v_net_price_flag, 
        v_par_value, v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, 
        v_bond_rate_type, v_strike_status, v_comm_sum_status, v_comm_begin_date, 
        v_comm_end_date, v_comm_begin_time, v_comm_end_time, v_comm_comple_date, 
        v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, v_comm_appr_date, 
        v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, v_basket_id, 
        v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, v_sell_comm_qty, 
        v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, v_sell_strike_amt, 
        v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, v_exter_comm_flag, 
        v_comm_remark_info, v_read_flag, v_acco_concat_info) 
    ON DUPLICATE KEY UPDATE update_date = v_update_date, update_time = v_update_time, update_times = update_times+1, comm_qty = comm_qty + v_comm_qty, comm_amt = comm_amt + v_comm_amt,comm_appr_qty=comm_appr_qty+v_comm_appr_qty,comm_cancel_qty=comm_cancel_qty+v_comm_cancel_qty,order_qty=order_qty+v_order_qty,strike_qty=strike_qty+v_strike_qty,strike_amt=strike_amt+v_strike_amt,buy_order_qty = buy_order_qty + v_buy_order_qty,sell_order_qty = sell_order_qty + v_sell_order_qty,buy_comm_qty = buy_comm_qty + v_buy_comm_qty,sell_comm_qty = sell_comm_qty + v_sell_comm_qty,buy_strike_qty = buy_strike_qty + v_buy_strike_qty,sell_strike_qty = sell_strike_qty + v_sell_strike_qty,buy_strike_amt = buy_strike_amt + v_buy_strike_amt,sell_strike_amt = sell_strike_amt + v_sell_strike_amt,buy_comm_amt = buy_comm_amt + v_buy_comm_amt,sell_comm_amt = sell_comm_amt + v_sell_comm_amt;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.18.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,",","指令批号=",v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,",","指令批号=",v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @临时_交易币种# = @交易币种#; */
    set v_tmp_exch_crncy_type = v_exch_crncy_type;

    /* set @临时_市场编号# = @市场编号#; */
    set v_tmp_exch_no = v_exch_no;

    /* set @临时_证券代码编号# = @证券代码编号#; */
    set v_tmp_stock_code_no = v_stock_code_no;

    /* set @临时_证券代码# = @证券代码#; */
    set v_tmp_stock_code = v_stock_code;

    /* set @临时_标的代码编号# = @标的代码编号#; */
    set v_tmp_target_code_no = v_target_code_no;

    /* set @临时_交易代码编号# = @交易代码编号#; */
    set v_tmp_trade_code_no = v_trade_code_no;

    /* set @临时_证券类型# = @证券类型#; */
    set v_tmp_stock_type = v_stock_type;

    /* set @临时_资产类型# = @资产类型#; */
    set v_tmp_asset_type = v_asset_type;

    /* set @临时_指令下达人# = @指令下达人#; */
    set v_tmp_comm_opor = v_comm_opor;

    /* set @临时_指令执行人# = @指令执行人#; */
    set v_tmp_comm_executor = v_comm_executor;

    /* set @临时_指令批号# = @指令批号#; */
    set v_tmp_comm_batch_no = v_comm_batch_no;

    /* set @临时_指令方向# = @指令方向#; */
    set v_tmp_comm_dir = v_comm_dir;

    /* set @临时_指令限价# = @指令限价#; */
    set v_tmp_comm_limit_price = v_comm_limit_price;

    /* set @临时_指令实际限价# = @指令实际限价#; */
    set v_tmp_limit_actual_price = v_limit_actual_price;

    /* set @临时_指令开始日期# = @指令开始日期#; */
    set v_tmp_comm_begin_date = v_comm_begin_date;

    /* set @临时_指令结束日期# = @指令结束日期#; */
    set v_tmp_comm_end_date = v_comm_end_date;

    /* set @临时_指令开始时间# = @指令开始时间#; */
    set v_tmp_comm_begin_time = v_comm_begin_time;

    /* set @临时_指令结束时间# = @指令结束时间#; */
    set v_tmp_comm_end_time = v_comm_end_time;

    /* set @临时_净价标志# = @净价标志#; */
    set v_tmp_net_price_flag = v_net_price_flag;

    /* set @临时_票面面值# = @票面面值#; */
    set v_tmp_par_value = v_par_value;

    /* set @临时_质押比例# = @质押比例#; */
    set v_tmp_impawn_ratio = v_impawn_ratio;

    /* set @临时_计息天数# = @计息天数#; */
    set v_tmp_intrst_days = v_intrst_days;

    /* set @临时_债券计提利息# = @债券计提利息#; */
    set v_tmp_bond_accr_intrst = v_bond_accr_intrst;

    /* set @临时_债券利率类型# = @债券利率类型#; */
    set v_tmp_bond_rate_type = v_bond_rate_type;

    /* set @临时_产品编号# = @产品编号#; */
    set v_tmp_pd_no = v_pd_no;

    /* set @临时_交易组编号# = @交易组编号#; */
    set v_tmp_exch_group_no = v_exch_group_no;

    /* set @临时_资产账户编号# = @资产账户编号#; */
    set v_tmp_asset_acco_no = v_asset_acco_no;

    /* set @临时_通道编号# = @通道编号#; */
    set v_tmp_pass_no = v_pass_no;

    /* set @临时_外部账号# = @外部账号#; */
    set v_tmp_out_acco = v_out_acco;

    /* set @临时_指令操作方式# = @指令操作方式#; */
    set v_tmp_comm_oper_way = v_comm_oper_way;

    /* set @临时_体外指令标志# = @体外指令标志#; */
    set v_tmp_exter_comm_flag = v_exter_comm_flag;

    /* set @临时_篮子序号# = @篮子序号#; */
    set v_tmp_basket_id = v_basket_id;

    /* set @临时_指令审批状态# = @指令审批状态#; */
    set v_tmp_comm_appr_status = v_comm_appr_status;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.18.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* set @交易币种# = 'CNY '; */
    set v_exch_crncy_type = 'CNY ';
    #if @指令数量# = @临时_指令数量# then
    #    set @交易币种# = @临时_交易币种#;
    #elseif @临时_交易币种# <> @交易币种# then
    #    set @交易币种# = ' ';
    #end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @市场编号# = @临时_市场编号#; */
        set v_exch_no = v_tmp_exch_no;

    /* elseif @临时_市场编号# <> @市场编号# then */
    elseif v_tmp_exch_no <> v_exch_no then

        /* set @市场编号# = 0; */
        set v_exch_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @证券代码编号# = @临时_证券代码编号#; */
        set v_stock_code_no = v_tmp_stock_code_no;

    /* elseif @临时_证券代码编号# <> @证券代码编号# then */
    elseif v_tmp_stock_code_no <> v_stock_code_no then

        /* set @证券代码编号# = 0; */
        set v_stock_code_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @证券代码# = @临时_证券代码#; */
        set v_stock_code = v_tmp_stock_code;

    /* elseif @临时_证券代码# <> @证券代码# then */
    elseif v_tmp_stock_code <> v_stock_code then

        /* set @证券代码# = ' '; */
        set v_stock_code = ' ';
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @标的代码编号# = @临时_标的代码编号#; */
        set v_target_code_no = v_tmp_target_code_no;

    /* elseif @临时_标的代码编号# <> @标的代码编号# then */
    elseif v_tmp_target_code_no <> v_target_code_no then

        /* set @标的代码编号# = 0; */
        set v_target_code_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @交易代码编号# = @临时_交易代码编号#; */
        set v_trade_code_no = v_tmp_trade_code_no;

    /* elseif @临时_交易代码编号# <> @交易代码编号# then */
    elseif v_tmp_trade_code_no <> v_trade_code_no then

        /* set @交易代码编号# = 0; */
        set v_trade_code_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @证券类型# = @临时_证券类型#; */
        set v_stock_type = v_tmp_stock_type;

    /* elseif @临时_证券类型# <> @证券类型# then */
    elseif v_tmp_stock_type <> v_stock_type then

        /* set @证券类型# = 0; */
        set v_stock_type = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @资产类型# = @临时_资产类型#; */
        set v_asset_type = v_tmp_asset_type;

    /* elseif @临时_资产类型# <> @资产类型# then */
    elseif v_tmp_asset_type <> v_asset_type then

        /* set @资产类型# = 0; */
        set v_asset_type = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @指令下达人# = @临时_指令下达人#; */
        set v_comm_opor = v_tmp_comm_opor;

    /* elseif @临时_指令下达人# <> @指令下达人# then */
    elseif v_tmp_comm_opor <> v_comm_opor then

        /* set @指令下达人# = 0; */
        set v_comm_opor = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @指令方向# = @临时_指令方向#; */
        set v_comm_dir = v_tmp_comm_dir;

    /* elseif @临时_指令方向# <> @指令方向# then */
    elseif v_tmp_comm_dir <> v_comm_dir then

        /* set @指令方向# = 0; */
        set v_comm_dir = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @指令限价# = @临时_指令限价#; */
        set v_comm_limit_price = v_tmp_comm_limit_price;

    /* elseif @临时_指令限价# <> @指令限价# then */
    elseif v_tmp_comm_limit_price <> v_comm_limit_price then

        /* set @指令限价# = 0; */
        set v_comm_limit_price = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @指令实际限价# = @临时_指令实际限价#; */
        set v_limit_actual_price = v_tmp_limit_actual_price;

    /* elseif @临时_指令实际限价# <> @指令实际限价# then */
    elseif v_tmp_limit_actual_price <> v_limit_actual_price then

        /* set @指令实际限价# = 0; */
        set v_limit_actual_price = 0;
    end if;

    /* if @临时_指令开始日期# < @指令开始日期# or @指令数量# = @临时_指令数量# then */
    if v_tmp_comm_begin_date < v_comm_begin_date or v_comm_qty = v_tmp_comm_qty then

        /* set @指令开始日期# = @临时_指令开始日期#; */
        set v_comm_begin_date = v_tmp_comm_begin_date;
    end if;

    /* if @临时_指令结束日期# > @指令结束日期# or @指令数量# = @临时_指令数量# then */
    if v_tmp_comm_end_date > v_comm_end_date or v_comm_qty = v_tmp_comm_qty then

        /* set @指令结束日期# = @临时_指令结束日期#; */
        set v_comm_end_date = v_tmp_comm_end_date;
    end if;

    /* if @临时_指令开始时间# < @指令开始时间# or @指令数量# = @临时_指令数量# then */
    if v_tmp_comm_begin_time < v_comm_begin_time or v_comm_qty = v_tmp_comm_qty then

        /* set @指令开始时间# = @临时_指令开始时间#; */
        set v_comm_begin_time = v_tmp_comm_begin_time;
    end if;

    /* if @临时_指令结束时间# > @指令结束时间# or @指令数量# = @临时_指令数量# then */
    if v_tmp_comm_end_time > v_comm_end_time or v_comm_qty = v_tmp_comm_qty then

        /* set @指令结束时间# = @临时_指令结束时间#; */
        set v_comm_end_time = v_tmp_comm_end_time;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @净价标志# = @临时_净价标志#; */
        set v_net_price_flag = v_tmp_net_price_flag;

    /* elseif @临时_净价标志# <> @净价标志# then */
    elseif v_tmp_net_price_flag <> v_net_price_flag then

        /* set @净价标志# = 0; */
        set v_net_price_flag = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @票面面值# = @临时_票面面值#; */
        set v_par_value = v_tmp_par_value;

    /* elseif @临时_票面面值# <> @票面面值# then */
    elseif v_tmp_par_value <> v_par_value then

        /* set @票面面值# = 0; */
        set v_par_value = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @质押比例# = @临时_质押比例#; */
        set v_impawn_ratio = v_tmp_impawn_ratio;

    /* elseif @临时_质押比例# <> @质押比例# then */
    elseif v_tmp_impawn_ratio <> v_impawn_ratio then

        /* set @质押比例# = 0; */
        set v_impawn_ratio = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @计息天数# = @临时_计息天数#; */
        set v_intrst_days = v_tmp_intrst_days;

    /* elseif @临时_计息天数# <> @计息天数# then */
    elseif v_tmp_intrst_days <> v_intrst_days then

        /* set @计息天数# = 0; */
        set v_intrst_days = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @债券计提利息# = @临时_债券计提利息#; */
        set v_bond_accr_intrst = v_tmp_bond_accr_intrst;

    /* elseif @临时_债券计提利息# <> @债券计提利息# then */
    elseif v_tmp_bond_accr_intrst <> v_bond_accr_intrst then

        /* set @债券计提利息# = 0; */
        set v_bond_accr_intrst = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @债券利率类型# = @临时_债券利率类型#; */
        set v_bond_rate_type = v_tmp_bond_rate_type;

    /* elseif @临时_债券利率类型# <> @债券利率类型# then */
    elseif v_tmp_bond_rate_type <> v_bond_rate_type then

        /* set @债券利率类型# = 0; */
        set v_bond_rate_type = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

      /* set @产品编号# = @临时_产品编号#; */
      set v_pd_no = v_tmp_pd_no;

    /* elseif @临时_产品编号# <> @产品编号# then */
    elseif v_tmp_pd_no <> v_pd_no then

      /* set @产品编号# = 0; */
      set v_pd_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @交易组编号# = @临时_交易组编号#; */
        set v_exch_group_no = v_tmp_exch_group_no;

    /* elseif @临时_交易组编号# <> @交易组编号# then */
    elseif v_tmp_exch_group_no <> v_exch_group_no then

        /* set @交易组编号# = 0; */
        set v_exch_group_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @资产账户编号# = @临时_资产账户编号#; */
        set v_asset_acco_no = v_tmp_asset_acco_no;

    /* elseif @临时_资产账户编号# <> @资产账户编号# then */
    elseif v_tmp_asset_acco_no <> v_asset_acco_no then

        /* set @资产账户编号# = 0; */
        set v_asset_acco_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @通道编号# = @临时_通道编号#; */
        set v_pass_no = v_tmp_pass_no;

    /* elseif @临时_通道编号# <> @通道编号# then */
    elseif v_tmp_pass_no <> v_pass_no then

        /* set @通道编号# = 0; */
        set v_pass_no = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @外部账号# = @临时_外部账号#; */
        set v_out_acco = v_tmp_out_acco;

    /* elseif @临时_外部账号# <> @外部账号# then */
    elseif v_tmp_out_acco <> v_out_acco then

        /* set @外部账号# = 0; */
        set v_out_acco = 0;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @指令操作方式# = @临时_指令操作方式#; */
        set v_comm_oper_way = v_tmp_comm_oper_way;

    /* elseif @临时_指令操作方式# <> @指令操作方式# then */
    elseif v_tmp_comm_oper_way <> v_comm_oper_way then

        /* set @指令操作方式# = ' '; */
        set v_comm_oper_way = ' ';
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @体外指令标志# = @临时_体外指令标志#; */
        set v_exter_comm_flag = v_tmp_exter_comm_flag;

    /* elseif @临时_体外指令标志# = 《体外指令标志-体内》 or  @体外指令标志# = 《体外指令标志-体内》 then */
    elseif v_tmp_exter_comm_flag = 1 or  v_exter_comm_flag = 1 then

        /* set @体外指令标志# = 《体外指令标志-体内》; */
        set v_exter_comm_flag = 1;
    end if;

    /* if @指令数量# = @临时_指令数量# then */
    if v_comm_qty = v_tmp_comm_qty then

        /* set @篮子序号# = @临时_篮子序号#; */
        set v_basket_id = v_tmp_basket_id;

    /* elseif @临时_篮子序号# <> @篮子序号# then */
    elseif v_tmp_basket_id <> v_basket_id then

        /* set @篮子序号# = 0; */
        set v_basket_id = 0;
    end if;

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.18.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.18.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令汇总审批状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumApprStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_comm_appr_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_approve_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.18.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总审批状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令完成日期# > @指令最大完成日期# then */
    if v_comm_comple_date > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @指令完成日期#; */
        set v_max_comm_comple_date  = v_comm_comple_date;
    end if;

    /* if @指令完成时间# > @指令最大完成时间# then */
    if v_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @指令完成时间#; */
        set v_max_comm_comple_time = v_comm_comple_time;
    end if;

    /* [更新表记录][交易证券_指令_指令汇总表][{指令汇总状态}=@指令汇总状态#, {成交状态}=@成交状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间#,{交易币种} = @交易币种#,{市场编号} = @市场编号#,{证券代码编号} = @证券代码编号#,{证券代码} = @证券代码#,{标的代码编号} = @标的代码编号#,{交易代码编号} = @交易代码编号#,{证券类型} = @证券类型#,{资产类型} = @资产类型#,{指令下达人} = @指令下达人#,{指令执行人} = @指令执行人#,{指令批号} = @指令批号#,{指令方向} = @指令方向#,{指令限价} = @指令限价#,{指令实际限价} = @指令实际限价#,{指令开始日期} = @指令开始日期#,{指令结束日期} = @指令结束日期#,{指令开始时间} = @指令开始时间#,{指令结束时间} = @指令结束时间#,{净价标志} = @净价标志#,{票面面值} = @票面面值#,{质押比例} = @质押比例#,{计息天数} = @计息天数#,{债券计提利息} = @债券计提利息#,{债券利率类型} = @债券利率类型#,{产品编号} = @产品编号#,{交易组编号} = @交易组编号#, {资产账户编号}=@资产账户编号#,{通道编号}=@通道编号#,{外部账号}=@外部账号#,{篮子序号}=@篮子序号#,{指令操作方式}=@指令操作方式#,{体外指令标志}=@体外指令标志#,{指令汇总审批状态}=@指令汇总审批状态#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#,@指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_sum_status=v_comm_sum_status, strike_status=v_strike_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time,exch_crncy_type = v_exch_crncy_type,exch_no = v_exch_no,stock_code_no = v_stock_code_no,stock_code = v_stock_code,target_code_no = v_target_code_no,trade_code_no = v_trade_code_no,stock_type = v_stock_type,asset_type = v_asset_type,comm_opor = v_comm_opor,comm_executor = v_comm_executor,comm_batch_no = v_comm_batch_no,comm_dir = v_comm_dir,comm_limit_price = v_comm_limit_price,limit_actual_price = v_limit_actual_price,comm_begin_date = v_comm_begin_date,comm_end_date = v_comm_end_date,comm_begin_time = v_comm_begin_time,comm_end_time = v_comm_end_time,net_price_flag = v_net_price_flag,par_value = v_par_value,impawn_ratio = v_impawn_ratio,intrst_days = v_intrst_days,bond_accr_intrst = v_bond_accr_intrst,bond_rate_type = v_bond_rate_type,pd_no = v_pd_no,exch_group_no = v_exch_group_no, asset_acco_no=v_asset_acco_no,pass_no=v_pass_no,out_acco=v_out_acco,basket_id=v_basket_id,comm_oper_way=v_comm_oper_way,exter_comm_flag=v_exter_comm_flag,comm_sum_approve_status=v_comm_sum_approve_status where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.18.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_审批指令更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ApprCommUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ApprCommUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_appr_status varchar(2),
    IN p_comm_qty decimal(18,2),
    IN p_comm_appr_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_comm_appr_date int,
    IN p_comm_appr_time int,
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_qty decimal(18,2);
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_comm_appr_qty decimal(18,2);
    declare v_tmp_comm_qty decimal(18,2);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_comm_appr_date int;
    declare v_tmp_comm_appr_time int;
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_comm_executor int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);
    declare v_record_count int;
    declare v_tmp_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_appr_qty = p_comm_appr_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_comm_appr_date = p_comm_appr_date;
    SET v_comm_appr_time = p_comm_appr_time;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_comm_appr_qty = 0;
    SET v_tmp_comm_qty = 0;
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_executor = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";
    SET v_record_count = 0;
    SET v_tmp_record_count = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* set @临时_指令审批数量# = @指令审批数量#; */
    set v_tmp_comm_appr_qty = v_comm_appr_qty;

    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @临时_指令撤销数量# = @指令撤销数量#; */
    set v_tmp_comm_cancel_qty = v_comm_cancel_qty;

    /* set @临时_指令审批日期# = @指令审批日期#; */
    set v_tmp_comm_appr_date = v_comm_appr_date;

    /* set @临时_指令审批时间# = @指令审批时间#; */
    set v_tmp_comm_appr_time = v_comm_appr_time;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_指令执行人# = @指令执行人#; */
    set v_tmp_comm_executor = v_comm_executor;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#,@指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.19.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* set @指令撤销数量#= @指令撤销数量# + @临时_指令撤销数量#; */
    set v_comm_cancel_qty= v_comm_cancel_qty + v_tmp_comm_cancel_qty;

    /* set @指令审批数量#= @指令审批数量# + @临时_指令审批数量#; */
    set v_comm_appr_qty= v_comm_appr_qty + v_tmp_comm_appr_qty;

    /* 调用【原子_交易证券_公用_计算指令汇总审批状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumApprStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_comm_appr_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_approve_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.19.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总审批状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @临时_指令审批日期# > @指令审批日期# then */
    if v_tmp_comm_appr_date > v_comm_appr_date then

        /* set @指令审批日期# = @临时_指令审批日期#; */
        set v_comm_appr_date = v_tmp_comm_appr_date;
    end if;

    /* if @临时_指令审批时间# > @指令审批时间# then */
    if v_tmp_comm_appr_time > v_comm_appr_time then

        /* set @指令审批时间# = @临时_指令审批时间#; */
        set v_comm_appr_time = v_tmp_comm_appr_time;
    end if;

    /* if @临时_指令完成日期# > 0 and (@临时_指令完成日期# < @指令完成日期# or @指令完成日期# = 0) then */
    if v_tmp_comm_comple_date > 0 and (v_tmp_comm_comple_date < v_comm_comple_date or v_comm_comple_date = 0) then

        /* set @指令完成日期#  = @临时_指令完成日期#; */
        set v_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成日期# > @指令最大完成日期# then */
    if v_tmp_comm_comple_date > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @临时_指令完成日期#; */
        set v_max_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成时间# > 0 and (@临时_指令完成时间# < @指令完成时间# or @指令完成时间# = 0) then */
    if v_tmp_comm_comple_time > 0 and (v_tmp_comm_comple_time < v_comm_comple_time or v_comm_comple_time = 0) then

        /* set @指令完成时间# = @临时_指令完成时间#; */
        set v_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* if @临时_指令完成时间# > @指令最大完成时间# then */
    if v_tmp_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @临时_指令完成时间#; */
        set v_max_comm_comple_time = v_tmp_comm_comple_time;
    end if;
    #获取指令明细状态 再更新 指令汇总状态。modify by wjp 20181014

    /* if @指令批号#>0  then */
    if v_comm_batch_no>0  then

        /* [获取表记录数量][交易证券_指令_指令表][@记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》) or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1") or (comm_status="3" and strike_status="2"));


        /* if  @记录个数# =0  then */
        if  v_record_count =0  then

                /* [获取表记录数量][交易证券_指令_指令表][@临时_记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  {指令状态}=《指令状态-暂停执行》] */
                select count(1) into v_tmp_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  comm_status="7";


                /* if @临时_记录个数# >0  then */
                if v_tmp_record_count >0  then

                      /* set @指令汇总状态# =《指令汇总状态-暂停执行》; */
                      set v_comm_sum_status ="7";

                /* elseif @临时_记录个数#=0  then */
                elseif v_tmp_record_count=0  then

                      /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
                      call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                          v_opor_co_no,
                          v_opor_no,
                          v_oper_mac,
                          v_oper_ip_addr,
                          v_oper_info,
                          v_oper_way,
                          v_func_code,
                          v_comm_qty,
                          v_order_qty,
                          v_comm_cancel_qty,
                          v_comm_await_cancel_qty,
                          v_strike_qty,
                          v_error_code,
                          v_error_info,
                          v_comm_sum_status);
                      if v_error_code = "1" then
                          SET v_error_code = "tdsecuA.3.19.999";
                          if v_mysql_message <> "" then
                               SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                          end if;
                          leave label_pro;
                      elseif v_error_code <> "0" then
                          leave label_pro;
                      end if;

                end if;

        /* elseif  @记录个数# >0  then */
        elseif  v_record_count >0  then

              /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
              call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                  v_opor_co_no,
                  v_opor_no,
                  v_oper_mac,
                  v_oper_ip_addr,
                  v_oper_info,
                  v_oper_way,
                  v_func_code,
                  v_comm_qty,
                  v_order_qty,
                  v_comm_cancel_qty,
                  v_comm_await_cancel_qty,
                  v_strike_qty,
                  v_error_code,
                  v_error_info,
                  v_comm_sum_status);
              if v_error_code = "1" then
                  SET v_error_code = "tdsecuA.3.19.999";
                  if v_mysql_message <> "" then
                       SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                  end if;
                  leave label_pro;
              elseif v_error_code <> "0" then
                  leave label_pro;
              end if;

         end if;
    end if;

    /* [更新表记录][交易证券_指令_指令汇总表][{指令撤销数量}= @指令撤销数量#,{指令审批数量}= @指令审批数量#, {指令完成日期} = @指令完成日期#, {指令完成时间} = @指令完成时间#, {指令最大完成日期} = @指令最大完成日期#, {指令最大完成时间} = @指令最大完成时间#, {指令审批日期}=@指令审批日期#,{指令审批时间}=@指令审批时间#,{指令汇总审批状态}=@指令汇总审批状态#,{指令汇总状态}=@指令汇总状态#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and  {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_cancel_qty= v_comm_cancel_qty,comm_appr_qty= v_comm_appr_qty, comm_comple_date = v_comm_comple_date, comm_comple_time = v_comm_comple_time, max_comm_comple_date = v_max_comm_comple_date, max_comm_comple_time = v_max_comm_comple_time, comm_appr_date=v_comm_appr_date,comm_appr_time=v_comm_appr_time,comm_sum_approve_status=v_comm_sum_approve_status,comm_sum_status=v_comm_sum_status where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and  comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.19.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_下单更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_OrderUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_OrderUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_status varchar(2),
    IN p_comm_dir int,
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_order_qty decimal(18,2),
    IN p_comm_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_status varchar(2);
    declare v_comm_dir int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_order_qty decimal(18,2);
    declare v_comm_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_order_qty decimal(18,2);
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_buy_order_qty decimal(18,2);
    declare v_tmp_sell_order_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);
    declare v_record_count int;
    declare v_tmp_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_status = p_comm_status;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_order_qty = p_order_qty;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_comm_status = "0";
    SET v_tmp_order_qty = 0;
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_buy_order_qty = 0;
    SET v_tmp_sell_order_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";
    SET v_record_count = 0;
    SET v_tmp_record_count = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_订单数量# = @订单数量#; */
    set v_tmp_order_qty = v_order_qty;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_买入订单数量# = 0; */
    set v_tmp_buy_order_qty = 0;

    /* set @临时_卖出订单数量# = 0; */
    set v_tmp_sell_order_qty = 0;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》  or @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-买券还券》 then */
    if v_comm_dir = 1 or v_comm_dir = 3  or v_comm_dir = 5 or v_comm_dir = 8 then

        /* set @临时_买入订单数量# = @订单数量#; */
        set v_tmp_buy_order_qty = v_order_qty;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还券》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 or v_comm_dir = 6 or v_comm_dir = 7 or v_comm_dir = 15 then

        /* set @临时_卖出订单数量# = @订单数量#; */
        set v_tmp_sell_order_qty = v_order_qty;
    end if;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and  {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#,@指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and  comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.20.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if @临时_指令完成日期# > 0 and (@临时_指令完成日期# < @指令完成日期# or @指令完成日期# = 0) then */
    if v_tmp_comm_comple_date > 0 and (v_tmp_comm_comple_date < v_comm_comple_date or v_comm_comple_date = 0) then

        /* set @指令完成日期#  = @临时_指令完成日期#; */
        set v_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成日期#  > @指令最大完成日期# then */
    if v_tmp_comm_comple_date  > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @临时_指令完成日期#; */
        set v_max_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成时间# > 0 and (@临时_指令完成时间# < @指令完成时间# or @指令完成时间# = 0) then */
    if v_tmp_comm_comple_time > 0 and (v_tmp_comm_comple_time < v_comm_comple_time or v_comm_comple_time = 0) then

        /* set @指令完成时间# = @临时_指令完成时间#; */
        set v_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* if @临时_指令完成时间# > @指令最大完成时间# then */
    if v_tmp_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @临时_指令完成时间#; */
        set v_max_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* set @订单数量# = @订单数量# + @临时_订单数量#; */
    set v_order_qty = v_order_qty + v_tmp_order_qty;

    /* set @买入订单数量# = @买入订单数量# + @临时_买入订单数量#; */
    set v_buy_order_qty = v_buy_order_qty + v_tmp_buy_order_qty;

    /* set @卖出订单数量# = @卖出订单数量# + @临时_卖出订单数量#; */
    set v_sell_order_qty = v_sell_order_qty + v_tmp_sell_order_qty;

    /* set @临时_指令完成日期#  = @指令完成日期#; */
    set v_tmp_comm_comple_date  = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;
    #获取指令状态
    #获取指令明细状态 再更新 指令汇总状态。modify by wjp 20181014

    /* if @指令批号#>0  then */
    if v_comm_batch_no>0  then

        /* [获取表记录数量][交易证券_指令_指令表][@记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》) or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1") or (comm_status="3" and strike_status="2"));


        /* if  @记录个数# =0  then */
        if  v_record_count =0  then

                /* [获取表记录数量][交易证券_指令_指令表][@临时_记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  {指令状态}=《指令状态-暂停执行》] */
                select count(1) into v_tmp_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  comm_status="7";


                /* if @临时_记录个数# >0  then */
                if v_tmp_record_count >0  then

                      /* set @指令汇总状态# =《指令汇总状态-暂停执行》; */
                      set v_comm_sum_status ="7";

                /* elseif @临时_记录个数#=0  then */
                elseif v_tmp_record_count=0  then

                      /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
                      call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                          v_opor_co_no,
                          v_opor_no,
                          v_oper_mac,
                          v_oper_ip_addr,
                          v_oper_info,
                          v_oper_way,
                          v_func_code,
                          v_comm_qty,
                          v_order_qty,
                          v_comm_cancel_qty,
                          v_comm_await_cancel_qty,
                          v_strike_qty,
                          v_error_code,
                          v_error_info,
                          v_comm_sum_status);
                      if v_error_code = "1" then
                          SET v_error_code = "tdsecuA.3.20.999";
                          if v_mysql_message <> "" then
                               SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                          end if;
                          leave label_pro;
                      elseif v_error_code <> "0" then
                          leave label_pro;
                      end if;

                end if;

        /* elseif  @记录个数# >0  then */
        elseif  v_record_count >0  then

              /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
              call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                  v_opor_co_no,
                  v_opor_no,
                  v_oper_mac,
                  v_oper_ip_addr,
                  v_oper_info,
                  v_oper_way,
                  v_func_code,
                  v_comm_qty,
                  v_order_qty,
                  v_comm_cancel_qty,
                  v_comm_await_cancel_qty,
                  v_strike_qty,
                  v_error_code,
                  v_error_info,
                  v_comm_sum_status);
              if v_error_code = "1" then
                  SET v_error_code = "tdsecuA.3.20.999";
                  if v_mysql_message <> "" then
                       SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                  end if;
                  leave label_pro;
              elseif v_error_code <> "0" then
                  leave label_pro;
              end if;

         end if;
    end if;

    /* set @指令完成日期#  = @临时_指令完成日期#; */
    set v_comm_comple_date  = v_tmp_comm_comple_date;

    /* set @指令完成时间# = @临时_指令完成时间#; */
    set v_comm_comple_time = v_tmp_comm_comple_time;

    /* [更新表记录][交易证券_指令_指令汇总表][{订单数量}=@订单数量#,{买入订单数量}=@买入订单数量#,{卖出订单数量}=@卖出订单数量#,{指令汇总状态}=@指令汇总状态#,{指令完成日期} = @指令完成日期#, {指令完成时间} = @指令完成时间#, {指令最大完成日期} = @指令最大完成日期#, {指令最大完成时间} = @指令最大完成时间# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and  {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=v_order_qty,buy_order_qty=v_buy_order_qty,sell_order_qty=v_sell_order_qty,comm_sum_status=v_comm_sum_status,comm_comple_date = v_comm_comple_date, comm_comple_time = v_comm_comple_time, max_comm_comple_date = v_max_comm_comple_date, max_comm_comple_time = v_max_comm_comple_time  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and  comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.20.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_撤销更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CancelUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CancelUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_status varchar(2),
    IN p_comm_dir int,
    IN p_comm_cancel_qty decimal(18,2),
    IN p_comm_await_cancel_qty decimal(18,2),
    IN p_wtdraw_qty decimal(18,2),
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_status varchar(2);
    declare v_comm_dir int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_comm_await_cancel_qty decimal(18,2);
    declare v_tmp_comm_dir int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);
    declare v_record_count int;
    declare v_tmp_record_count int;
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_status = p_comm_status;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_comm_await_cancel_qty = p_comm_await_cancel_qty;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_comm_status = "0";
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_await_cancel_qty = 0;
    SET v_tmp_comm_dir = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";
    SET v_record_count = 0;
    SET v_tmp_record_count = 0;
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* set @临时_指令撤销数量#=@指令撤销数量#; */
    set v_tmp_comm_cancel_qty=v_comm_cancel_qty;

    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_指令待撤销数量#=@指令待撤销数量#; */
    set v_tmp_comm_await_cancel_qty=v_comm_await_cancel_qty;

    /* set @临时_指令方向#=@指令方向#; */
    set v_tmp_comm_dir=v_comm_dir;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#,@指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.21.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if @临时_指令完成日期# > 0 and (@临时_指令完成日期# < @指令完成日期# or @指令完成日期# = 0) then */
    if v_tmp_comm_comple_date > 0 and (v_tmp_comm_comple_date < v_comm_comple_date or v_comm_comple_date = 0) then

        /* set @指令完成日期#  = @临时_指令完成日期#; */
        set v_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成日期# > @指令最大完成日期# then */
    if v_tmp_comm_comple_date > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @临时_指令完成日期#; */
        set v_max_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成时间# > 0 and (@临时_指令完成时间# < @指令完成时间# or @指令完成时间# = 0) then */
    if v_tmp_comm_comple_time > 0 and (v_tmp_comm_comple_time < v_comm_comple_time or v_comm_comple_time = 0) then

        /* set @指令完成时间# = @临时_指令完成时间#; */
        set v_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* if @临时_指令完成时间# > @指令最大完成时间# then */
    if v_tmp_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @临时_指令完成时间#; */
        set v_max_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* set @指令撤销数量# = @指令撤销数量# + @临时_指令撤销数量#; */
    set v_comm_cancel_qty = v_comm_cancel_qty + v_tmp_comm_cancel_qty;

    /* set @订单数量# = @订单数量# - @撤单数量#; */
    set v_order_qty = v_order_qty - v_wtdraw_qty;

    /* set @指令待撤销数量# = @指令待撤销数量# + @临时_指令待撤销数量#; */
    set v_comm_await_cancel_qty = v_comm_await_cancel_qty + v_tmp_comm_await_cancel_qty;

    /* set @指令方向#=@临时_指令方向#; */
    set v_comm_dir=v_tmp_comm_dir;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 or @指令方向# = 《指令方向-新股申购》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 or v_comm_dir = 11 then

        /* set @买入订单数量# = @买入订单数量# - @撤单数量#; */
        set v_buy_order_qty = v_buy_order_qty - v_wtdraw_qty;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 or  @指令方向# = 《指令方向-零股卖出》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 or  v_comm_dir = 31 then

        /* set @卖出订单数量# = @卖出订单数量# - @撤单数量#; */
        set v_sell_order_qty = v_sell_order_qty - v_wtdraw_qty;
    end if;

    /* set @临时_指令完成日期#  = @指令完成日期#; */
    set v_tmp_comm_comple_date  = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;
    #获取指令成交状态 modify by wjp 20180925

    /* if @指令批号#>0  then */
    if v_comm_batch_no>0  then

        /* [获取表记录数量][交易证券_指令_指令表][@记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》) or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1") or (comm_status="3" and strike_status="2"));


        /* if  @记录个数# =0  then */
        if  v_record_count =0  then

                /* [获取表记录数量][交易证券_指令_指令表][@临时_记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  {指令状态}=《指令状态-暂停执行》] */
                select count(1) into v_tmp_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  comm_status="7";


                /* if @临时_记录个数# >0  then */
                if v_tmp_record_count >0  then

                      /* set @指令汇总状态# =《指令汇总状态-暂停执行》; */
                      set v_comm_sum_status ="7";

                /* elseif @临时_记录个数#=0  then */
                elseif v_tmp_record_count=0  then

                      /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
                      call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                          v_opor_co_no,
                          v_opor_no,
                          v_oper_mac,
                          v_oper_ip_addr,
                          v_oper_info,
                          v_oper_way,
                          v_func_code,
                          v_comm_qty,
                          v_order_qty,
                          v_comm_cancel_qty,
                          v_comm_await_cancel_qty,
                          v_strike_qty,
                          v_error_code,
                          v_error_info,
                          v_comm_sum_status);
                      if v_error_code = "1" then
                          SET v_error_code = "tdsecuA.3.21.999";
                          if v_mysql_message <> "" then
                               SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                          end if;
                          leave label_pro;
                      elseif v_error_code <> "0" then
                          leave label_pro;
                      end if;

                end if;

        /* elseif  @记录个数# >0  then */
        elseif  v_record_count >0  then

              /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
              call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                  v_opor_co_no,
                  v_opor_no,
                  v_oper_mac,
                  v_oper_ip_addr,
                  v_oper_info,
                  v_oper_way,
                  v_func_code,
                  v_comm_qty,
                  v_order_qty,
                  v_comm_cancel_qty,
                  v_comm_await_cancel_qty,
                  v_strike_qty,
                  v_error_code,
                  v_error_info,
                  v_comm_sum_status);
              if v_error_code = "1" then
                  SET v_error_code = "tdsecuA.3.21.999";
                  if v_mysql_message <> "" then
                       SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                  end if;
                  leave label_pro;
              elseif v_error_code <> "0" then
                  leave label_pro;
              end if;

         end if;
    end if;

    /* set @指令完成日期#  = @临时_指令完成日期#; */
    set v_comm_comple_date  = v_tmp_comm_comple_date;

    /* set @指令完成时间# = @临时_指令完成时间#; */
    set v_comm_comple_time = v_tmp_comm_comple_time;
    #同批指令，有指令变为终态(即,部撤、全部撤销、全部执行且已成)，需重新汇总 指令限价、指令实际限价。Modify by wjp 20190214

    /* [获取表记录变量][交易证券_指令_指令表][ifnull(sum({指令限价}),0),ifnull({指令限价},0),ifnull(sum({指令实际限价}),0),ifnull({指令实际限价},0),count(*)][@临时_指令限价#,@指令限价#,@临时_指令实际限价#,@指令实际限价#,@记录个数#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人# and  ({指令状态}=《指令状态-待撤销》  or {指令状态}=《指令状态-暂停执行》  or {指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select ifnull(sum(comm_limit_price),0),ifnull(comm_limit_price,0),ifnull(sum(limit_actual_price),0),ifnull(limit_actual_price,0),count(*) into v_tmp_comm_limit_price,v_comm_limit_price,v_tmp_limit_actual_price,v_limit_actual_price,v_record_count from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor and  (comm_status="4"  or comm_status="7"  or comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1" ) or(comm_status="3" and strike_status="2")) limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.21.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if @记录个数# <> 0  then */
    if v_record_count <> 0  then

        /* if @临时_指令限价# / @记录个数# <> @指令限价# then */
        if v_tmp_comm_limit_price / v_record_count <> v_comm_limit_price then

            /* set @指令限价# = 0; */
            set v_comm_limit_price = 0;
        end if;

        /* if @临时_指令实际限价# / @记录个数# <> @指令实际限价# then */
        if v_tmp_limit_actual_price / v_record_count <> v_limit_actual_price then

            /* set @指令实际限价# = 0; */
            set v_limit_actual_price = 0;
        end if;

       /* [更新表记录][交易证券_指令_指令汇总表][{指令限价} = @指令限价#,{指令实际限价} = @指令实际限价#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
       set v_update_date = date_format(curdate(),'%Y%m%d');
       set v_update_time = date_format(curtime(),'%H%i%s');
       update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_limit_price = v_comm_limit_price,limit_actual_price = v_limit_actual_price where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
       if v_error_code = "1" then
                   
           SET v_error_code = "tdsecuA.3.21.2";
           if v_mysql_message <> "" then
               SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
           else
               SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
           end if;
           leave label_pro;
       end if;

    end if;

    /* [更新表记录][交易证券_指令_指令汇总表][{订单数量}=@订单数量#,{买入订单数量}=@买入订单数量#,{卖出订单数量}=@卖出订单数量#,{指令撤销数量}=@指令撤销数量#,{指令待撤销数量}=@指令待撤销数量#,{指令汇总状态}=@指令汇总状态#,{指令完成日期} = @指令完成日期#, {指令完成时间} = @指令完成时间#, {指令最大完成日期} = @指令最大完成日期#, {指令最大完成时间} = @指令最大完成时间#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=v_order_qty,buy_order_qty=v_buy_order_qty,sell_order_qty=v_sell_order_qty,comm_cancel_qty=v_comm_cancel_qty,comm_await_cancel_qty=v_comm_await_cancel_qty,comm_sum_status=v_comm_sum_status,comm_comple_date = v_comm_comple_date, comm_comple_time = v_comm_comple_time, max_comm_comple_date = v_max_comm_comple_date, max_comm_comple_time = v_max_comm_comple_time where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.21.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_成交更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_StrikeUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_StrikeUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_status varchar(2),
    IN p_comm_dir int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_oper_way varchar(2),
    IN p_sell_ref_rate decimal(18,12),
    IN p_buy_ref_rate decimal(18,12),
    IN p_exch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_status varchar(2);
    declare v_comm_dir int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_oper_way varchar(2);
    declare v_sell_ref_rate decimal(18,12);
    declare v_buy_ref_rate decimal(18,12);
    declare v_exch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_comm_dir int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);
    declare v_tmp_row_id bigint;
    declare v_record_count int;
    declare v_tmp_record_count int;
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_status = p_comm_status;
    SET v_comm_dir = p_comm_dir;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_exch_no = p_exch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_tmp_comm_status = "0";
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_dir = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";
    SET v_tmp_row_id = 0;
    SET v_record_count = 0;
    SET v_tmp_record_count = 0;
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* if @市场编号# =《市场编号-沪港通证券交易所》 or @市场编号# =《市场编号-深港通证券交易所》 then */
    if v_exch_no =3 or v_exch_no =4 then

        /* if @指令方向# = 《指令方向-买入》 then */
        if v_comm_dir = 1 then

            /* set @成交金额# = round(@成交金额# * @卖出参考汇率#,2); */
            set v_strike_amt = round(v_strike_amt * v_sell_ref_rate,2);
        else

            /* set @成交金额# = round(@成交金额# * @买入参考汇率#,2); */
            set v_strike_amt = round(v_strike_amt * v_buy_ref_rate,2);
        end if;
    end if;
    #保存输入参数

    /* set @临时_成交数量#=@成交数量#; */
    set v_tmp_strike_qty=v_strike_qty;

    /* set @临时_成交金额#=@成交金额#; */
    set v_tmp_strike_amt=v_strike_amt;

    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_指令方向#=@指令方向#; */
    set v_tmp_comm_dir=v_comm_dir;

    /* [不报错锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;


    /* set @临时_记录序号# = @记录序号#; */
    set v_tmp_row_id = v_row_id;

    /* if @临时_记录序号#=0 then */
    if v_tmp_row_id=0 then

        /* [锁定获取表记录变量][历史_交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
        select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_code_no, 
            stock_code, target_code_no, trade_code_no, stock_type, 
            asset_type, comm_date, comm_time, comm_batch_no, 
            comm_opor, comm_executor, comm_dir, comm_limit_price, 
            limit_actual_price, comm_qty, comm_amt, order_qty, 
            comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
            net_price_flag, par_value, impawn_ratio, intrst_days, 
            bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
            comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
            basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
            sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
            sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
            exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
            v_update_date, v_update_time, v_update_times, v_opor_co_no, 
            v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
            v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
            v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
            v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
            v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
            v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
            v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
            v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
            v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
            v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
            v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
            v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
            v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
            v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
            v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
            v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
            v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
            v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu_his.tb_tdseap_sumcommand_his where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
        if FOUND_ROWS() = 0 then
                    
            SET v_error_code = "tdsecuA.3.22.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @临时_指令完成日期# > 0 and (@临时_指令完成日期# < @指令完成日期# or @指令完成日期# = 0) then */
    if v_tmp_comm_comple_date > 0 and (v_tmp_comm_comple_date < v_comm_comple_date or v_comm_comple_date = 0) then

        /* set @指令完成日期#  = @临时_指令完成日期#; */
        set v_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成日期# > @指令最大完成日期# then */
    if v_tmp_comm_comple_date > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @临时_指令完成日期#; */
        set v_max_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成时间# > 0 and (@临时_指令完成时间# < @指令完成时间# or @指令完成时间# = 0) then */
    if v_tmp_comm_comple_time > 0 and (v_tmp_comm_comple_time < v_comm_comple_time or v_comm_comple_time = 0) then

        /* set @指令完成时间# = @临时_指令完成时间#; */
        set v_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* if @临时_指令完成时间# > @指令最大完成时间# then */
    if v_tmp_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @临时_指令完成时间#; */
        set v_max_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* set @成交数量# = @成交数量# + @临时_成交数量#; */
    set v_strike_qty = v_strike_qty + v_tmp_strike_qty;

    /* set @成交金额# = @成交金额# + @临时_成交金额#; */
    set v_strike_amt = v_strike_amt + v_tmp_strike_amt;

    /* if @临时_指令状态# = 《指令状态-待撤销》 or @临时_指令状态# = 《指令状态-部分撤销》 then */
    if v_tmp_comm_status = "4" or v_tmp_comm_status = "5" then

        /* set @指令待撤销数量# = @指令待撤销数量# - @临时_成交数量#; */
        set v_comm_await_cancel_qty = v_comm_await_cancel_qty - v_tmp_strike_qty;
    end if;

    /* set @临时_指令完成日期#  = @指令完成日期#; */
    set v_tmp_comm_comple_date  = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;
    #获取指令成交状态 modify by wjp 20180925

    /* if @指令批号#>0  then */
    if v_comm_batch_no>0  then

        /* [获取表记录数量][交易证券_指令_指令表][@记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》) or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1") or (comm_status="3" and strike_status="2"));


        /* if  @记录个数# =0  then */
        if  v_record_count =0  then

                /* [获取表记录数量][交易证券_指令_指令表][@临时_记录个数#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  {指令状态}=《指令状态-暂停执行》] */
                select count(1) into v_tmp_record_count from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  comm_status="7";


                /* if @临时_记录个数# >0  then */
                if v_tmp_record_count >0  then

                      /* set @指令汇总状态# =《指令汇总状态-暂停执行》; */
                      set v_comm_sum_status ="7";

                /* elseif @临时_记录个数#=0  then */
                elseif v_tmp_record_count=0  then

                      /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
                      call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                          v_opor_co_no,
                          v_opor_no,
                          v_oper_mac,
                          v_oper_ip_addr,
                          v_oper_info,
                          v_oper_way,
                          v_func_code,
                          v_comm_qty,
                          v_order_qty,
                          v_comm_cancel_qty,
                          v_comm_await_cancel_qty,
                          v_strike_qty,
                          v_error_code,
                          v_error_info,
                          v_comm_sum_status);
                      if v_error_code = "1" then
                          SET v_error_code = "tdsecuA.3.22.999";
                          if v_mysql_message <> "" then
                               SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                          end if;
                          leave label_pro;
                      elseif v_error_code <> "0" then
                          leave label_pro;
                      end if;

                end if;

        /* elseif  @记录个数# >0  then */
        elseif  v_record_count >0  then

              /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
              call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
                  v_opor_co_no,
                  v_opor_no,
                  v_oper_mac,
                  v_oper_ip_addr,
                  v_oper_info,
                  v_oper_way,
                  v_func_code,
                  v_comm_qty,
                  v_order_qty,
                  v_comm_cancel_qty,
                  v_comm_await_cancel_qty,
                  v_strike_qty,
                  v_error_code,
                  v_error_info,
                  v_comm_sum_status);
              if v_error_code = "1" then
                  SET v_error_code = "tdsecuA.3.22.999";
                  if v_mysql_message <> "" then
                       SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
                  end if;
                  leave label_pro;
              elseif v_error_code <> "0" then
                  leave label_pro;
              end if;

         end if;
    end if;

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.22.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令完成日期#  = @临时_指令完成日期#; */
    set v_comm_comple_date  = v_tmp_comm_comple_date;

    /* set @指令完成时间# = @临时_指令完成时间#; */
    set v_comm_comple_time = v_tmp_comm_comple_time;

    /* set @指令方向#=@临时_指令方向#; */
    set v_comm_dir=v_tmp_comm_dir;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 or @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-买券还券》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 or v_comm_dir = 5 or v_comm_dir = 8 then

        /* set @买入成交数量# = @买入成交数量# + @临时_成交数量#; */
        set v_buy_strike_qty = v_buy_strike_qty + v_tmp_strike_qty;

        /* set @买入成交金额# = @买入成交金额# + @临时_成交金额#; */
        set v_buy_strike_amt = v_buy_strike_amt + v_tmp_strike_amt;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 or v_comm_dir = 6 or v_comm_dir = 7 then

        /* set @卖出成交数量# = @卖出成交数量# + @临时_成交数量#; */
        set v_sell_strike_qty = v_sell_strike_qty + v_tmp_strike_qty;

        /* set @卖出成交金额# = @卖出成交金额# + @临时_成交金额#; */
        set v_sell_strike_amt = v_sell_strike_amt + v_tmp_strike_amt;
    end if;
    #同批指令，有指令变为终态(即,部撤、全部撤销、全部执行且已成)，需重新汇总 指令限价、指令实际限价。Modify by wjp 20190214

    /* [获取表记录变量][交易证券_指令_指令表][ifnull(sum({指令限价}),0),ifnull({指令限价},0),ifnull(sum({指令实际限价}),0),ifnull({指令实际限价},0),count(*)][@临时_指令限价#,@指令限价#,@临时_指令实际限价#,@指令实际限价#,@记录个数#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人# and  ({指令状态}=《指令状态-待撤销》  or {指令状态}=《指令状态-暂停执行》  or {指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select ifnull(sum(comm_limit_price),0),ifnull(comm_limit_price,0),ifnull(sum(limit_actual_price),0),ifnull(limit_actual_price,0),count(*) into v_tmp_comm_limit_price,v_comm_limit_price,v_tmp_limit_actual_price,v_limit_actual_price,v_record_count from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor and  (comm_status="4"  or comm_status="7"  or comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1" ) or(comm_status="3" and strike_status="2")) limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.22.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if @记录个数# <> 0 then */
    if v_record_count <> 0 then

        /* if @临时_指令限价# / @记录个数# <> @指令限价# then */
        if v_tmp_comm_limit_price / v_record_count <> v_comm_limit_price then

            /* set @指令限价# = 0; */
            set v_comm_limit_price = 0;
        end if;

        /* if @临时_指令实际限价# / @记录个数# <> @指令实际限价# then */
        if v_tmp_limit_actual_price / v_record_count <> v_limit_actual_price then

            /* set @指令实际限价# = 0; */
            set v_limit_actual_price = 0;
        end if;

        /* [更新表记录][交易证券_指令_指令汇总表][{指令限价} = @指令限价#,{指令实际限价} = @指令实际限价#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_limit_price = v_comm_limit_price,limit_actual_price = v_limit_actual_price where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.22.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
            end if;
            leave label_pro;
        end if;

    end if;

    /* if @临时_记录序号#<>0 then */
    if v_tmp_row_id<>0 then

        /* [更新表记录][交易证券_指令_指令汇总表][{成交数量}=@成交数量#, {成交金额}=@成交金额#,{买入成交数量}=@买入成交数量#, {买入成交金额}=@买入成交金额#,{卖出成交数量}=@卖出成交数量#, {卖出成交金额}=@卖出成交金额#,{指令汇总状态}=@指令汇总状态#,{成交状态}=@成交状态#,{指令待撤销数量}=@指令待撤销数量#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=v_strike_qty, strike_amt=v_strike_amt,buy_strike_qty=v_buy_strike_qty, buy_strike_amt=v_buy_strike_amt,sell_strike_qty=v_sell_strike_qty, sell_strike_amt=v_sell_strike_amt,comm_sum_status=v_comm_sum_status,strike_status=v_strike_status,comm_await_cancel_qty=v_comm_await_cancel_qty,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.22.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
            end if;
            leave label_pro;
        end if;

    else

        /* [更新表记录][历史_交易证券_指令_指令汇总表][{成交数量}=@成交数量#, {成交金额}=@成交金额#,{买入成交数量}=@买入成交数量#, {买入成交金额}=@买入成交金额#,{卖出成交数量}=@卖出成交数量#, {卖出成交金额}=@卖出成交金额#,{指令汇总状态}=@指令汇总状态#,{成交状态}=@成交状态#,{指令待撤销数量}=@指令待撤销数量#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu_his.tb_tdseap_sumcommand_his set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=v_strike_qty, strike_amt=v_strike_amt,buy_strike_qty=v_buy_strike_qty, buy_strike_amt=v_buy_strike_amt,sell_strike_qty=v_sell_strike_qty, sell_strike_amt=v_sell_strike_amt,comm_sum_status=v_comm_sum_status,strike_status=v_strike_status,comm_await_cancel_qty=v_comm_await_cancel_qty,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.22.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
            end if;
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_修改指令更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ModiCommUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ModiCommUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_dir int,
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_begin_date int,
    IN p_comm_end_date int,
    IN p_comm_begin_time int,
    IN p_comm_end_time int,
    IN p_comm_appr_status varchar(2),
    IN p_comm_capt_qty decimal(18,2),
    IN p_comm_occur_qty decimal(18,2),
    IN p_comm_occur_amt decimal(18,4),
    IN p_comm_oper_way varchar(2),
    IN p_read_flag int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_capt_qty decimal(18,2);
    declare v_comm_occur_qty decimal(18,2);
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_oper_way varchar(2);
    declare v_read_flag int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_comm_limit_price decimal(16,9);
    declare v_tmp_limit_actual_price decimal(16,9);
    declare v_tmp_comm_begin_date int;
    declare v_tmp_comm_end_date int;
    declare v_tmp_comm_begin_time int;
    declare v_tmp_comm_end_time int;
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_comm_dir int;
    declare v_tmp_read_flag int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_acco_concat_info varchar(4096);
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_begin_date = p_comm_begin_date;
    SET v_comm_end_date = p_comm_end_date;
    SET v_comm_begin_time = p_comm_begin_time;
    SET v_comm_end_time = p_comm_end_time;
    SET v_comm_appr_status = p_comm_appr_status;
    SET v_comm_capt_qty = p_comm_capt_qty;
    SET v_comm_occur_qty = p_comm_occur_qty;
    SET v_comm_occur_amt = p_comm_occur_amt;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_read_flag = p_read_flag;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_comm_limit_price = 0;
    SET v_tmp_limit_actual_price = 0;
    SET v_tmp_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_comm_dir = 0;
    SET v_tmp_read_flag = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_acco_concat_info = " ";
    SET v_record_count = 0;

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;


    /* set @临时_指令限价# = @指令限价#; */
    set v_tmp_comm_limit_price = v_comm_limit_price;

    /* set @临时_指令实际限价# = @指令实际限价#; */
    set v_tmp_limit_actual_price = v_limit_actual_price;

    /* set @临时_指令开始日期# = @指令开始日期#; */
    set v_tmp_comm_begin_date = v_comm_begin_date;

    /* set @临时_指令结束日期# = @指令结束日期#; */
    set v_tmp_comm_end_date = v_comm_end_date;

    /* set @临时_指令开始时间# = @指令开始时间#; */
    set v_tmp_comm_begin_time = v_comm_begin_time;

    /* set @临时_指令结束时间# = @指令结束时间#; */
    set v_tmp_comm_end_time = v_comm_end_time;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_指令方向#=@指令方向#; */
    set v_tmp_comm_dir=v_comm_dir;

    /* set @临时_已读标记#=@已读标记#; */
    set v_tmp_read_flag=v_read_flag;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.23.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* if  @指令占用数量# = @指令数量# then */
    if  v_comm_capt_qty = v_comm_qty then

        /* set @指令限价# = @临时_指令限价#; */
        set v_comm_limit_price = v_tmp_comm_limit_price;

        /* set @指令实际限价# = @临时_指令实际限价#; */
        set v_limit_actual_price = v_tmp_limit_actual_price;
    else

        /* [获取表记录变量][交易证券_指令_指令表][ifnull(sum({指令限价}),0),ifnull({指令限价},0),ifnull(sum({指令实际限价}),0),ifnull({指令实际限价},0),count(*)][@临时_指令限价#,@指令限价#,@临时_指令实际限价#,@指令实际限价#,@记录个数#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人# and  ({指令状态}=《指令状态-待撤销》  or {指令状态}=《指令状态-暂停执行》  or {指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
        select ifnull(sum(comm_limit_price),0),ifnull(comm_limit_price,0),ifnull(sum(limit_actual_price),0),ifnull(limit_actual_price,0),count(*) into v_tmp_comm_limit_price,v_comm_limit_price,v_tmp_limit_actual_price,v_limit_actual_price,v_record_count from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor and  (comm_status="4"  or comm_status="7"  or comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1" ) or(comm_status="3" and strike_status="2")) limit 1;
        if FOUND_ROWS() = 0 then
                    
            SET v_error_code = "tdsecuA.3.23.1";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
            end if;
            leave label_pro;
        end if;


        /* if @临时_指令限价# / @记录个数# <> @指令限价# then */
        if v_tmp_comm_limit_price / v_record_count <> v_comm_limit_price then

            /* set @指令限价# = 0; */
            set v_comm_limit_price = 0;
        end if;

        /* if @临时_指令实际限价# / @记录个数# <> @指令实际限价# then */
        if v_tmp_limit_actual_price / v_record_count <> v_limit_actual_price then

            /* set @指令实际限价# = 0; */
            set v_limit_actual_price = 0;
        end if;
    end if;

    /* if @临时_指令开始日期# < @指令开始日期# then */
    if v_tmp_comm_begin_date < v_comm_begin_date then

        /* set @指令开始日期# = @临时_指令开始日期#; */
        set v_comm_begin_date = v_tmp_comm_begin_date;
    end if;

    /* if @临时_指令结束日期# > @指令结束日期# then */
    if v_tmp_comm_end_date > v_comm_end_date then

        /* set @指令结束日期# = @临时_指令结束日期#; */
        set v_comm_end_date = v_tmp_comm_end_date;
    end if;

    /* if @临时_指令开始时间# < @指令开始时间# then */
    if v_tmp_comm_begin_time < v_comm_begin_time then

        /* set @指令开始时间# = @临时_指令开始时间#; */
        set v_comm_begin_time = v_tmp_comm_begin_time;
    end if;

    /* if @临时_指令结束时间# > @指令结束时间# then */
    if v_tmp_comm_end_time > v_comm_end_time then

        /* set @指令结束时间# = @临时_指令结束时间#; */
        set v_comm_end_time = v_tmp_comm_end_time;
    end if;

    /* if @临时_指令完成日期# > 0 and (@临时_指令完成日期# < @指令完成日期# or @指令完成日期# = 0) then */
    if v_tmp_comm_comple_date > 0 and (v_tmp_comm_comple_date < v_comm_comple_date or v_comm_comple_date = 0) then

        /* set @指令完成日期#  = @临时_指令完成日期#; */
        set v_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成日期# > @指令最大完成日期# then */
    if v_tmp_comm_comple_date > v_max_comm_comple_date then

        /* set @指令最大完成日期#  = @临时_指令完成日期#; */
        set v_max_comm_comple_date  = v_tmp_comm_comple_date;
    end if;

    /* if @临时_指令完成时间# > 0 and (@临时_指令完成时间# < @指令完成时间# or @指令完成时间# = 0) then */
    if v_tmp_comm_comple_time > 0 and (v_tmp_comm_comple_time < v_comm_comple_time or v_comm_comple_time = 0) then

        /* set @指令完成时间# = @临时_指令完成时间#; */
        set v_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* if @临时_指令完成时间# > @指令最大完成时间# then */
    if v_tmp_comm_comple_time > v_max_comm_comple_time then

        /* set @指令最大完成时间# = @临时_指令完成时间#; */
        set v_max_comm_comple_time = v_tmp_comm_comple_time;
    end if;

    /* set @指令数量# = @指令数量# + @指令变动数量#; */
    set v_comm_qty = v_comm_qty + v_comm_occur_qty;

    /* set @指令金额# = @指令金额# + @指令变动金额#; */
    set v_comm_amt = v_comm_amt + v_comm_occur_amt;

    /* set @指令方向#=@临时_指令方向#; */
    set v_comm_dir=v_tmp_comm_dir;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 or @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-买券还券》 or @指令方向# = 《指令方向-直接还款》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 or v_comm_dir = 5 or v_comm_dir = 8 or v_comm_dir = 14 then

        /* set @买入指令数量# = @买入指令数量# + @指令变动数量#; */
        set v_buy_comm_qty = v_buy_comm_qty + v_comm_occur_qty;

        /* set @买入指令金额# = @买入指令金额# + @指令变动金额#; */
        set v_buy_comm_amt = v_buy_comm_amt + v_comm_occur_amt;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》  or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还券》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4  or v_comm_dir = 6 or v_comm_dir = 7 or v_comm_dir = 15 then

        /* set @卖出指令数量# = @卖出指令数量# + @指令变动数量#; */
        set v_sell_comm_qty = v_sell_comm_qty + v_comm_occur_qty;

        /* set @卖出指令金额# = @卖出指令金额# + @指令变动金额#; */
        set v_sell_comm_amt = v_sell_comm_amt + v_comm_occur_amt;
    end if;

    /* if @指令审批状态# = 《指令审批状态-不审批》 or @指令审批状态# = 《指令审批状态-审批通过》 then */
    if v_comm_appr_status = "4" or v_comm_appr_status = "2" then

        /* set @指令审批数量# = @指令审批数量# + @指令变动数量#; */
        set v_comm_appr_qty = v_comm_appr_qty + v_comm_occur_qty;
    end if;

    /* set @临时_指令完成日期#  = @指令完成日期#; */
    set v_tmp_comm_comple_date  = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;
    #获取指令状态

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.23.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.23.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令汇总审批状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumApprStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_comm_appr_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_approve_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.23.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总审批状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令完成日期#  = @临时_指令完成日期#; */
    set v_comm_comple_date  = v_tmp_comm_comple_date;

    /* set @指令完成时间# = @临时_指令完成时间#; */
    set v_comm_comple_time = v_tmp_comm_comple_time;

    /* set @已读标记#=@临时_已读标记#; */
    set v_read_flag=v_tmp_read_flag;

    /* [更新表记录][交易证券_指令_指令汇总表][{指令数量}=@指令数量#,{指令金额}=@指令金额#,{买入指令数量}=@买入指令数量#,{买入指令金额}=@买入指令金额#,{卖出指令数量}=@卖出指令数量#,{卖出指令金额}=@卖出指令金额#,{指令审批数量}=@指令审批数量#,{指令汇总状态}=@指令汇总状态#,{指令汇总审批状态}=@指令汇总审批状态#,{成交状态}=@成交状态# ,{指令限价} = @指令限价#,{指令实际限价} = @指令实际限价#,{指令开始日期} = @指令开始日期#,{指令结束日期} = @指令结束日期#,{指令开始时间} = @指令开始时间#,{指令结束时间} = @指令结束时间#,{指令完成日期} = @指令完成日期#, {指令完成时间} = @指令完成时间#, {指令最大完成日期} = @指令最大完成日期#, {指令最大完成时间} = @指令最大完成时间#,{已读标记} = @已读标记# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_qty=v_comm_qty,comm_amt=v_comm_amt,buy_comm_qty=v_buy_comm_qty,buy_comm_amt=v_buy_comm_amt,sell_comm_qty=v_sell_comm_qty,sell_comm_amt=v_sell_comm_amt,comm_appr_qty=v_comm_appr_qty,comm_sum_status=v_comm_sum_status,comm_sum_approve_status=v_comm_sum_approve_status,strike_status=v_strike_status ,comm_limit_price = v_comm_limit_price,limit_actual_price = v_limit_actual_price,comm_begin_date = v_comm_begin_date,comm_end_date = v_comm_end_date,comm_begin_time = v_comm_begin_time,comm_end_time = v_comm_end_time,comm_comple_date = v_comm_comple_date, comm_comple_time = v_comm_comple_time, max_comm_comple_date = v_max_comm_comple_date, max_comm_comple_time = v_max_comm_comple_time,read_flag = v_read_flag  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.23.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_下单更新体外指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_OrderUpdateExterComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_OrderUpdateExterComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_comm_frozen_amt decimal(18,4),
    IN p_comm_frozen_qty decimal(18,2),
    IN p_order_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_exter_comm_flag int,
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_strike_qty decimal(18,2),
    OUT p_comm_strike_amt decimal(18,4),
    OUT p_comm_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_exter_comm_flag int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_strike_qty decimal(18,2);
    declare v_comm_strike_amt decimal(18,4);
    declare v_comm_qty decimal(18,2);
    declare v_tmp_order_qty decimal(18,2);
    declare v_tmp_comm_frozen_amt decimal(18,4);
    declare v_tmp_comm_frozen_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_amt decimal(18,4);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_tmp_comm_qty decimal(18,2);
    declare v_calc_dir int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_comm_frozen_qty = p_comm_frozen_qty;
    SET v_order_qty = p_order_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_strike_qty = 0;
    SET v_comm_strike_amt = 0;
    SET v_comm_qty = 0;
    SET v_tmp_order_qty = 0;
    SET v_tmp_comm_frozen_amt = 0;
    SET v_tmp_comm_frozen_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_amt = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_tmp_comm_qty = 0;
    SET v_calc_dir = 1;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_订单数量#=@订单数量#; */
    set v_tmp_order_qty=v_order_qty;

    /* set @临时_指令冻结金额# = @指令冻结金额#; */
    set v_tmp_comm_frozen_amt = v_comm_frozen_amt;

    /* set @临时_指令冻结数量# = @指令冻结数量#; */
    set v_tmp_comm_frozen_qty = v_comm_frozen_qty;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.24.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;

    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;
    #判断是否超过指令数量

    /* [检查报错返回][@临时_订单数量# >@指令数量# - @订单数量# - @指令撤销数量#][630][@临时_订单数量#,@指令数量#,@订单数量#,@指令撤销数量#] */
    if v_tmp_order_qty >v_comm_qty - v_order_qty - v_comm_cancel_qty then
        
        SET v_error_code = "tdsecuA.3.24.630";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_订单数量=",v_tmp_order_qty,",","指令数量=",v_comm_qty,",","订单数量=",v_order_qty,",","指令撤销数量=",v_comm_cancel_qty);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量#=@临时_订单数量#+@订单数量#; */
    set v_order_qty=v_tmp_order_qty+v_order_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.24.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    #重置订单数量为变动值

    /* set @订单数量#=@临时_订单数量#; */
    set v_order_qty=v_tmp_order_qty;

    /* set @指令数量#=@临时_订单数量#; */
    set v_comm_qty=v_tmp_order_qty;

    /* set @计算方向# = 《计算方向-减去》; */
    set v_calc_dir = -1;

    /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
    call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_stock_type,
        v_comm_dir,
        v_limit_actual_price,
        v_comm_qty,
        v_net_price_flag,
        v_par_value,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_calc_dir,
        v_error_code,
        v_error_info,
        v_comm_frozen_amt,
        v_comm_frozen_qty);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.24.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令表][{订单数量}={订单数量} + @订单数量#, {指令冻结金额} ={指令冻结金额} + @指令冻结金额#, {指令冻结数量} = {指令冻结数量}+@指令冻结数量#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间# ][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=order_qty + v_order_qty, comm_frozen_amt =comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty = comm_frozen_qty+v_comm_frozen_qty,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time  where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.24.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_指令_下单更新汇总指令】*/
    call db_tdsecu.pra_tdseap_OrderUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_comm_comple_date,
        v_comm_comple_time,
        v_order_qty,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.24.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_下单更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令数量# = @临时_指令数量#; */
    set v_comm_qty = v_tmp_comm_qty;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_strike_qty = v_comm_strike_qty;
    SET p_comm_strike_amt = v_comm_strike_amt;
    SET p_comm_qty = v_comm_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_成交更新体外指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_StrikeUpdateExterComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_StrikeUpdateExterComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_id bigint,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_dir int,
    IN p_comm_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_comm_strike_qty decimal(18,2),
    IN p_comm_strike_amt decimal(18,4),
    IN p_comm_status varchar(2),
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_comm_comple_flag int,
    IN p_comm_oper_way varchar(2),
    IN p_sell_ref_rate decimal(18,12),
    IN p_buy_ref_rate decimal(18,12),
    IN p_exch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_id bigint;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_strike_qty decimal(18,2);
    declare v_comm_strike_amt decimal(18,4);
    declare v_comm_status varchar(2);
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_comm_comple_flag int;
    declare v_comm_oper_way varchar(2);
    declare v_sell_ref_rate decimal(18,12);
    declare v_buy_ref_rate decimal(18,12);
    declare v_exch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_strike_status varchar(2);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_id = p_comm_id;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_comm_strike_qty = p_comm_strike_qty;
    SET v_comm_strike_amt = p_comm_strike_amt;
    SET v_comm_status = p_comm_status;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_comm_comple_flag = p_comm_comple_flag;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_exch_no = p_exch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_strike_status = "0";
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_成交数量#=@成交数量#; */
    set v_tmp_strike_qty=v_strike_qty;

    /* set @临时_成交金额#=@成交金额#; */
    set v_tmp_strike_amt=v_strike_amt;

    /* set @成交数量# = @指令成交数量# + @临时_成交数量#; */
    set v_strike_qty = v_comm_strike_qty + v_tmp_strike_qty;
    #获取指令成交状态

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.25.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令完成标志# = 《指令完成标志-已完成》 or (@指令数量# - @指令撤销数量# - @成交数量# = 0) then */
    if v_comm_comple_flag = 2 or (v_comm_qty - v_comm_cancel_qty - v_strike_qty = 0) then

        /* set @指令完成标志# = 《指令完成标志-已完成》; */
        set v_comm_comple_flag = 2;
    else

        /* set @指令完成标志# = 《指令完成标志-未完成》; */
        set v_comm_comple_flag = 1;
    end if;
    #重置指令撤销数量为变动值

    /* set @成交数量#=@临时_成交数量#; */
    set v_strike_qty=v_tmp_strike_qty;

    /* set @成交金额#=@临时_成交金额#; */
    set v_strike_amt=v_tmp_strike_amt;

    /* [更新表记录][交易证券_指令_指令表][{成交数量}={成交数量} + @成交数量#, {成交金额}={成交金额} + @成交金额#,{成交状态}=@成交状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令完成标志}=@指令完成标志# ][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=strike_qty + v_strike_qty, strike_amt=strike_amt + v_strike_amt,strike_status=v_strike_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,comm_comple_flag=v_comm_comple_flag  where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.25.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_指令_成交更新汇总指令】*/
    call db_tdsecu.pra_tdseap_StrikeUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_strike_qty,
        v_strike_amt,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_sell_ref_rate,
        v_buy_ref_rate,
        v_exch_no,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.25.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_成交更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_更新体外指令完成标志
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_UpdateExterCommCompleFlag;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_UpdateExterCommCompleFlag(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_comm_comple_flag int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_strike_qty decimal(18,2),
    OUT p_comm_strike_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_comm_comple_flag int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_strike_qty decimal(18,2);
    declare v_comm_strike_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_comm_comple_flag = p_comm_comple_flag;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_strike_qty = 0;
    SET v_comm_strike_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.26.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令表][{指令完成标志}=@指令完成标志# ][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_comple_flag=v_comm_comple_flag  where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.26.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_strike_qty = v_comm_strike_qty;
    SET p_comm_strike_amt = v_comm_strike_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_成交回溯更新体外指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_BackStrikeUpdateExterComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_BackStrikeUpdateExterComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_wtdraw_qty decimal(18,2),
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_dir int,
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_strike_qty decimal(18,2),
    OUT p_comm_strike_amt decimal(18,4),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_wtdraw_qty decimal(18,2);
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_dir int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_strike_qty decimal(18,2);
    declare v_comm_strike_amt decimal(18,4);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_tmp_wtdraw_qty decimal(18,2);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_tmp_comm_qty decimal(18,2);
    declare v_calc_dir int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_dir = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_strike_qty = 0;
    SET v_comm_strike_amt = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_tmp_wtdraw_qty = 0;
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_tmp_comm_qty = 0;
    SET v_calc_dir = 1;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_撤单数量#=@撤单数量#; */
    set v_tmp_wtdraw_qty=v_wtdraw_qty;

    /* set @临时_成交数量#=-1 * @成交数量#; */
    set v_tmp_strike_qty=-1 * v_strike_qty;

    /* set @临时_成交金额#=-1 * @成交金额#; */
    set v_tmp_strike_amt=-1 * v_strike_amt;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.27.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;
    #判断是否超过成交回溯

    /* [检查报错返回][@临时_成交数量# >@成交数量#][630][@临时_成交数量#,@成交数量#] */
    if v_tmp_strike_qty >v_strike_qty then
        
        SET v_error_code = "tdsecuA.3.27.630";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_成交数量=",v_tmp_strike_qty,",","成交数量=",v_strike_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_成交数量=",v_tmp_strike_qty,",","成交数量=",v_strike_qty);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量#=@订单数量# - @撤单数量#; */
    set v_order_qty=v_order_qty - v_wtdraw_qty;

    /* set @成交数量#=@成交数量# + @临时_成交数量#; */
    set v_strike_qty=v_strike_qty + v_tmp_strike_qty;

    /* set @成交金额#=@成交金额# + @临时_成交金额#; */
    set v_strike_amt=v_strike_amt + v_tmp_strike_amt;

    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;

    /* set @指令冻结金额# = 0; */
    set v_comm_frozen_amt = 0;

    /* set @指令冻结数量# = 0; */
    set v_comm_frozen_qty = 0;

    /* set @指令数量# = @撤单数量#; */
    set v_comm_qty = v_wtdraw_qty;

    /* set @计算方向# = 《计算方向-加上》; */
    set v_calc_dir = 1;

    /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
    call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_stock_type,
        v_comm_dir,
        v_limit_actual_price,
        v_comm_qty,
        v_net_price_flag,
        v_par_value,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_calc_dir,
        v_error_code,
        v_error_info,
        v_comm_frozen_amt,
        v_comm_frozen_qty);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.27.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    #获取指令状态,不为暂停再重算

    /* set @指令数量# = @临时_指令数量#; */
    set v_comm_qty = v_tmp_comm_qty;

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.27.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.27.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令表][{订单数量}=@订单数量#, {指令冻结金额} = {指令冻结金额} + @指令冻结金额#, {指令冻结数量} = {指令冻结数量} + @指令冻结数量#, {指令状态}=@指令状态#, {成交状态}=@成交状态#,{成交数量}=@指令成交数量#, {成交金额}=@指令成交金额#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#, {指令完成标志} = 《指令完成标志-未完成》][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=v_order_qty, comm_frozen_amt = comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty, comm_status=v_comm_status, strike_status=v_strike_status,strike_qty=v_comm_strike_qty, strike_amt=v_comm_strike_amt,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time, comm_comple_flag = 1 where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.27.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量# = -1 * @临时_成交数量#; */
    set v_order_qty = -1 * v_tmp_strike_qty;

    /* set @成交数量# = -1 * @临时_成交数量#; */
    set v_strike_qty = -1 * v_tmp_strike_qty;

    /* set @成交金额# = -1 * @临时_成交金额#; */
    set v_strike_amt = -1 * v_tmp_strike_amt;

    /* 调用【原子_交易证券_指令_成交回溯更新汇总指令】*/
    call db_tdsecu.pra_tdseap_BackStrikeUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_order_qty,
        v_strike_qty,
        v_strike_amt,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.27.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_成交回溯更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_strike_qty = v_comm_strike_qty;
    SET p_comm_strike_amt = v_comm_strike_amt;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_status = v_comm_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_初始化更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_InitUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_InitUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_id bigint,
    IN p_comm_cancel_qty decimal(18,2),
    IN p_wtdraw_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_id bigint;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_init_date int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_occur_qty decimal(18,2);
    declare v_calc_dir int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_id = p_comm_id;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_init_date = date_format(curdate(),'%Y%m%d');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_occur_qty = 0;
    SET v_calc_dir = 1;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_指令撤销数量#=@指令撤销数量#; */
    set v_tmp_comm_cancel_qty=v_comm_cancel_qty;

    /* set @临时_初始化日期#=@初始化日期#; */
    set v_tmp_init_date=v_init_date;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.28.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* if (@指令结束日期# <> 0 and @指令结束日期# >= @临时_初始化日期#) or (@指令结束日期# = 0 and @指令日期# >= @临时_初始化日期#) then */
    if (v_comm_end_date <> 0 and v_comm_end_date >= v_tmp_init_date) or (v_comm_end_date = 0 and v_comm_date >= v_tmp_init_date) then
        #为便于下述判断，指令撤销数量加总为合计指令撤销数量，更新前重置回来

        /* set @指令撤销数量#=@指令撤销数量# + @临时_指令撤销数量#; */
        set v_comm_cancel_qty=v_comm_cancel_qty + v_tmp_comm_cancel_qty;

        /* if @指令状态# = 《指令状态-待撤销》 or @指令状态# = 《指令状态-部分撤销》 or @指令状态# = 《指令状态-全部撤销》 then */
        if v_comm_status = "4" or v_comm_status = "5" or v_comm_status = "6" then

            /* set @指令撤销数量# = @指令撤销数量# + @临时_指令撤销数量# + @撤单数量#; */
            set v_comm_cancel_qty = v_comm_cancel_qty + v_tmp_comm_cancel_qty + v_wtdraw_qty;
        end if;

        /* set @订单数量#=@订单数量#-@撤单数量#; */
        set v_order_qty=v_order_qty-v_wtdraw_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.28.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

        /* set @变动数量# = -1 * @撤单数量#; */
        set v_occur_qty = -1 * v_wtdraw_qty;

        /* set @指令冻结数量# = 0; */
        set v_comm_frozen_qty = 0;

        /* set @指令冻结金额# = 0; */
        set v_comm_frozen_amt = 0;

        /* set @指令数量# = @撤单数量#; */
        set v_comm_qty = v_wtdraw_qty;

        /* set @计算方向# = 《计算方向-加上》; */
        set v_calc_dir = 1;

        /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_comm_dir,
            v_limit_actual_price,
            v_comm_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_calc_dir,
            v_error_code,
            v_error_info,
            v_comm_frozen_amt,
            v_comm_frozen_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.28.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* [更新表记录][交易证券_指令_指令表][{订单数量}={订单数量} + @变动数量#, {指令冻结金额}={指令冻结金额} + @指令冻结金额# , {指令冻结数量} = {指令冻结数量} + @指令冻结数量#,{指令撤销数量}=@指令撤销数量#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间# ][{记录序号}=@指令序号#][2][@指令序号#] */
        set v_update_date = date_format(curdate(),'%Y%m%d');
        set v_update_time = date_format(curtime(),'%H%i%s');
        update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=order_qty + v_occur_qty, comm_frozen_amt=comm_frozen_amt + v_comm_frozen_amt , comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty,comm_cancel_qty=v_comm_cancel_qty,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time  where row_id=v_comm_id;
        if v_error_code = "1" then
                    
            SET v_error_code = "tdsecuA.3.28.2";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令序号=",v_comm_id);
            end if;
            leave label_pro;
        end if;

    end if;

    /* set @指令撤销数量# = @临时_指令撤销数量#; */
    set v_comm_cancel_qty = v_tmp_comm_cancel_qty;

    /* 调用【原子_交易证券_指令_初始化更新汇总指令】*/
    call db_tdsecu.pra_tdseap_InitUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_cancel_qty,
        v_wtdraw_qty,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.28.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_初始化更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_status = v_comm_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_初始化更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_InitUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_InitUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_cancel_qty decimal(18,2),
    IN p_wtdraw_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_init_date int;
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_init_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_cancel_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0 ] */
    if v_comm_batch_no = 0  then
        leave label_pro;
    end if;


    /* set @临时_初始化日期#=@初始化日期#; */
    set v_tmp_init_date=v_init_date;

    /* set @临时_指令撤销数量#=@指令撤销数量#; */
    set v_tmp_comm_cancel_qty=v_comm_cancel_qty;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号#][1][@指令日期#, @机构编号#, @指令批号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.29.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no);
        end if;
        leave label_pro;
    end if;


    /* [检查正常返回][(@指令结束日期# <> 0 and @指令结束日期# < @临时_初始化日期#) or (@指令结束日期# = 0 and @指令日期# < @临时_初始化日期#)] */
    if (v_comm_end_date <> 0 and v_comm_end_date < v_tmp_init_date) or (v_comm_end_date = 0 and v_comm_date < v_tmp_init_date) then
        leave label_pro;
    end if;


    /* set @指令撤销数量# = @指令撤销数量# + @临时_指令撤销数量#; */
    set v_comm_cancel_qty = v_comm_cancel_qty + v_tmp_comm_cancel_qty;

    /* set @订单数量# = @订单数量# - @撤单数量#; */
    set v_order_qty = v_order_qty - v_wtdraw_qty;
    #获取指令状态

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.29.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令汇总表][{订单数量}=@订单数量#,{指令撤销数量}=@指令撤销数量#,{指令汇总状态}=@指令汇总状态#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号#][2][@指令日期#, @机构编号#, @指令批号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=v_order_qty,comm_cancel_qty=v_comm_cancel_qty,comm_sum_status=v_comm_sum_status where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.29.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_循环锁定获取指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_LoopLockGetComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_LoopLockGetComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_pass_no int,
    OUT p_out_acco varchar(32),
    OUT p_comm_id bigint,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_comm_date int,
    OUT p_comm_time int,
    OUT p_comm_batch_no int,
    OUT p_comm_status varchar(2),
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_strike_qty decimal(18,2),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_impawn_ratio decimal(18,12),
    OUT p_intrst_days int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_begin_date int,
    OUT p_comm_end_date int,
    OUT p_comm_begin_time int,
    OUT p_comm_end_time int,
    OUT p_comm_comple_flag int,
    OUT p_basket_id bigint,
    OUT p_comm_amt decimal(18,4),
    OUT p_strike_amt decimal(18,4),
    OUT p_comm_oper_way varchar(2),
    OUT p_strike_status varchar(2),
    OUT p_comm_appr_status varchar(2),
    OUT p_exter_comm_flag int,
    OUT p_oper_func_code varchar(16),
    OUT p_combo_code varchar(32),
    OUT p_comm_remark_info varchar(1024)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_comm_id bigint;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_status varchar(2);
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_flag int;
    declare v_basket_id bigint;
    declare v_comm_amt decimal(18,4);
    declare v_strike_amt decimal(18,4);
    declare v_comm_oper_way varchar(2);
    declare v_strike_status varchar(2);
    declare v_comm_appr_status varchar(2);
    declare v_exter_comm_flag int;
    declare v_oper_func_code varchar(16);
    declare v_combo_code varchar(32);
    declare v_comm_remark_info varchar(1024);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_init_date int;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_comm_id = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_status = "0";
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_flag = 0;
    SET v_basket_id = 0;
    SET v_comm_amt = 0;
    SET v_strike_amt = 0;
    SET v_comm_oper_way = " ";
    SET v_strike_status = "0";
    SET v_comm_appr_status = " ";
    SET v_exter_comm_flag = 0;
    SET v_oper_func_code = " ";
    SET v_combo_code = " ";
    SET v_comm_remark_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号} > @记录序号# order by {记录序号} asc][4][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id > v_row_id order by row_id asc limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.30.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令序号# = @记录序号#; */
    set v_comm_id = v_row_id;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_pass_no = v_pass_no;
    SET p_out_acco = v_out_acco;
    SET p_comm_id = v_comm_id;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_comm_date = v_comm_date;
    SET p_comm_time = v_comm_time;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_status = v_comm_status;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_qty = v_comm_qty;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_strike_qty = v_strike_qty;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_impawn_ratio = v_impawn_ratio;
    SET p_intrst_days = v_intrst_days;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_begin_date = v_comm_begin_date;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_begin_time = v_comm_begin_time;
    SET p_comm_end_time = v_comm_end_time;
    SET p_comm_comple_flag = v_comm_comple_flag;
    SET p_basket_id = v_basket_id;
    SET p_comm_amt = v_comm_amt;
    SET p_strike_amt = v_strike_amt;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_strike_status = v_strike_status;
    SET p_comm_appr_status = v_comm_appr_status;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_oper_func_code = v_oper_func_code;
    SET p_combo_code = v_combo_code;
    SET p_comm_remark_info = v_comm_remark_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_循环获取指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_LoopGetComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_LoopGetComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_pass_no int,
    OUT p_out_acco varchar(32),
    OUT p_comm_id bigint,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_comm_date int,
    OUT p_comm_time int,
    OUT p_comm_batch_no int,
    OUT p_comm_status varchar(2),
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_impawn_ratio decimal(18,12),
    OUT p_intrst_days int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_end_date int,
    OUT p_comm_comple_flag int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_comm_id bigint;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_status varchar(2);
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_end_date int;
    declare v_comm_comple_flag int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_amt decimal(18,4);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_comm_id = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_status = "0";
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_flag = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_amt = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号} > @记录序号# order by {记录序号} asc][4][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id > v_row_id order by row_id asc limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.31.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令序号# = @记录序号#; */
    set v_comm_id = v_row_id;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_pass_no = v_pass_no;
    SET p_out_acco = v_out_acco;
    SET p_comm_id = v_comm_id;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_comm_date = v_comm_date;
    SET p_comm_time = v_comm_time;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_status = v_comm_status;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_qty = v_comm_qty;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_impawn_ratio = v_impawn_ratio;
    SET p_intrst_days = v_intrst_days;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_comple_flag = v_comm_comple_flag;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_指令分发循环锁定获取指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_DispLoopLockGetComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_DispLoopLockGetComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_row_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_pass_no int,
    OUT p_out_acco varchar(32),
    OUT p_comm_id bigint,
    OUT p_exch_crncy_type varchar(3),
    OUT p_exch_no int,
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_stock_code varchar(6),
    OUT p_target_code_no int,
    OUT p_trade_code_no int,
    OUT p_stock_type int,
    OUT p_asset_type int,
    OUT p_comm_time int,
    OUT p_comm_status varchar(2),
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_net_price_flag int,
    OUT p_par_value decimal(16,9),
    OUT p_impawn_ratio decimal(18,12),
    OUT p_intrst_days int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_end_date int,
    OUT p_comm_comple_flag int,
    OUT p_exter_comm_flag int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_row_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_comm_id bigint;
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_status varchar(2);
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_end_date int;
    declare v_comm_comple_flag int;
    declare v_exter_comm_flag int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_amt decimal(18,4);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_row_id = p_row_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_comm_id = 0;
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_status = "0";
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_flag = 0;
    SET v_exter_comm_flag = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_amt = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{机构编号}=@机构编号# and {指令日期}=@指令日期# and {指令批号}=@指令批号# and  {记录序号} > @记录序号# order by {记录序号} asc][4][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where co_no=v_co_no and comm_date=v_comm_date and comm_batch_no=v_comm_batch_no and  row_id > v_row_id order by row_id asc limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.32.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* set @指令序号# = @记录序号#; */
    set v_comm_id = v_row_id;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_pass_no = v_pass_no;
    SET p_out_acco = v_out_acco;
    SET p_comm_id = v_comm_id;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_exch_no = v_exch_no;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_stock_code = v_stock_code;
    SET p_target_code_no = v_target_code_no;
    SET p_trade_code_no = v_trade_code_no;
    SET p_stock_type = v_stock_type;
    SET p_asset_type = v_asset_type;
    SET p_comm_time = v_comm_time;
    SET p_comm_status = v_comm_status;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_qty = v_comm_qty;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_net_price_flag = v_net_price_flag;
    SET p_par_value = v_par_value;
    SET p_impawn_ratio = v_impawn_ratio;
    SET p_intrst_days = v_intrst_days;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_comple_flag = v_comm_comple_flag;
    SET p_exter_comm_flag = v_exter_comm_flag;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_多日指令重算
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ReCalcuMultiComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ReCalcuMultiComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_comm_date int,
    IN p_comm_id bigint,
    IN p_bond_accr_intrst decimal(18,12),
    IN p_par_value decimal(16,9),
    IN p_is_record_jour int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_comm_date int;
    declare v_comm_id bigint;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_par_value decimal(16,9);
    declare v_is_record_jour int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_bond_accr_intrst decimal(18,12);
    declare v_tmp_par_value decimal(16,9);
    declare v_tmp_init_date int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_order_dir int;
    declare v_comm_occur_qty decimal(18,2);
    declare v_comm_occur_amt decimal(18,4);
    declare v_frozen_amt decimal(18,4);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_comm_date = p_comm_date;
    SET v_comm_id = p_comm_id;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_par_value = p_par_value;
    SET v_is_record_jour = p_is_record_jour;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_bond_accr_intrst = 0;
    SET v_tmp_par_value = 0;
    SET v_tmp_init_date = date_format(curdate(),'%Y%m%d');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_order_dir = 0;
    SET v_comm_occur_qty = 0;
    SET v_comm_occur_amt = 0;
    SET v_frozen_amt = 0;
    SET v_trade_occur_amt = 0;
    SET v_trade_occur_qty = 0;

    
    label_pro:BEGIN
    

    /* set @临时_债券计提利息# = @债券计提利息#; */
    set v_tmp_bond_accr_intrst = v_bond_accr_intrst;

    /* set @临时_票面面值# = @票面面值#; */
    set v_tmp_par_value = v_par_value;

    /* set @临时_初始化日期# = @初始化日期#; */
    set v_tmp_init_date = v_init_date;

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号} = @指令序号#][4][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id = v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.33.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @订单方向# = @指令方向#; */
    set v_order_dir = v_comm_dir;

    /* set @指令变动数量# = @指令数量# - @订单数量# - @指令撤销数量#; */
    set v_comm_occur_qty = v_comm_qty - v_order_qty - v_comm_cancel_qty;

    /* set @指令变动金额# = 0; */
    set v_comm_occur_amt = 0;

    /* if @指令方向# = 《指令方向-买入》  then */
    if v_comm_dir = 1  then

      /* set @指令变动金额# = @指令变动数量# * (@临时_债券计提利息# - @债券计提利息#); */
      set v_comm_occur_amt = v_comm_occur_qty * (v_tmp_bond_accr_intrst - v_bond_accr_intrst);

      /* set @冻结金额# = @指令变动数量# * (@指令实际限价# + @临时_债券计提利息#); */
      set v_frozen_amt = v_comm_occur_qty * (v_limit_actual_price + v_tmp_bond_accr_intrst);
    end if;

    /* if @指令方向# = 《指令方向-卖出》   then */
    if v_comm_dir = 2   then

      /* set @指令变动金额# = @指令变动数量# * (@临时_债券计提利息# - @债券计提利息#); */
      set v_comm_occur_amt = v_comm_occur_qty * (v_tmp_bond_accr_intrst - v_bond_accr_intrst);
    end if;

    /* set @交易变动金额# = 0; */
    set v_trade_occur_amt = 0;

    /* set @交易变动数量# = 0; */
    set v_trade_occur_qty = 0;

    /* set @指令变动数量# = 0; */
    set v_comm_occur_qty = 0;
    #处理订单资金持仓数据，保护指令变动和交易的变动

    /* 调用【原子_交易证券_账户_更新指令资金持仓】*/
    call db_tdsecu.pra_tdseac_UpdateApprCashPosi(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_init_date,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_comm_id,
        v_comm_dir,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_code,
        v_asset_type,
        v_stock_type,
        v_impawn_ratio,
        v_stock_acco_no,
        v_stock_code_no,
        v_trade_code_no,
        v_target_code_no,
        v_comm_occur_amt,
        v_comm_occur_qty,
        v_is_record_jour,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.33.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新指令资金持仓出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验调仓指令金额
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckTransferCommAmt;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckTransferCommAmt(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_exgp_avail_amt decimal(18,4),
    IN p_asac_avail_amt decimal(18,4),
    IN p_exgp_busi_config_str varchar(64),
    IN p_asac_busi_config_str varchar(64),
    IN p_capit_reback_days int,
    IN p_comm_frozen_amt decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_exgp_avail_amt decimal(18,4);
    declare v_asac_avail_amt decimal(18,4);
    declare v_exgp_busi_config_str varchar(64);
    declare v_asac_busi_config_str varchar(64);
    declare v_capit_reback_days int;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_avail_amt decimal(18,4);
    declare v_all_fee decimal(18,4);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_exgp_avail_amt = p_exgp_avail_amt;
    SET v_asac_avail_amt = p_asac_avail_amt;
    SET v_exgp_busi_config_str = p_exgp_busi_config_str;
    SET v_asac_busi_config_str = p_asac_busi_config_str;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_avail_amt = 0;
    SET v_all_fee = 0;

    
    label_pro:BEGIN
    

    /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
    if substring(v_exgp_busi_config_str,1,1) <> 2 then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.34.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
        set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;

        /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
        if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
            
            SET v_error_code = "tdsecuA.3.34.603";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
            else
                SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
            end if;
            leave label_pro;
        end if;

        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* set @可用金额#=@交易组可用金额# + @交易端可用金额#; */
            set v_avail_amt=v_exgp_avail_amt + v_trade_avail_amt;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#)  * @卖出参考汇率#,2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee)  * v_sell_ref_rate,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.34.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;
    end if;

    /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
    if substring(v_asac_busi_config_str,1,1) <> 2 then

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.34.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
        set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;

        /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][604][@可用金额#,@指令冻结金额#] */
        if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
            
            SET v_error_code = "tdsecuA.3.34.604";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt),"#",v_mysql_message);
            else
                SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt);
            end if;
            leave label_pro;
        end if;

        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,1,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,1,1) <> 2 then

            /* set @可用金额#=@资产账户可用金额# + @交易端可用金额#; */
            set v_avail_amt=v_asac_avail_amt + v_trade_avail_amt;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#) * @卖出参考汇率#,2) >@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee) * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.34.610";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_成交回溯更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_BackStrikeUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_BackStrikeUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_status varchar(2),
    IN p_comm_dir int,
    IN p_order_qty decimal(18,2),
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_status varchar(2);
    declare v_comm_dir int;
    declare v_order_qty decimal(18,2);
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_order_qty decimal(18,2);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_tmp_buy_order_qty decimal(18,2);
    declare v_tmp_sell_order_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_status = p_comm_status;
    SET v_comm_dir = p_comm_dir;
    SET v_order_qty = p_order_qty;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_order_qty = 0;
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_tmp_comm_status = "0";
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_tmp_buy_order_qty = 0;
    SET v_tmp_sell_order_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;

    #保存输入参数

    /* set @临时_订单数量#=@订单数量#; */
    set v_tmp_order_qty=v_order_qty;

    /* set @临时_成交数量#=@成交数量#; */
    set v_tmp_strike_qty=v_strike_qty;

    /* set @临时_成交金额#=@成交金额#; */
    set v_tmp_strike_amt=v_strike_amt;

    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* set @临时_买入订单数量# = 0; */
    set v_tmp_buy_order_qty = 0;

    /* set @临时_卖出订单数量# = 0; */
    set v_tmp_sell_order_qty = 0;

    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 then

        /* set @临时_买入订单数量# = @订单数量#; */
        set v_tmp_buy_order_qty = v_order_qty;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 then

        /* set @临时_卖出订单数量# = @订单数量#; */
        set v_tmp_sell_order_qty = v_order_qty;
    end if;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.35.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量# = @订单数量# - @临时_订单数量#; */
    set v_order_qty = v_order_qty - v_tmp_order_qty;

    /* set @买入订单数量# = @买入订单数量# - @临时_买入订单数量#; */
    set v_buy_order_qty = v_buy_order_qty - v_tmp_buy_order_qty;

    /* set @卖出订单数量# = @卖出订单数量# - @临时_卖出订单数量#; */
    set v_sell_order_qty = v_sell_order_qty - v_tmp_sell_order_qty;

    /* set @成交数量# = @成交数量# - @临时_成交数量#; */
    set v_strike_qty = v_strike_qty - v_tmp_strike_qty;

    /* set @成交金额# = @成交金额# - @临时_成交金额#; */
    set v_strike_amt = v_strike_amt - v_tmp_strike_amt;

    /* if @临时_指令状态# = 《指令状态-待撤销》 or @临时_指令状态# = 《指令状态-部分撤销》 then */
    if v_tmp_comm_status = "4" or v_tmp_comm_status = "5" then

        /* set @指令待撤销数量# = @指令待撤销数量# + @临时_成交数量#; */
        set v_comm_await_cancel_qty = v_comm_await_cancel_qty + v_tmp_strike_qty;
    end if;
    #获取指令成交状态

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.35.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.35.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 then

        /* set @买入成交数量# = @买入成交数量# - @临时_成交数量#; */
        set v_buy_strike_qty = v_buy_strike_qty - v_tmp_strike_qty;

        /* set @买入成交金额# = @买入成交金额# - @临时_成交金额#; */
        set v_buy_strike_amt = v_buy_strike_amt - v_tmp_strike_amt;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 then

        /* set @卖出成交数量# = @卖出成交数量# - @临时_成交数量#; */
        set v_sell_strike_qty = v_sell_strike_qty - v_tmp_strike_qty;

        /* set @卖出成交金额# = @卖出成交金额# - @临时_成交金额#; */
        set v_sell_strike_amt = v_sell_strike_amt - v_tmp_strike_amt;
    end if;

    /* [获取表记录变量][交易证券_指令_指令表][ifnull(min({指令完成日期}),0),ifnull(min({指令完成时间}),0),ifnull(max({指令完成日期}),0),ifnull(max({指令完成时间}),0)][@指令完成日期#,@指令完成时间#,@指令最大完成日期#,@指令最大完成时间#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select ifnull(min(comm_comple_date),0),ifnull(min(comm_comple_time),0),ifnull(max(comm_comple_date),0),ifnull(max(comm_comple_time),0) into v_comm_comple_date,v_comm_comple_time,v_max_comm_comple_date,v_max_comm_comple_time from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.35.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令汇总表][{订单数量}=@订单数量#,{买入订单数量}=@买入订单数量#,{卖出订单数量}=@卖出订单数量#,{成交数量}=@成交数量#, {成交金额}=@成交金额#,{买入成交数量}=@买入成交数量#, {买入成交金额}=@买入成交金额#,{卖出成交数量}=@卖出成交数量#, {卖出成交金额}=@卖出成交金额#,{指令汇总状态}=@指令汇总状态#,{成交状态}=@成交状态#,{指令待撤销数量}=@指令待撤销数量#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=v_order_qty,buy_order_qty=v_buy_order_qty,sell_order_qty=v_sell_order_qty,strike_qty=v_strike_qty, strike_amt=v_strike_amt,buy_strike_qty=v_buy_strike_qty, buy_strike_amt=v_buy_strike_amt,sell_strike_qty=v_sell_strike_qty, sell_strike_amt=v_sell_strike_amt,comm_sum_status=v_comm_sum_status,strike_status=v_strike_status,comm_await_cancel_qty=v_comm_await_cancel_qty,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.35.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_appr_oper int,
    IN p_comm_appr_status_str varchar(2048),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_asset_type_str varchar(2048),
    IN p_comm_dir_str varchar(2048),
    IN p_comm_status_str varchar(64),
    IN p_strike_status_str varchar(64),
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_comm_comple_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_status_str varchar(2048);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_asset_type_str varchar(2048);
    declare v_comm_dir_str varchar(2048);
    declare v_comm_status_str varchar(64);
    declare v_strike_status_str varchar(64);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_appr_oper = p_comm_appr_oper;
    SET v_comm_appr_status_str = p_comm_appr_status_str;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_asset_type_str = p_asset_type_str;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_status_str = p_comm_status_str;
    SET v_strike_status_str = p_strike_status_str;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_comm_comple_flag = p_comm_comple_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_指令_指令表][{操作员机构编号},{操作员编号},{操作MAC},{操作IP},{操作信息},{操作方式},{操作功能},{记录序号},{初始化日期},{机构编号},{产品编号},{交易组编号},{资产账户编号},{市场编号},{证券代码编号},{资产类型},{证券类型},{指令下达人},{指令执行人},{记录序号} as {指令序号},{指令日期},{指令时间},{指令批号},{指令方向},{指令限价},{指令实际限价},{指令数量},{指令金额},{订单数量},{指令撤销数量},{成交金额},{成交数量},{指令冻结金额},{指令冻结数量},{净价标志},{票面面值},{债券计提利息},{成交状态},{指令状态},{指令开始日期},{指令结束日期},{指令开始时间},{指令结束时间},{指令完成日期},{指令完成时间},{指令审批日期},{指令审批时间},{指令审批状态},{指令审批操作员序号},{指令审批操作员},{指令审批说明},{篮子序号},{指令操作方式},{体外指令标志},{指令完成标志},{交易币种},{策略占用数量},{策略订单数量},{组合代码},{合同编号},{更新次数},{指令备注信息},{分发操作员},{分发状态},{已读标记}][(@指令序号#=0 or {记录序号}=@指令序号#) and (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@指令完成标志# = 0 or {指令完成标志}=@指令完成标志#) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令审批状态串#=" " or instr(@指令审批状态串#, concat(";",{指令审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令状态串#=" " or instr(@指令状态串#, concat(";",{指令状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,exch_crncy_type,strategy_capt_qty,strategy_order_qty,combo_code,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu.tb_tdseap_command where (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id;
        else
            select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,exch_crncy_type,strategy_capt_qty,strategy_order_qty,combo_code,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu.tb_tdseap_command where (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_指令_指令表][{操作员机构编号},{操作员编号},{操作MAC},{操作IP},{操作信息},{操作方式},{操作功能},{记录序号},{初始化日期},{机构编号},{产品编号},{交易组编号},{资产账户编号},{市场编号},{证券代码编号},{资产类型},{证券类型},{指令下达人},{指令执行人},{记录序号} as {指令序号},{指令日期},{指令时间},{指令批号},{指令方向},{指令限价},{指令实际限价},{指令数量},{指令金额},{订单数量},{指令撤销数量},{成交金额},{成交数量},{指令冻结金额},{指令冻结数量},{净价标志},{票面面值},{债券计提利息},{成交状态},{指令状态},{指令开始日期},{指令结束日期},{指令开始时间},{指令结束时间},{指令完成日期},{指令完成时间},{指令审批日期},{指令审批时间},{指令审批状态},{指令审批操作员序号},{指令审批操作员},{指令审批说明},{篮子序号},{指令操作方式},{体外指令标志},{指令完成标志},{交易币种},{策略占用数量},{策略订单数量},{组合代码},{合同编号},{更新次数},{指令备注信息},{分发操作员},{分发状态},{已读标记}][(@指令序号#=0 or {记录序号}=@指令序号#) and (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@指令完成标志# = 0 or {指令完成标志}=@指令完成标志#) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令审批状态串#=" " or instr(@指令审批状态串#, concat(";",{指令审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令状态串#=" " or instr(@指令状态串#, concat(";",{指令状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}<@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,exch_crncy_type,strategy_capt_qty,strategy_order_qty,combo_code,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu.tb_tdseap_command where (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id<v_row_id order by row_id desc;
        else
            select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,exch_crncy_type,strategy_capt_qty,strategy_order_qty,combo_code,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu.tb_tdseap_command where (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id<v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令历史
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryComm_His;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryComm_His(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_begin_date int,
    IN p_end_date int,
    IN p_comm_id bigint,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_appr_oper int,
    IN p_comm_appr_status_str varchar(2048),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_asset_type_str varchar(2048),
    IN p_comm_dir_str varchar(2048),
    IN p_comm_status_str varchar(64),
    IN p_strike_status_str varchar(64),
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_comm_comple_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_comm_id bigint;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_status_str varchar(2048);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_asset_type_str varchar(2048);
    declare v_comm_dir_str varchar(2048);
    declare v_comm_status_str varchar(64);
    declare v_strike_status_str varchar(64);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_comm_id = p_comm_id;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_appr_oper = p_comm_appr_oper;
    SET v_comm_appr_status_str = p_comm_appr_status_str;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_asset_type_str = p_asset_type_str;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_status_str = p_comm_status_str;
    SET v_strike_status_str = p_strike_status_str;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_comm_comple_flag = p_comm_comple_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][历史_交易证券_指令_指令表][{操作员机构编号},{操作员编号},{操作MAC},{操作IP},{操作信息},{操作方式},{操作功能},{记录序号},{初始化日期},{机构编号},{产品编号},{交易组编号},{资产账户编号},{市场编号},{证券代码编号},{资产类型},{证券类型},{指令下达人},{指令执行人},{记录序号} as {指令序号},{指令日期},{指令时间},{指令批号},{指令方向},{指令限价},{指令实际限价},{指令数量},{指令金额},{订单数量},{指令撤销数量},{成交金额},{成交数量},{指令冻结金额},{指令冻结数量},{净价标志},{票面面值},{债券计提利息},{成交状态},{指令状态},{指令开始日期},{指令结束日期},{指令开始时间},{指令结束时间},{指令完成日期},{指令完成时间},{指令审批日期},{指令审批时间},{指令审批状态},{指令审批操作员序号},{指令审批操作员},{指令审批说明},{篮子序号},{指令操作方式},{体外指令标志},{指令完成标志},{策略占用数量},{策略订单数量},{合同编号},{更新次数},{指令备注信息},{分发操作员},{分发状态},{已读标记}][({初始化日期} between @开始日期# and @结束日期#) and (@指令序号#=0 or {记录序号}=@指令序号#) and (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@资产账户编号#=0 or {资产账户编号}=@资产账户编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@指令完成标志# = 0 or {指令完成标志}=@指令完成标志#) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令审批状态串#=" " or instr(@指令审批状态串#, concat(";",{指令审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令状态串#=" " or instr(@指令状态串#, concat(";",{指令状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,strategy_capt_qty,strategy_order_qty,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu_his.tb_tdseap_command_his where (init_date between v_begin_date and v_end_date) and (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id;
    else
        select opor_co_no,opor_no,oper_mac,oper_ip_addr,oper_info,oper_way,oper_func_code,row_id,init_date,co_no,pd_no,exch_group_no,asset_acco_no,exch_no,stock_code_no,asset_type,stock_type,comm_opor,comm_executor,row_id as comm_id,comm_date,comm_time,comm_batch_no,comm_dir,comm_limit_price,limit_actual_price,comm_qty,comm_amt,order_qty,comm_cancel_qty,strike_amt,strike_qty,comm_frozen_amt,comm_frozen_qty,net_price_flag,par_value,bond_accr_intrst,strike_status,comm_status,comm_begin_date,comm_end_date,comm_begin_time,comm_end_time,comm_comple_date,comm_comple_time,comm_appr_date,comm_appr_time,comm_appr_status,comm_appr_oper_no,comm_appr_oper,comm_appr_remark,basket_id,comm_oper_way,exter_comm_flag,comm_comple_flag,strategy_capt_qty,strategy_order_qty,contra_no,update_times,comm_remark_info,disp_opor,disp_status,read_flag from db_tdsecu_his.tb_tdseap_command_his where (init_date between v_begin_date and v_end_date) and (v_comm_id=0 or row_id=v_comm_id) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or comm_comple_flag=v_comm_comple_flag) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_appr_status_str=" " or instr(v_comm_appr_status_str, concat(";",comm_appr_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令分发
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryCommDispJour;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryCommDispJour(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_disp_opor int,
    IN p_before_comm_executor int,
    IN p_comm_executor int,
    IN p_comm_id bigint,
    IN p_comm_dir_str varchar(2048),
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_disp_opor int;
    declare v_before_comm_executor int;
    declare v_comm_executor int;
    declare v_comm_id bigint;
    declare v_comm_dir_str varchar(2048);
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_disp_opor = p_disp_opor;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_id = p_comm_id;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_指令_指令分发表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@分发操作员#=0 or {操作员编号}=@分发操作员#) and (@前指令执行人#=0 or {前指令执行人}=@前指令执行人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_batch_no, comm_dir, 
            comm_status, comm_opor, disp_date, disp_time, 
            before_comm_executor, comm_executor, is_withdraw, disp_flag, 
            disp_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_dispense where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_batch_no, comm_dir, 
            comm_status, comm_opor, disp_date, disp_time, 
            before_comm_executor, comm_executor, is_withdraw, disp_flag, 
            disp_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_dispense where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_指令_指令分发表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@分发操作员#=0 or {操作员编号}=@分发操作员#) and (@前指令执行人#=0 or {前指令执行人}=@前指令执行人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}<@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_batch_no, comm_dir, 
            comm_status, comm_opor, disp_date, disp_time, 
            before_comm_executor, comm_executor, is_withdraw, disp_flag, 
            disp_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_dispense where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id<v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_batch_no, comm_dir, 
            comm_status, comm_opor, disp_date, disp_time, 
            before_comm_executor, comm_executor, is_withdraw, disp_flag, 
            disp_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_dispense where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id<v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令分发历史
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryCommDispJour_His;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryCommDispJour_His(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_begin_date int,
    IN p_end_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_disp_opor int,
    IN p_before_comm_executor int,
    IN p_comm_executor int,
    IN p_comm_id bigint,
    IN p_comm_dir_str varchar(2048),
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_disp_opor int;
    declare v_before_comm_executor int;
    declare v_comm_executor int;
    declare v_comm_id bigint;
    declare v_comm_dir_str varchar(2048);
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_disp_opor = p_disp_opor;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_id = p_comm_id;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][历史_交易证券_指令_指令分发表][字段][({初始化日期} between @开始日期# and @结束日期#) and (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@分发操作员#=0 or {操作员编号}=@分发操作员#) and (@前指令执行人#=0 or {前指令执行人}=@前指令执行人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        comm_date, comm_id, comm_batch_no, comm_dir, 
        comm_status, comm_opor, disp_date, disp_time, 
        before_comm_executor, comm_executor, is_withdraw, disp_flag, 
        disp_remark, exter_comm_flag from db_tdsecu_his.tb_tdseap_command_dispense_his where (init_date between v_begin_date and v_end_date) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        comm_date, comm_id, comm_batch_no, comm_dir, 
        comm_status, comm_opor, disp_date, disp_time, 
        before_comm_executor, comm_executor, is_withdraw, disp_flag, 
        disp_remark, exter_comm_flag from db_tdsecu_his.tb_tdseap_command_dispense_his where (init_date between v_begin_date and v_end_date) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_disp_opor=0 or opor_no=v_disp_opor) and (v_before_comm_executor=0 or before_comm_executor=v_before_comm_executor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令审批
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryCommApprJour;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryCommApprJour(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_comm_id bigint,
    IN p_comm_opor int,
    IN p_comm_dir_str varchar(2048),
    IN p_comm_appr_oper int,
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_comm_id bigint;
    declare v_comm_opor int;
    declare v_comm_dir_str varchar(2048);
    declare v_comm_appr_oper int;
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_comm_id = p_comm_id;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_appr_oper = p_comm_appr_oper;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_指令_指令审批表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, comm_appr_date, 
            comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_opor, comm_dir, 
            comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
            comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
            comm_appr_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_approve where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, comm_appr_date, 
            comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_opor, comm_dir, 
            comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
            comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
            comm_appr_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_approve where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_指令_指令审批表][字段][(@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}<@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, comm_appr_date, 
            comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_opor, comm_dir, 
            comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
            comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
            comm_appr_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_approve where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id<v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, comm_appr_date, 
            comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
            pd_no, exch_group_no, asset_acco_no, exch_no, 
            stock_acco_no, stock_code_no, stock_type, asset_type, 
            comm_date, comm_id, comm_opor, comm_dir, 
            comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
            comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
            comm_appr_remark, exter_comm_flag from db_tdsecu.tb_tdseap_command_approve where (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id<v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询指令审批历史
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryCommApprJour_His;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryCommApprJour_His(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_begin_date int,
    IN p_end_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_comm_id bigint,
    IN p_comm_opor int,
    IN p_comm_dir_str varchar(2048),
    IN p_comm_appr_oper int,
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_comm_id bigint;
    declare v_comm_opor int;
    declare v_comm_dir_str varchar(2048);
    declare v_comm_appr_oper int;
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_comm_id = p_comm_id;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_appr_oper = p_comm_appr_oper;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][历史_交易证券_指令_指令审批表][字段][({初始化日期} between @开始日期# and @结束日期#) and (@机构编号#=0 or {机构编号}=@机构编号#) and (@产品编号#=0 or {产品编号}=@产品编号#) and (@交易组编号#=0 or {交易组编号}=@交易组编号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@指令序号#=0 or {指令序号}=@指令序号#) and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令审批操作员#=0 or {指令审批操作员}=@指令审批操作员#) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",{交易组编号},";"))>0) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, comm_appr_date, 
        comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        comm_date, comm_id, comm_opor, comm_dir, 
        comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
        comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
        comm_appr_remark, exter_comm_flag from db_tdsecu_his.tb_tdseap_command_approve_his where (init_date between v_begin_date and v_end_date) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, comm_appr_date, 
        comm_appr_time, comm_appr_oper_no, comm_appr_oper, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        comm_date, comm_id, comm_opor, comm_dir, 
        comm_qty, comm_limit_price, limit_actual_price, comm_begin_date, 
        comm_end_date, comm_begin_time, comm_end_time, comm_appr_status, 
        comm_appr_remark, exter_comm_flag from db_tdsecu_his.tb_tdseap_command_approve_his where (init_date between v_begin_date and v_end_date) and (v_co_no=0 or co_no=v_co_no) and (v_pd_no=0 or pd_no=v_pd_no) and (v_exch_group_no=0 or exch_group_no=v_exch_group_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_comm_id=0 or comm_id=v_comm_id) and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_appr_oper=0 or comm_appr_oper=v_comm_appr_oper) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",exch_group_no,";"))>0) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QuerySumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QuerySumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_sum_appr_status_str varchar(64),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_asset_type_str varchar(2048),
    IN p_comm_dir_str varchar(2048),
    IN p_comm_sum_status_str varchar(64),
    IN p_strike_status_str varchar(64),
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_sort_type int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_sum_appr_status_str varchar(64);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_asset_type_str varchar(2048);
    declare v_comm_dir_str varchar(2048);
    declare v_comm_sum_status_str varchar(64);
    declare v_strike_status_str varchar(64);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_sort_type int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_sum_appr_status_str = p_comm_sum_appr_status_str;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_asset_type_str = p_asset_type_str;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_sum_status_str = p_comm_sum_status_str;
    SET v_strike_status_str = p_strike_status_str;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_sort_type = p_sort_type;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* if @排序方式#=1 then */
    if v_sort_type=1 then

        /* [获取表记录][交易证券_指令_指令汇总表][字段][(@指令日期#=0 or {指令日期}=@指令日期#) and (@指令批号#=0 or {指令批号}=@指令批号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and {机构编号}=@操作员机构编号#  and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#)  and {指令数量} > 0 and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令汇总审批状态串#=" " or instr(@指令汇总审批状态串#, concat(";",{指令汇总审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令汇总状态串#=" " or instr(@指令汇总状态串#, concat(";",{指令汇总状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_code_no, 
            stock_code, target_code_no, trade_code_no, stock_type, 
            asset_type, comm_date, comm_time, comm_batch_no, 
            comm_opor, comm_executor, comm_dir, comm_limit_price, 
            limit_actual_price, comm_qty, comm_amt, order_qty, 
            comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
            net_price_flag, par_value, impawn_ratio, intrst_days, 
            bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
            comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
            basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
            sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
            sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
            exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor)  and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_code_no, 
            stock_code, target_code_no, trade_code_no, stock_type, 
            asset_type, comm_date, comm_time, comm_batch_no, 
            comm_opor, comm_executor, comm_dir, comm_limit_price, 
            limit_actual_price, comm_qty, comm_amt, order_qty, 
            comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
            net_price_flag, par_value, impawn_ratio, intrst_days, 
            bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
            comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
            basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
            sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
            sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
            exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor)  and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id limit v_row_count;
        end if;

    else

        /* [获取表记录][交易证券_指令_指令汇总表][字段][(@指令日期#=0 or {指令日期}=@指令日期#) and (@指令批号#=0 or {指令批号}=@指令批号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and  {机构编号}=@操作员机构编号#  and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#) and {指令数量} > 0 and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令汇总审批状态串#=" " or instr(@指令汇总审批状态串#, concat(";",{指令汇总审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令汇总状态串#=" " or instr(@指令汇总状态串#, concat(";",{指令汇总状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}<@记录序号# order by {记录序号} desc][@指定行数#] */
        if v_row_count = -1 then
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_code_no, 
            stock_code, target_code_no, trade_code_no, stock_type, 
            asset_type, comm_date, comm_time, comm_batch_no, 
            comm_opor, comm_executor, comm_dir, comm_limit_price, 
            limit_actual_price, comm_qty, comm_amt, order_qty, 
            comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
            net_price_flag, par_value, impawn_ratio, intrst_days, 
            bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
            comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
            basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
            sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
            sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
            exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and  co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id<v_row_id order by row_id desc;
        else
            select row_id, create_date, create_time, 
            update_date, update_time, update_times, opor_co_no, 
            opor_no, oper_mac, oper_ip_addr, oper_info, 
            oper_way, oper_func_code, init_date, co_no, 
            pd_no, exch_group_no, asset_acco_no, pass_no, 
            out_acco, exch_crncy_type, exch_no, stock_code_no, 
            stock_code, target_code_no, trade_code_no, stock_type, 
            asset_type, comm_date, comm_time, comm_batch_no, 
            comm_opor, comm_executor, comm_dir, comm_limit_price, 
            limit_actual_price, comm_qty, comm_amt, order_qty, 
            comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
            net_price_flag, par_value, impawn_ratio, intrst_days, 
            bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
            comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
            comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
            comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
            basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
            sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
            sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
            exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and  co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor) and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id<v_row_id order by row_id desc limit v_row_count;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询汇总指令历史
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QuerySumComm_His;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QuerySumComm_His(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_begin_date int,
    IN p_end_date int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_comm_sum_appr_status_str varchar(64),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_stock_type_str varchar(2048),
    IN p_asset_type_str varchar(2048),
    IN p_comm_dir_str varchar(2048),
    IN p_comm_sum_status_str varchar(64),
    IN p_strike_status_str varchar(64),
    IN p_basket_id bigint,
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_row_id bigint,
    IN p_row_count int,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_begin_date int;
    declare v_end_date int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_sum_appr_status_str varchar(64);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_stock_type_str varchar(2048);
    declare v_asset_type_str varchar(2048);
    declare v_comm_dir_str varchar(2048);
    declare v_comm_sum_status_str varchar(64);
    declare v_strike_status_str varchar(64);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_row_id bigint;
    declare v_row_count int;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_begin_date = p_begin_date;
    SET v_end_date = p_end_date;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_sum_appr_status_str = p_comm_sum_appr_status_str;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type_str = p_stock_type_str;
    SET v_asset_type_str = p_asset_type_str;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_sum_status_str = p_comm_sum_status_str;
    SET v_strike_status_str = p_strike_status_str;
    SET v_basket_id = p_basket_id;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_row_id = p_row_id;
    SET v_row_count = p_row_count;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录][历史_交易证券_指令_指令汇总表][字段][({初始化日期} between @开始日期# and @结束日期#) and (@指令日期#=0 or {指令日期}=@指令日期#) and (@指令批号#=0 or {指令批号}=@指令批号#) and (@体外指令标志# = 0 or {体外指令标志} = @体外指令标志#) and {机构编号}=@操作员机构编号#  and (@指令下达人#=0 or {指令下达人}=@指令下达人#) and (@指令执行人#=0 or {指令执行人}=@指令执行人#)  and {指令数量} > 0 and (@市场编号串#=" " or instr(@市场编号串#, concat(";",{市场编号},";"))>0) and (@证券代码编号#=0 or {证券代码编号}=@证券代码编号#) and (@指令汇总审批状态串#=" " or instr(@指令汇总审批状态串#, concat(";",{指令汇总审批状态},";"))>0) and (@证券类型串#=" " or instr(@证券类型串#, concat(";",{证券类型},";"))>0) and (@资产类型串#=" " or instr(@资产类型串#, concat(";",{资产类型},";"))>0) and (@指令方向串#=" " or instr(@指令方向串#, concat(";",{指令方向},";"))>0) and (@指令汇总状态串#=" " or instr(@指令汇总状态串#, concat(";",{指令汇总状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",{成交状态},";"))>0) and (@篮子序号# = 0 or {篮子序号} = @篮子序号#) and (@指令操作方式# = " " or {指令操作方式} = @指令操作方式#) and {记录序号}>@记录序号# order by {记录序号}][@指定行数#] */
    if v_row_count = -1 then
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu_his.tb_tdseap_sumcommand_his where (init_date between v_begin_date and v_end_date) and (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor)  and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id;
    else
        select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info from db_tdsecu_his.tb_tdseap_sumcommand_his where (init_date between v_begin_date and v_end_date) and (v_comm_date=0 or comm_date=v_comm_date) and (v_comm_batch_no=0 or comm_batch_no=v_comm_batch_no) and (v_exter_comm_flag = 0 or exter_comm_flag = v_exter_comm_flag) and co_no=v_opor_co_no  and (v_comm_opor=0 or comm_opor=v_comm_opor) and (v_comm_executor=0 or comm_executor=v_comm_executor)  and comm_qty > 0 and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",exch_no,";"))>0) and (v_stock_code_no=0 or stock_code_no=v_stock_code_no) and (v_comm_sum_appr_status_str=" " or instr(v_comm_sum_appr_status_str, concat(";",comm_sum_approve_status,";"))>0) and (v_stock_type_str=" " or instr(v_stock_type_str, concat(";",stock_type,";"))>0) and (v_asset_type_str=" " or instr(v_asset_type_str, concat(";",asset_type,";"))>0) and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",comm_dir,";"))>0) and (v_comm_sum_status_str=" " or instr(v_comm_sum_status_str, concat(";",comm_sum_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",strike_status,";"))>0) and (v_basket_id = 0 or basket_id = v_basket_id) and (v_comm_oper_way = " " or comm_oper_way = v_comm_oper_way) and row_id>v_row_id order by row_id limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取主推指令信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetPushCommInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetPushCommInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_init_date int,
    OUT p_co_no int,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_pass_no int,
    OUT p_out_acco varchar(32),
    OUT p_exch_crncy_type varchar(3),
    OUT p_stock_acco_no int,
    OUT p_stock_code_no int,
    OUT p_comm_date int,
    OUT p_comm_time int,
    OUT p_comm_batch_no int,
    OUT p_comm_opor int,
    OUT p_comm_executor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_comm_amt decimal(18,4),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_qty decimal(18,2),
    OUT p_comm_frozen_amt decimal(18,4),
    OUT p_comm_frozen_qty decimal(18,2),
    OUT p_strike_status varchar(2),
    OUT p_comm_status varchar(2),
    OUT p_comm_begin_date int,
    OUT p_comm_end_date int,
    OUT p_comm_begin_time int,
    OUT p_comm_end_time int,
    OUT p_comm_comple_date int,
    OUT p_comm_comple_time int,
    OUT p_comm_appr_date int,
    OUT p_comm_appr_time int,
    OUT p_comm_appr_status varchar(2),
    OUT p_comm_appr_oper int,
    OUT p_comm_appr_remark varchar(255),
    OUT p_basket_id bigint,
    OUT p_net_price_flag int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_oper_way varchar(2),
    OUT p_exter_comm_flag int,
    OUT p_comm_comple_flag int,
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_update_times int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_oper_func_code varchar(16);
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_limit_actual_price decimal(16,9);
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_comm_appr_oper_no int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_net_price_flag = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_update_times = 1;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_oper_func_code = " ";
    SET v_exch_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_limit_actual_price = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_comm_appr_oper_no = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_init_date = v_init_date;
    SET p_co_no = v_co_no;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_pass_no = v_pass_no;
    SET p_out_acco = v_out_acco;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_stock_acco_no = v_stock_acco_no;
    SET p_stock_code_no = v_stock_code_no;
    SET p_comm_date = v_comm_date;
    SET p_comm_time = v_comm_time;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_comm_qty = v_comm_qty;
    SET p_comm_amt = v_comm_amt;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_qty = v_strike_qty;
    SET p_comm_frozen_amt = v_comm_frozen_amt;
    SET p_comm_frozen_qty = v_comm_frozen_qty;
    SET p_strike_status = v_strike_status;
    SET p_comm_status = v_comm_status;
    SET p_comm_begin_date = v_comm_begin_date;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_begin_time = v_comm_begin_time;
    SET p_comm_end_time = v_comm_end_time;
    SET p_comm_comple_date = v_comm_comple_date;
    SET p_comm_comple_time = v_comm_comple_time;
    SET p_comm_appr_date = v_comm_appr_date;
    SET p_comm_appr_time = v_comm_appr_time;
    SET p_comm_appr_status = v_comm_appr_status;
    SET p_comm_appr_oper = v_comm_appr_oper;
    SET p_comm_appr_remark = v_comm_appr_remark;
    SET p_basket_id = v_basket_id;
    SET p_net_price_flag = v_net_price_flag;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_comm_comple_flag = v_comm_comple_flag;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取主推汇总指令信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetPushSumCommInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetPushSumCommInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_date int,
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_pass_no int,
    OUT p_out_acco varchar(32),
    OUT p_exch_crncy_type varchar(3),
    OUT p_stock_code_no int,
    OUT p_comm_time int,
    OUT p_comm_opor int,
    OUT p_comm_dir int,
    OUT p_comm_limit_price decimal(16,9),
    OUT p_comm_qty decimal(18,2),
    OUT p_comm_amt decimal(18,4),
    OUT p_order_qty decimal(18,2),
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_await_cancel_qty decimal(18,2),
    OUT p_strike_amt decimal(18,4),
    OUT p_strike_qty decimal(18,2),
    OUT p_strike_status varchar(2),
    OUT p_comm_sum_status varchar(2),
    OUT p_comm_begin_date int,
    OUT p_comm_end_date int,
    OUT p_comm_begin_time int,
    OUT p_comm_end_time int,
    OUT p_comm_comple_date int,
    OUT p_comm_comple_time int,
    OUT p_max_comm_comple_date int,
    OUT p_max_comm_comple_time int,
    OUT p_comm_appr_date int,
    OUT p_comm_appr_time int,
    OUT p_comm_appr_qty decimal(18,2),
    OUT p_comm_sum_approve_status varchar(2),
    OUT p_basket_id bigint,
    OUT p_net_price_flag int,
    OUT p_bond_accr_intrst decimal(18,12),
    OUT p_bond_rate_type int,
    OUT p_comm_oper_way varchar(2),
    OUT p_exter_comm_flag int,
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_date int;
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_code_no int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_net_price_flag int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_update_times int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_exch_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_limit_actual_price decimal(16,9);
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_date = p_comm_date;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_code_no = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_net_price_flag = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_update_times = 1;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_exch_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_limit_actual_price = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [获取表记录变量语句][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_pass_no = v_pass_no;
    SET p_out_acco = v_out_acco;
    SET p_exch_crncy_type = v_exch_crncy_type;
    SET p_stock_code_no = v_stock_code_no;
    SET p_comm_time = v_comm_time;
    SET p_comm_opor = v_comm_opor;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_limit_price = v_comm_limit_price;
    SET p_comm_qty = v_comm_qty;
    SET p_comm_amt = v_comm_amt;
    SET p_order_qty = v_order_qty;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_await_cancel_qty = v_comm_await_cancel_qty;
    SET p_strike_amt = v_strike_amt;
    SET p_strike_qty = v_strike_qty;
    SET p_strike_status = v_strike_status;
    SET p_comm_sum_status = v_comm_sum_status;
    SET p_comm_begin_date = v_comm_begin_date;
    SET p_comm_end_date = v_comm_end_date;
    SET p_comm_begin_time = v_comm_begin_time;
    SET p_comm_end_time = v_comm_end_time;
    SET p_comm_comple_date = v_comm_comple_date;
    SET p_comm_comple_time = v_comm_comple_time;
    SET p_max_comm_comple_date = v_max_comm_comple_date;
    SET p_max_comm_comple_time = v_max_comm_comple_time;
    SET p_comm_appr_date = v_comm_appr_date;
    SET p_comm_appr_time = v_comm_appr_time;
    SET p_comm_appr_qty = v_comm_appr_qty;
    SET p_comm_sum_approve_status = v_comm_sum_approve_status;
    SET p_basket_id = v_basket_id;
    SET p_net_price_flag = v_net_price_flag;
    SET p_bond_accr_intrst = v_bond_accr_intrst;
    SET p_bond_rate_type = v_bond_rate_type;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_exter_comm_flag = v_exter_comm_flag;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取去重指令批号
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetCommBatchNo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetCommBatchNo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_count = -1;

    
    label_pro:BEGIN
    

    /* set @指定行数# = -1; */
    set v_row_count = -1;

    /* [获取表记录][交易证券_指令_指令表][distinct {机构编号},{产品编号},{交易组编号},{组合代码},{指令批号}][{组合代码} <> ' '][@指定行数#] */
    if v_row_count = -1 then
        select distinct co_no,pd_no,exch_group_no,combo_code,comm_batch_no from db_tdsecu.tb_tdseap_command where combo_code <> ' ';
    else
        select distinct co_no,pd_no,exch_group_no,combo_code,comm_batch_no from db_tdsecu.tb_tdseap_command where combo_code <> ' ' limit v_row_count;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_锁定获取同批可暂停指令个数
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_LockGetBatchPauseCommCount;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_LockGetBatchPauseCommCount(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_record_count int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_record_count = 0;

    
    label_pro:BEGIN
    
    #获取 非终态且不是暂停的指令明细

    /* select count(*) into @记录个数# from  ~交易证券_指令_指令表^ where {指令批号}=@指令批号# and {机构编号}=@操作员机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》) or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》) ) ; */
    select count(*) into v_record_count from  db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_opor_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1") or (comm_status="3" and strike_status="2") ) ;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_record_count = v_record_count;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_修改明细指令状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ModiDetailComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ModiDetailComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_comm_status varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_comm_status varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_comm_status = p_comm_status;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [更新表记录][交易证券_指令_指令表][{指令状态}=@指令状态#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_status=v_comm_status where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.84.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_修改汇总指令状态
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ModiTotalComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ModiTotalComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_date int,
    IN p_co_no int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_sum_status varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_date int;
    declare v_co_no int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_sum_status varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_date = p_comm_date;
    SET v_co_no = p_co_no;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_sum_status = p_comm_sum_status;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [更新表记录][交易证券_指令_指令汇总表][{指令汇总状态}=@指令汇总状态#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人}=@指令执行人#][2][@指令日期#,@机构编号#,@指令批号#,@指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_sum_status=v_comm_sum_status where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor=v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.85.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,",","机构编号=",v_co_no,",","指令批号=",v_comm_batch_no,",","指令执行人=",v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,",","机构编号=",v_co_no,",","指令批号=",v_comm_batch_no,",","指令执行人=",v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_暂停同批明细指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_PauseBatchDetailComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_PauseBatchDetailComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    IN p_co_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_co_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_status varchar(2);
    declare v_update_date int;
    declare v_update_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_co_no = p_co_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_status = "0";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* set @指令状态#=《指令状态-暂停执行》; */
    set v_comm_status="7";

    /* [更新表记录][交易证券_指令_指令表][{指令状态}=@指令状态#][{指令批号}=@指令批号# and {机构编号}=@机构编号# and  ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》))][2][@指令批号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_status=v_comm_status where comm_batch_no=v_comm_batch_no and co_no=v_co_no and  (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1" ) or(comm_status="3" and strike_status="2"));
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.86.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令批号=",v_comm_batch_no),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令批号=",v_comm_batch_no);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取同批指令信息
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetBatchCommInfo;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetBatchCommInfo(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_count = -1;

    
    label_pro:BEGIN
    

    /* set @指定行数# =-1; */
    set v_row_count =-1;

     /* [获取表记录][交易证券_指令_指令表][字段][{指令批号}=@指令批号# and {机构编号}=@操作员机构编号#][@指定行数#] */
     if v_row_count = -1 then
         select row_id, create_date, create_time, 
         update_date, update_time, update_times, opor_co_no, 
         opor_no, oper_mac, oper_ip_addr, oper_info, 
         oper_way, oper_func_code, init_date, co_no, 
         pd_no, exch_group_no, asset_acco_no, pass_no, 
         out_acco, exch_crncy_type, exch_no, stock_acco_no, 
         stock_code_no, stock_code, target_code_no, trade_code_no, 
         stock_type, asset_type, comm_date, comm_time, 
         comm_batch_no, comm_opor, comm_executor, comm_dir, 
         comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
         order_qty, comm_cancel_qty, strike_amt, strike_qty, 
         comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
         impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
         capit_reback_days, posi_reback_days, strike_status, comm_status, 
         comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
         comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
         comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
         basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
         strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
         target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
         asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
         read_flag from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_opor_co_no;
     else
         select row_id, create_date, create_time, 
         update_date, update_time, update_times, opor_co_no, 
         opor_no, oper_mac, oper_ip_addr, oper_info, 
         oper_way, oper_func_code, init_date, co_no, 
         pd_no, exch_group_no, asset_acco_no, pass_no, 
         out_acco, exch_crncy_type, exch_no, stock_acco_no, 
         stock_code_no, stock_code, target_code_no, trade_code_no, 
         stock_type, asset_type, comm_date, comm_time, 
         comm_batch_no, comm_opor, comm_executor, comm_dir, 
         comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
         order_qty, comm_cancel_qty, strike_amt, strike_qty, 
         comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
         impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
         capit_reback_days, posi_reback_days, strike_status, comm_status, 
         comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
         comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
         comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
         basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
         strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
         target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
         asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
         read_flag from db_tdsecu.tb_tdseap_command where comm_batch_no=v_comm_batch_no and co_no=v_opor_co_no limit v_row_count;
     end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_启动同批明细指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_StartBatchDetailComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_StartBatchDetailComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    IN p_co_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_co_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_co_no = p_co_no;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    
    #暂停的明细指令需 逐条计算，恢复暂停前的状态。

    /* update   ~交易证券_指令_指令表^  set {指令状态} = (case  when {订单数量}=0 then 《指令状态-未执行》 when {订单数量}<{指令数量} then 《指令状态-部分执行》 when {订单数量} = {指令数量} and {成交数量} <{指令数量} then 《指令状态-全部执行》 end) where {指令状态}=《指令状态-暂停执行》 and {指令批号} = @指令批号# and {机构编号}=@机构编号#; */
    update   db_tdsecu.tb_tdseap_command  set comm_status = (case  when order_qty=0 then "1" when order_qty<comm_qty then "2" when order_qty = comm_qty and strike_qty <comm_qty then "3" end) where comm_status="7" and comm_batch_no = v_comm_batch_no and co_no=v_co_no;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取同批指令序号串
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetBatchCommIdStr;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetBatchCommIdStr(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    IN p_co_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_id_str varchar(2048)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_co_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_id_str varchar(2048);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_co_no = p_co_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_id_str = " ";

    
    label_pro:BEGIN
    
    #select group_concat({记录序号} SEPARATOR ";") into @指令序号串# from ~交易证券_指令_指令表^   where ({指令状态}=《指令状态-暂停执行》 or {指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》) )and {指令批号}=@指令批号# and {机构编号}=@机构编号# ;

    /* select group_concat({记录序号} SEPARATOR ";") into @指令序号串# from ~交易证券_指令_指令表^   where ({指令状态}=《指令状态-未执行》 or {指令状态}=《指令状态-部分执行》 or ({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-未成》 ) or({指令状态}=《指令状态-全部执行》 and {成交状态}=《成交状态-部成》) )and {指令批号}=@指令批号# and {机构编号}=@机构编号# ; */
    select group_concat(row_id SEPARATOR ";") into v_comm_id_str from db_tdsecu.tb_tdseap_command   where (comm_status="1" or comm_status="2" or (comm_status="3" and strike_status="1" ) or(comm_status="3" and strike_status="2") )and comm_batch_no=v_comm_batch_no and co_no=v_co_no ;

    /* set @指令序号串#=concat(@指令序号串#,";"); */
    set v_comm_id_str=concat(v_comm_id_str,";");
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_id_str = v_comm_id_str;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_判断同批指令存在在途交易
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckBatchCommExistOnwayOrder;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckBatchCommExistOnwayOrder(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_batch_no int,
    IN p_co_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_record_count int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_batch_no int;
    declare v_co_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_co_no = p_co_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_record_count = 0;

    
    label_pro:BEGIN
    

    /* set @记录个数# = 0; */
    set v_record_count = 0;

    /* select count(1) into @记录个数# from ~交易证券_指令_指令表^ a,~交易证券_交易_订单表^ b where a.{指令批号}=@指令批号# and a.{机构编号}=@机构编号# and b.{指令序号}=a.{记录序号} and b.{订单状态} in (《订单状态-已报》,《订单状态-待撤》,《订单状态-部成》); */
    select count(1) into v_record_count from db_tdsecu.tb_tdseap_command a,db_tdsecu.tb_tdsetd_order b where a.comm_batch_no=v_comm_batch_no and a.co_no=v_co_no and b.comm_id=a.row_id and b.order_status in ("2","3","5");

    /* if @记录个数# =0 then */
    if v_record_count =0 then

        /* select count(1) into @记录个数# from ~交易证券_指令_指令表^ a,~历史_交易证券_交易_订单表^ b where a.{指令批号}=@指令批号# and a.{机构编号}=@机构编号# and b.{指令序号}=a.{记录序号} and b.{订单状态} in (《订单状态-已报》,《订单状态-待撤》,《订单状态-部成》); */
        select count(1) into v_record_count from db_tdsecu.tb_tdseap_command a,db_tdsecu_his.tb_tdsetd_order_his b where a.comm_batch_no=v_comm_batch_no and a.co_no=v_co_no and b.comm_id=a.row_id and b.order_status in ("2","3","5");
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_record_count = v_record_count;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_分发待审批指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_DispApprPendComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_DispApprPendComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_date int,
    IN p_comm_id bigint,
    IN p_comm_batch_no int,
    IN p_comm_dir int,
    IN p_comm_status varchar(2),
    IN p_comm_opor int,
    IN p_comm_executor int,
    IN p_disp_flag int,
    IN p_disp_remark varchar(255),
    IN p_before_comm_executor int,
    IN p_is_withdraw int,
    IN p_exter_comm_flag int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_comm_dispense_appr_status varchar(2),
    OUT p_comm_dispense_appr_opor int,
    OUT p_comm_dispense_appr_date int,
    OUT p_comm_dispense_appr_time int,
    OUT p_comm_dispense_appr_remark varchar(255),
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_id bigint;
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_status varchar(2);
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_disp_flag int;
    declare v_disp_remark varchar(255);
    declare v_before_comm_executor int;
    declare v_is_withdraw int;
    declare v_exter_comm_flag int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_comm_dispense_appr_status varchar(2);
    declare v_comm_dispense_appr_opor int;
    declare v_comm_dispense_appr_date int;
    declare v_comm_dispense_appr_time int;
    declare v_comm_dispense_appr_remark varchar(255);
    declare v_update_times int;
    declare v_disp_time int;
    declare v_disp_date int;
    declare v_oper_func_code varchar(16);
    declare v_update_date int;
    declare v_update_time int;
    declare v_create_date int;
    declare v_create_time int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_date = p_comm_date;
    SET v_comm_id = p_comm_id;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_status = p_comm_status;
    SET v_comm_opor = p_comm_opor;
    SET v_comm_executor = p_comm_executor;
    SET v_disp_flag = p_disp_flag;
    SET v_disp_remark = p_disp_remark;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_is_withdraw = p_is_withdraw;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_comm_dispense_appr_status = "0";
    SET v_comm_dispense_appr_opor = 0;
    SET v_comm_dispense_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_dispense_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_dispense_appr_remark = " ";
    SET v_update_times = 1;
    SET v_disp_time = date_format(curtime(),'%H%i%s');
    SET v_disp_date = date_format(curdate(),'%Y%m%d');
    SET v_oper_func_code = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');

    
    label_pro:BEGIN
    

    /* [获取机器时间][@分发时间#] */
    select date_format(curtime(),'%H%i%s') into v_disp_time;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* set @操作功能# = @功能编码#; */
    set v_oper_func_code = v_func_code;

    /* set @指令转发审批状态#=《指令转发审批状态-待审批》; */
    set v_comm_dispense_appr_status="1";

    /* set @指令转发审批操作员#=0; */
    set v_comm_dispense_appr_opor=0;

    /* set @指令转发审批日期#=0; */
    set v_comm_dispense_appr_date=0;

    /* set @指令转发审批时间#=0; */
    set v_comm_dispense_appr_time=0;

    /* set @指令转发审批说明#=" "; */
    set v_comm_dispense_appr_remark=" ";

    /* [获取表记录变量语句][交易证券_指令_指令转发审批表][{记录序号}][@记录序号#][{指令序号}=@指令序号# and {指令日期}=@指令日期# and {指令转发审批状态}=《指令转发审批状态-待审批》] */
    select row_id into v_row_id from db_tdsecu.tb_tdseap_command_dispense_approve where comm_id=v_comm_id and comm_date=v_comm_date and comm_dispense_appr_status="1" limit 1;


    /* if @记录序号# <>0   then */
    if v_row_id <>0   then

           /* [更新表记录][交易证券_指令_指令转发审批表][{指令执行人}=@指令执行人#, {是否撤单}=@是否撤单#,{分发说明}=@分发说明#][{记录序号}=@记录序号#][2][@指令序号#,@指令日期#] */
           set v_update_date = date_format(curdate(),'%Y%m%d');
           set v_update_time = date_format(curtime(),'%H%i%s');
           update db_tdsecu.tb_tdseap_command_dispense_approve set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_executor=v_comm_executor, is_withdraw=v_is_withdraw,disp_remark=v_disp_remark where row_id=v_row_id;
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.3.91.2";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("指令序号=",v_comm_id,",","指令日期=",v_comm_date),"#",v_mysql_message);
               else
                   SET v_error_info = concat("指令序号=",v_comm_id,",","指令日期=",v_comm_date);
               end if;
               leave label_pro;
           end if;


           /* [获取表记录变量][交易证券_指令_指令转发审批表][{记录序号},{指令转发审批状态},{指令转发审批操作员},{指令转发审批日期},{指令转发审批时间},{指令转发审批说明},{更新次数}][@记录序号#,@指令转发审批状态#,@指令转发审批操作员#,@指令转发审批日期#,@指令转发审批时间#,@指令转发审批说明#,@更新次数#][{记录序号}=@记录序号#][4][@指令序号#,@指令日期#] */
           select row_id,comm_dispense_appr_status,comm_dispense_appr_opor,comm_dispense_appr_date,comm_dispense_appr_time,comm_dispense_appr_remark,update_times into v_row_id,v_comm_dispense_appr_status,v_comm_dispense_appr_opor,v_comm_dispense_appr_date,v_comm_dispense_appr_time,v_comm_dispense_appr_remark,v_update_times from db_tdsecu.tb_tdseap_command_dispense_approve where row_id=v_row_id limit 1;
           if FOUND_ROWS() = 0 then
                       
               SET v_error_code = "tdsecuA.3.91.4";
               if v_mysql_message <> "" then
                   SET v_error_info = CONCAT(concat("指令序号=",v_comm_id,",","指令日期=",v_comm_date),"#",v_mysql_message);
               else
                   SET v_error_info = concat("指令序号=",v_comm_id,",","指令日期=",v_comm_date);
               end if;
               leave label_pro;
           end if;

    else

           /* [插入表记录][交易证券_指令_指令转发审批表][字段][字段变量][1][@指令日期#,@指令序号#] */
           set v_create_date = date_format(curdate(),'%Y%m%d');
           set v_create_time = date_format(curtime(),'%H%i%s');
           set v_update_date = v_create_date;
           set v_update_time = v_create_time;
           set v_update_times = 1;
           insert into db_tdsecu.tb_tdseap_command_dispense_approve(
               create_date, create_time, update_date, 
               update_time, update_times, opor_co_no, opor_no, 
               oper_mac, oper_ip_addr, oper_info, oper_way, 
               oper_func_code, init_date, co_no, pd_no, 
               exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
               stock_code_no, stock_type, asset_type, comm_date, 
               comm_id, comm_batch_no, comm_dir, comm_status, 
               comm_opor, comm_executor, disp_flag, disp_remark, 
               before_comm_executor, is_withdraw, exter_comm_flag, comm_dispense_appr_status, 
               comm_dispense_appr_opor, comm_dispense_appr_date, comm_dispense_appr_time, comm_dispense_appr_remark) 
           value( 
               v_create_date, v_create_time, v_update_date, 
               v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
               v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
               v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
               v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
               v_stock_code_no, v_stock_type, v_asset_type, v_comm_date, 
               v_comm_id, v_comm_batch_no, v_comm_dir, v_comm_status, 
               v_comm_opor, v_comm_executor, v_disp_flag, v_disp_remark, 
               v_before_comm_executor, v_is_withdraw, v_exter_comm_flag, v_comm_dispense_appr_status, 
               v_comm_dispense_appr_opor, v_comm_dispense_appr_date, v_comm_dispense_appr_time, v_comm_dispense_appr_remark);
           if v_error_code = "1" then
                       
               SET v_error_code = "tdsecuA.3.91.1";
               SET v_error_info =  CONCAT(concat("指令日期=",v_comm_date,",","指令序号=",v_comm_id),"#",v_mysql_message);
               leave label_pro;
           end if;


           /* [获取记录序号][@记录序号#] */
           select LAST_INSERT_ID() into v_row_id;


           /* set @更新次数# = 1; */
           set v_update_times = 1;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_comm_dispense_appr_status = v_comm_dispense_appr_status;
    SET p_comm_dispense_appr_opor = v_comm_dispense_appr_opor;
    SET p_comm_dispense_appr_date = v_comm_dispense_appr_date;
    SET p_comm_dispense_appr_time = v_comm_dispense_appr_time;
    SET p_comm_dispense_appr_remark = v_comm_dispense_appr_remark;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_审批转发指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_ApprDispComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_ApprDispComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_row_id bigint,
    IN p_exch_no int,
    IN p_comm_id bigint,
    IN p_comm_date int,
    IN p_comm_dispense_appr_status varchar(2),
    IN p_comm_dispense_appr_remark varchar(255),
    IN p_comm_dispense_appr_opor int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_pd_no int,
    OUT p_exch_group_no int,
    OUT p_asset_acco_no int,
    OUT p_comm_executor int,
    OUT p_before_comm_executor int,
    OUT p_comm_dispense_appr_date int,
    OUT p_comm_dispense_appr_time int,
    OUT p_update_times int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_row_id bigint;
    declare v_exch_no int;
    declare v_comm_id bigint;
    declare v_comm_date int;
    declare v_comm_dispense_appr_status varchar(2);
    declare v_comm_dispense_appr_remark varchar(255);
    declare v_comm_dispense_appr_opor int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_comm_executor int;
    declare v_before_comm_executor int;
    declare v_comm_dispense_appr_date int;
    declare v_comm_dispense_appr_time int;
    declare v_update_times int;
    declare v_record_count int;
    declare v_tmp_comm_dispense_appr_status varchar(2);
    declare v_update_date int;
    declare v_update_time int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_oper_func_code varchar(16);
    declare v_co_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_status varchar(2);
    declare v_comm_opor int;
    declare v_disp_flag int;
    declare v_disp_remark varchar(255);
    declare v_is_withdraw int;
    declare v_exter_comm_flag int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_row_id = p_row_id;
    SET v_exch_no = p_exch_no;
    SET v_comm_id = p_comm_id;
    SET v_comm_date = p_comm_date;
    SET v_comm_dispense_appr_status = p_comm_dispense_appr_status;
    SET v_comm_dispense_appr_remark = p_comm_dispense_appr_remark;
    SET v_comm_dispense_appr_opor = p_comm_dispense_appr_opor;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_comm_executor = 0;
    SET v_before_comm_executor = 0;
    SET v_comm_dispense_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_dispense_appr_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_record_count = 0;
    SET v_tmp_comm_dispense_appr_status = "0";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_oper_func_code = " ";
    SET v_co_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_batch_no = 0;
    SET v_comm_dir = 0;
    SET v_comm_status = "0";
    SET v_comm_opor = 0;
    SET v_disp_flag = 0;
    SET v_disp_remark = " ";
    SET v_is_withdraw = 0;
    SET v_exter_comm_flag = 0;

    
    label_pro:BEGIN
    

    /* set @指令转发审批日期#=@初始化日期#; */
    set v_comm_dispense_appr_date=v_init_date;

    /* [获取机器时间][@指令转发审批时间#] */
    select date_format(curtime(),'%H%i%s') into v_comm_dispense_appr_time;


    /* set @记录个数#=0; */
    set v_record_count=0;
    #[获取表记录变量语句][交易证券_指令_指令转发审批表][count(*),{指令转发审批状态}][@记录个数#,@临时_指令转发审批状态#][{指令序号}=@指令序号# and {指令日期}=@指令日期#]

    /* [获取表记录变量语句][交易证券_指令_指令转发审批表][count(*),{指令转发审批状态}][@记录个数#,@临时_指令转发审批状态#][{记录序号}=@记录序号#] */
    select count(*),comm_dispense_appr_status into v_record_count,v_tmp_comm_dispense_appr_status from db_tdsecu.tb_tdseap_command_dispense_approve where row_id=v_row_id limit 1;


    /* [检查报错返回][@记录个数#=0][2][concat("不存在待审批的转发指令！",@指令日期#)] */
    if v_record_count=0 then
        
        SET v_error_code = "tdsecuA.3.92.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("不存在待审批的转发指令！",v_comm_date),"#",v_mysql_message);
        else
            SET v_error_info = concat("不存在待审批的转发指令！",v_comm_date);
        end if;
        leave label_pro;
    end if;


    /* [检查报错返回][@临时_指令转发审批状态#<>《指令转发审批状态-待审批》][2][concat("该转发指令已审批！",@指令序号#,@指令日期#,@记录序号#)] */
    if v_tmp_comm_dispense_appr_status<>"1" then
        
        SET v_error_code = "tdsecuA.3.92.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("该转发指令已审批！",v_comm_id,v_comm_date,v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("该转发指令已审批！",v_comm_id,v_comm_date,v_row_id);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令转发审批表][{指令转发审批操作员}=@指令转发审批操作员#, {指令转发审批状态}=@指令转发审批状态#,{指令转发审批日期}=@指令转发审批日期# , {指令转发审批时间} = @指令转发审批时间#,{指令转发审批说明}=@指令转发审批说明#][{记录序号}=@记录序号#][2][@记录序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command_dispense_approve set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_dispense_appr_opor=v_comm_dispense_appr_opor, comm_dispense_appr_status=v_comm_dispense_appr_status,comm_dispense_appr_date=v_comm_dispense_appr_date , comm_dispense_appr_time = v_comm_dispense_appr_time,comm_dispense_appr_remark=v_comm_dispense_appr_remark where row_id=v_row_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.92.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;


    /* [获取表记录变量][交易证券_指令_指令转发审批表][字段][字段变量][{记录序号}=@记录序号#][4][@记录序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, exch_no, 
        stock_acco_no, stock_code_no, stock_type, asset_type, 
        comm_date, comm_id, comm_batch_no, comm_dir, 
        comm_status, comm_opor, comm_executor, disp_flag, 
        disp_remark, before_comm_executor, is_withdraw, exter_comm_flag, 
        comm_dispense_appr_status, comm_dispense_appr_opor, comm_dispense_appr_date, comm_dispense_appr_time, 
        comm_dispense_appr_remark into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_exch_no, 
        v_stock_acco_no, v_stock_code_no, v_stock_type, v_asset_type, 
        v_comm_date, v_comm_id, v_comm_batch_no, v_comm_dir, 
        v_comm_status, v_comm_opor, v_comm_executor, v_disp_flag, 
        v_disp_remark, v_before_comm_executor, v_is_withdraw, v_exter_comm_flag, 
        v_comm_dispense_appr_status, v_comm_dispense_appr_opor, v_comm_dispense_appr_date, v_comm_dispense_appr_time, 
        v_comm_dispense_appr_remark from db_tdsecu.tb_tdseap_command_dispense_approve where row_id=v_row_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.92.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录序号=",v_row_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录序号=",v_row_id);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_pd_no = v_pd_no;
    SET p_exch_group_no = v_exch_group_no;
    SET p_asset_acco_no = v_asset_acco_no;
    SET p_comm_executor = v_comm_executor;
    SET p_before_comm_executor = v_before_comm_executor;
    SET p_comm_dispense_appr_date = v_comm_dispense_appr_date;
    SET p_comm_dispense_appr_time = v_comm_dispense_appr_time;
    SET p_update_times = v_update_times;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_查询转发审批指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_QueryDispApprComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_QueryDispApprComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_comm_id bigint,
    IN p_comm_disp_appr_remark_str varchar(64),
    IN p_exch_no_str varchar(2048),
    IN p_stock_code_no int,
    IN p_comm_dir_str varchar(2048),
    IN p_comm_status_str varchar(64),
    IN p_strike_status_str varchar(64),
    IN p_comm_oper_way varchar(2),
    IN p_exter_comm_flag int,
    IN p_comm_comple_flag int,
    IN p_row_id bigint,
    IN p_co_no_rights_str varchar(2048),
    IN p_pd_no_rights_str varchar(2048),
    IN p_exch_group_no_rights_str varchar(2048),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_comm_id bigint;
    declare v_comm_disp_appr_remark_str varchar(64);
    declare v_exch_no_str varchar(2048);
    declare v_stock_code_no int;
    declare v_comm_dir_str varchar(2048);
    declare v_comm_status_str varchar(64);
    declare v_strike_status_str varchar(64);
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_row_id bigint;
    declare v_co_no_rights_str varchar(2048);
    declare v_pd_no_rights_str varchar(2048);
    declare v_exch_group_no_rights_str varchar(2048);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_comm_id = p_comm_id;
    SET v_comm_disp_appr_remark_str = p_comm_disp_appr_remark_str;
    SET v_exch_no_str = p_exch_no_str;
    SET v_stock_code_no = p_stock_code_no;
    SET v_comm_dir_str = p_comm_dir_str;
    SET v_comm_status_str = p_comm_status_str;
    SET v_strike_status_str = p_strike_status_str;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_comm_comple_flag = p_comm_comple_flag;
    SET v_row_id = p_row_id;
    SET v_co_no_rights_str = p_co_no_rights_str;
    SET v_pd_no_rights_str = p_pd_no_rights_str;
    SET v_exch_group_no_rights_str = p_exch_group_no_rights_str;
    SET v_error_code = "0";
    SET v_error_info = " ";

    
    label_pro:BEGIN
    

    /* select t1.* from (select a.{操作员机构编号},a.{操作员编号},a.{操作MAC},a.{操作IP},a.{操作信息},a.{操作方式},a.{操作功能},a.{初始化日期},a.{机构编号},a.{产品编号},a.{交易组编号},a.{资产账户编号},a.{市场编号},a.{证券代码编号},a.{资产类型},a.{证券类型},a.{指令下达人},a.{指令日期},a.{指令时间},a.{记录序号} as {指令序号},a.{指令批号},a.{指令方向},a.{指令限价},a.{指令实际限价},a.{指令数量},a.{指令金额},a.{订单数量},a.{指令撤销数量},a.{成交金额},a.{成交数量},a.{指令冻结金额},a.{指令冻结数量},a.{净价标志},a.{票面面值},a.{债券计提利息},a.{成交状态},a.{指令状态},a.{指令开始日期},a.{指令结束日期},a.{指令开始时间},a.{指令结束时间},a.{指令完成日期},a.{指令完成时间},a.{指令审批日期},a.{指令审批时间},a.{指令审批状态},a.{指令审批操作员序号},a.{指令审批操作员},a.{指令审批说明},a.{篮子序号},a.{指令操作方式},a.{体外指令标志},a.{指令完成标志},a.{交易币种},b.{记录序号},b.{指令执行人},b.{指令转发审批状态},b.{指令转发审批操作员},b.{指令转发审批日期},b.{指令转发审批时间},b.{指令转发审批说明},b.{分发说明},b.{前指令执行人},b.{是否撤单} from ~交易证券_指令_指令表^ a,~交易证券_指令_指令转发审批表^ b where a.{记录序号} = b.{指令序号} and (@指令序号#=0 or b.{指令序号}=@指令序号#)) as t1 where t1.{机构编号}=@机构编号# and (@产品编号#=0 or t1.{产品编号}=@产品编号#) and (@交易组编号#=0 or t1.{交易组编号}=@交易组编号#) and (@资产账户编号#=0 or t1.{资产账户编号}=@资产账户编号#) and (@体外指令标志# = 0 or t1.{体外指令标志} = @体外指令标志#) and (@指令完成标志# = 0 or t1.{指令完成标志}=@指令完成标志#)  and (@市场编号串#=" " or instr(@市场编号串#, concat(";",t1.{市场编号},";"))>0) and (@证券代码编号#=0 or t1.{证券代码编号}=@证券代码编号#) and (@指令转发审批状态串#=" " or instr(@指令转发审批状态串#, concat(";",t1.{指令转发审批状态},";"))>0)and (@指令方向串#=" " or instr(@指令方向串#, concat(";",t1.{指令方向},";"))>0) and (@指令状态串#=" " or instr(@指令状态串#, concat(";",t1.{指令状态},";"))>0) and (@成交状态串#=" " or instr(@成交状态串#, concat(";",t1.{成交状态},";"))>0) and (@机构编号权限串#=" " or instr(@机构编号权限串#, concat(";",t1.{机构编号},";"))>0) and (@产品编号权限串#=" " or instr(@产品编号权限串#, concat(";",t1.{产品编号},";"))>0) and (@交易组编号权限串#=" " or instr(@交易组编号权限串#, concat(";",t1.{交易组编号},";"))>0) and (@指令操作方式# = " " or t1.{指令操作方式} = @指令操作方式#) and t1.{记录序号}>@记录序号# order by t1.{记录序号}; */
    select t1.* from (select a.opor_co_no,a.opor_no,a.oper_mac,a.oper_ip_addr,a.oper_info,a.oper_way,a.oper_func_code,a.init_date,a.co_no,a.pd_no,a.exch_group_no,a.asset_acco_no,a.exch_no,a.stock_code_no,a.asset_type,a.stock_type,a.comm_opor,a.comm_date,a.comm_time,a.row_id as comm_id,a.comm_batch_no,a.comm_dir,a.comm_limit_price,a.limit_actual_price,a.comm_qty,a.comm_amt,a.order_qty,a.comm_cancel_qty,a.strike_amt,a.strike_qty,a.comm_frozen_amt,a.comm_frozen_qty,a.net_price_flag,a.par_value,a.bond_accr_intrst,a.strike_status,a.comm_status,a.comm_begin_date,a.comm_end_date,a.comm_begin_time,a.comm_end_time,a.comm_comple_date,a.comm_comple_time,a.comm_appr_date,a.comm_appr_time,a.comm_appr_status,a.comm_appr_oper_no,a.comm_appr_oper,a.comm_appr_remark,a.basket_id,a.comm_oper_way,a.exter_comm_flag,a.comm_comple_flag,a.exch_crncy_type,b.row_id,b.comm_executor,b.comm_dispense_appr_status,b.comm_dispense_appr_opor,b.comm_dispense_appr_date,b.comm_dispense_appr_time,b.comm_dispense_appr_remark,b.disp_remark,b.before_comm_executor,b.is_withdraw from db_tdsecu.tb_tdseap_command a,db_tdsecu.tb_tdseap_command_dispense_approve b where a.row_id = b.comm_id and (v_comm_id=0 or b.comm_id=v_comm_id)) as t1 where t1.co_no=v_co_no and (v_pd_no=0 or t1.pd_no=v_pd_no) and (v_exch_group_no=0 or t1.exch_group_no=v_exch_group_no) and (v_asset_acco_no=0 or t1.asset_acco_no=v_asset_acco_no) and (v_exter_comm_flag = 0 or t1.exter_comm_flag = v_exter_comm_flag) and (v_comm_comple_flag = 0 or t1.comm_comple_flag=v_comm_comple_flag)  and (v_exch_no_str=" " or instr(v_exch_no_str, concat(";",t1.exch_no,";"))>0) and (v_stock_code_no=0 or t1.stock_code_no=v_stock_code_no) and (v_comm_disp_appr_remark_str=" " or instr(v_comm_disp_appr_remark_str, concat(";",t1.comm_dispense_appr_status,";"))>0)and (v_comm_dir_str=" " or instr(v_comm_dir_str, concat(";",t1.comm_dir,";"))>0) and (v_comm_status_str=" " or instr(v_comm_status_str, concat(";",t1.comm_status,";"))>0) and (v_strike_status_str=" " or instr(v_strike_status_str, concat(";",t1.strike_status,";"))>0) and (v_co_no_rights_str=" " or instr(v_co_no_rights_str, concat(";",t1.co_no,";"))>0) and (v_pd_no_rights_str=" " or instr(v_pd_no_rights_str, concat(";",t1.pd_no,";"))>0) and (v_exch_group_no_rights_str=" " or instr(v_exch_group_no_rights_str, concat(";",t1.exch_group_no,";"))>0) and (v_comm_oper_way = " " or t1.comm_oper_way = v_comm_oper_way) and t1.row_id>v_row_id order by t1.row_id;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;



END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_错单修改成交回溯更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_BackErrorStrikeUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_BackErrorStrikeUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_dir int,
    OUT p_comm_cancel_qty decimal(18,2),
    OUT p_comm_strike_qty decimal(18,2),
    OUT p_comm_strike_amt decimal(18,4),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_status varchar(2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_dir int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_strike_qty decimal(18,2);
    declare v_comm_strike_amt decimal(18,4);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_executor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_tmp_comm_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_dir = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_strike_qty = 0;
    SET v_comm_strike_amt = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_executor = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_tmp_comm_qty = 0;

    
    label_pro:BEGIN
    
    #保存输入参数

    /* set @临时_成交数量#=-1 * @成交数量#; */
    set v_tmp_strike_qty=-1 * v_strike_qty;

    /* set @临时_成交金额#=-1 * @成交金额#; */
    set v_tmp_strike_amt=-1 * v_strike_amt;
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.94.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @临时_指令数量# = @指令数量#; */
    set v_tmp_comm_qty = v_comm_qty;

    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;
    #判断是否超过成交回溯

    /* [检查报错返回][@临时_成交数量# >@成交数量#][630][@临时_成交数量#,@成交数量#] */
    if v_tmp_strike_qty >v_strike_qty then
        
        SET v_error_code = "tdsecuA.3.94.630";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("临时_成交数量=",v_tmp_strike_qty,",","成交数量=",v_strike_qty),"#",v_mysql_message);
        else
            SET v_error_info = concat("临时_成交数量=",v_tmp_strike_qty,",","成交数量=",v_strike_qty);
        end if;
        leave label_pro;
    end if;


    /* set @成交数量#=@成交数量# + @临时_成交数量#; */
    set v_strike_qty=v_strike_qty + v_tmp_strike_qty;

    /* set @成交金额#=@成交金额# + @临时_成交金额#; */
    set v_strike_amt=v_strike_amt + v_tmp_strike_amt;

    /* set @指令成交数量# = @成交数量#; */
    set v_comm_strike_qty = v_strike_qty;

    /* set @指令成交金额# = @成交金额#; */
    set v_comm_strike_amt = v_strike_amt;
    #获取指令状态,不为暂停再重算

    /* set @指令数量# = @临时_指令数量#; */
    set v_comm_qty = v_tmp_comm_qty;

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.94.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.94.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令表][{指令状态}=@指令状态#, {成交状态}=@成交状态#,{成交数量}=@指令成交数量#, {成交金额}=@指令成交金额#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#, {指令完成标志} = 《指令完成标志-未完成》][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_status=v_comm_status, strike_status=v_strike_status,strike_qty=v_comm_strike_qty, strike_amt=v_comm_strike_amt,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time, comm_comple_flag = 1 where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.94.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @成交数量# = -1 * @临时_成交数量#; */
    set v_strike_qty = -1 * v_tmp_strike_qty;

    /* set @成交金额# = -1 * @临时_成交金额#; */
    set v_strike_amt = -1 * v_tmp_strike_amt;

    /* 调用【原子_交易证券_指令_错单修改成交回溯更新汇总指令】*/
    call db_tdsecu.pra_tdseap_BackErrorStrikeUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_strike_qty,
        v_strike_amt,
        v_comm_comple_date,
        v_comm_comple_time,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.94.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_错单修改成交回溯更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_cancel_qty = v_comm_cancel_qty;
    SET p_comm_strike_qty = v_comm_strike_qty;
    SET p_comm_strike_amt = v_comm_strike_amt;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_status = v_comm_status;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_错单修改成交回溯更新汇总指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_BackErrorStrikeUpdateSumComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_BackErrorStrikeUpdateSumComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_comm_date int,
    IN p_comm_batch_no int,
    IN p_comm_executor int,
    IN p_comm_status varchar(2),
    IN p_comm_dir int,
    IN p_strike_qty decimal(18,2),
    IN p_strike_amt decimal(18,4),
    IN p_comm_comple_date int,
    IN p_comm_comple_time int,
    IN p_comm_oper_way varchar(2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_status varchar(2);
    declare v_comm_dir int;
    declare v_strike_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_oper_way varchar(2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_tmp_strike_qty decimal(18,2);
    declare v_tmp_strike_amt decimal(18,4);
    declare v_tmp_comm_status varchar(2);
    declare v_tmp_comm_comple_date int;
    declare v_tmp_comm_comple_time int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_comm_await_cancel_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_strike_status varchar(2);
    declare v_comm_sum_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_max_comm_comple_date int;
    declare v_max_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_comm_sum_approve_status varchar(2);
    declare v_basket_id bigint;
    declare v_buy_order_qty decimal(18,2);
    declare v_sell_order_qty decimal(18,2);
    declare v_buy_comm_qty decimal(18,2);
    declare v_sell_comm_qty decimal(18,2);
    declare v_buy_strike_qty decimal(18,2);
    declare v_sell_strike_qty decimal(18,2);
    declare v_buy_strike_amt decimal(18,4);
    declare v_sell_strike_amt decimal(18,4);
    declare v_buy_comm_amt decimal(18,4);
    declare v_sell_comm_amt decimal(18,4);
    declare v_exter_comm_flag int;
    declare v_comm_remark_info varchar(1024);
    declare v_read_flag int;
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_comm_date = p_comm_date;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_executor = p_comm_executor;
    SET v_comm_status = p_comm_status;
    SET v_comm_dir = p_comm_dir;
    SET v_strike_qty = p_strike_qty;
    SET v_strike_amt = p_strike_amt;
    SET v_comm_comple_date = p_comm_comple_date;
    SET v_comm_comple_time = p_comm_comple_time;
    SET v_comm_oper_way = p_comm_oper_way;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_tmp_strike_qty = 0;
    SET v_tmp_strike_amt = 0;
    SET v_tmp_comm_status = "0";
    SET v_tmp_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_tmp_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_comm_await_cancel_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_strike_status = "0";
    SET v_comm_sum_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_max_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_max_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_qty = 0;
    SET v_comm_sum_approve_status = "0";
    SET v_basket_id = 0;
    SET v_buy_order_qty = 0;
    SET v_sell_order_qty = 0;
    SET v_buy_comm_qty = 0;
    SET v_sell_comm_qty = 0;
    SET v_buy_strike_qty = 0;
    SET v_sell_strike_qty = 0;
    SET v_buy_strike_amt = 0;
    SET v_sell_strike_amt = 0;
    SET v_buy_comm_amt = 0;
    SET v_sell_comm_amt = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_remark_info = " ";
    SET v_read_flag = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [检查正常返回][@指令批号# = 0] */
    if v_comm_batch_no = 0 then
        leave label_pro;
    end if;

    #保存输入参数

    /* set @临时_成交数量#=@成交数量#; */
    set v_tmp_strike_qty=v_strike_qty;

    /* set @临时_成交金额#=@成交金额#; */
    set v_tmp_strike_amt=v_strike_amt;

    /* set @临时_指令状态# = @指令状态#; */
    set v_tmp_comm_status = v_comm_status;

    /* set @临时_指令完成日期# = @指令完成日期#; */
    set v_tmp_comm_comple_date = v_comm_comple_date;

    /* set @临时_指令完成时间# = @指令完成时间#; */
    set v_tmp_comm_comple_time = v_comm_comple_time;

    /* [锁定获取表记录变量][交易证券_指令_指令汇总表][字段][字段变量][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_code_no, 
        stock_code, target_code_no, trade_code_no, stock_type, 
        asset_type, comm_date, comm_time, comm_batch_no, 
        comm_opor, comm_executor, comm_dir, comm_limit_price, 
        limit_actual_price, comm_qty, comm_amt, order_qty, 
        comm_cancel_qty, comm_await_cancel_qty, strike_amt, strike_qty, 
        net_price_flag, par_value, impawn_ratio, intrst_days, 
        bond_accr_intrst, bond_rate_type, strike_status, comm_sum_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, max_comm_comple_date, max_comm_comple_time, 
        comm_appr_date, comm_appr_time, comm_appr_qty, comm_sum_approve_status, 
        basket_id, buy_order_qty, sell_order_qty, buy_comm_qty, 
        sell_comm_qty, buy_strike_qty, sell_strike_qty, buy_strike_amt, 
        sell_strike_amt, buy_comm_amt, sell_comm_amt, comm_oper_way, 
        exter_comm_flag, comm_remark_info, read_flag, acco_concat_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_code_no, 
        v_stock_code, v_target_code_no, v_trade_code_no, v_stock_type, 
        v_asset_type, v_comm_date, v_comm_time, v_comm_batch_no, 
        v_comm_opor, v_comm_executor, v_comm_dir, v_comm_limit_price, 
        v_limit_actual_price, v_comm_qty, v_comm_amt, v_order_qty, 
        v_comm_cancel_qty, v_comm_await_cancel_qty, v_strike_amt, v_strike_qty, 
        v_net_price_flag, v_par_value, v_impawn_ratio, v_intrst_days, 
        v_bond_accr_intrst, v_bond_rate_type, v_strike_status, v_comm_sum_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_max_comm_comple_date, v_max_comm_comple_time, 
        v_comm_appr_date, v_comm_appr_time, v_comm_appr_qty, v_comm_sum_approve_status, 
        v_basket_id, v_buy_order_qty, v_sell_order_qty, v_buy_comm_qty, 
        v_sell_comm_qty, v_buy_strike_qty, v_sell_strike_qty, v_buy_strike_amt, 
        v_sell_strike_amt, v_buy_comm_amt, v_sell_comm_amt, v_comm_oper_way, 
        v_exter_comm_flag, v_comm_remark_info, v_read_flag, v_acco_concat_info from db_tdsecu.tb_tdseap_sumcommand where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.95.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* set @成交数量# = @成交数量# - @临时_成交数量#; */
    set v_strike_qty = v_strike_qty - v_tmp_strike_qty;

    /* set @成交金额# = @成交金额# - @临时_成交金额#; */
    set v_strike_amt = v_strike_amt - v_tmp_strike_amt;
    #获取指令成交状态

    /* 调用【原子_交易证券_公用_计算指令汇总状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommSumStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_order_qty,
        v_comm_cancel_qty,
        v_comm_await_cancel_qty,
        v_strike_qty,
        v_error_code,
        v_error_info,
        v_comm_sum_status);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.95.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令汇总状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_公用_计算指令成交状态】*/
    call db_tdsecu.pra_tdsepb_CaclCommStrikeStatus(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_qty,
        v_strike_qty,
        v_comm_cancel_qty,
        v_error_code,
        v_error_info,
        v_strike_status,
        v_comm_comple_date,
        v_comm_comple_time);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.95.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令成交状态出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* if @指令方向# = 《指令方向-买入》 or @指令方向# = 《指令方向-融资回购》 then */
    if v_comm_dir = 1 or v_comm_dir = 3 then

        /* set @买入成交数量# = @买入成交数量# - @临时_成交数量#; */
        set v_buy_strike_qty = v_buy_strike_qty - v_tmp_strike_qty;

        /* set @买入成交金额# = @买入成交金额# - @临时_成交金额#; */
        set v_buy_strike_amt = v_buy_strike_amt - v_tmp_strike_amt;

    /* elseif @指令方向# = 《指令方向-卖出》 or @指令方向# = 《指令方向-融券回购》 then */
    elseif v_comm_dir = 2 or v_comm_dir = 4 then

        /* set @卖出成交数量# = @卖出成交数量# - @临时_成交数量#; */
        set v_sell_strike_qty = v_sell_strike_qty - v_tmp_strike_qty;

        /* set @卖出成交金额# = @卖出成交金额# - @临时_成交金额#; */
        set v_sell_strike_amt = v_sell_strike_amt - v_tmp_strike_amt;
    end if;

    /* [获取表记录变量][交易证券_指令_指令表][ifnull(min({指令完成日期}),0),ifnull(min({指令完成时间}),0),ifnull(max({指令完成日期}),0),ifnull(max({指令完成时间}),0)][@指令完成日期#,@指令完成时间#,@指令最大完成日期#,@指令最大完成时间#][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][1][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    select ifnull(min(comm_comple_date),0),ifnull(min(comm_comple_time),0),ifnull(max(comm_comple_date),0),ifnull(max(comm_comple_time),0) into v_comm_comple_date,v_comm_comple_time,v_max_comm_comple_date,v_max_comm_comple_time from db_tdsecu.tb_tdseap_command where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.95.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;


    /* [更新表记录][交易证券_指令_指令汇总表][{成交数量}=@成交数量#, {成交金额}=@成交金额#,{买入成交数量}=@买入成交数量#, {买入成交金额}=@买入成交金额#,{卖出成交数量}=@卖出成交数量#, {卖出成交金额}=@卖出成交金额#,{指令汇总状态}=@指令汇总状态#,{成交状态}=@成交状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#,{指令最大完成日期}=@指令最大完成日期#,{指令最大完成时间}=@指令最大完成时间# ][{指令日期}=@指令日期# and {机构编号}=@机构编号# and {指令批号}=@指令批号# and {指令执行人} = @指令执行人#][2][@指令日期#, @机构编号#, @指令批号#, @指令执行人#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_sumcommand set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, strike_qty=v_strike_qty, strike_amt=v_strike_amt,buy_strike_qty=v_buy_strike_qty, buy_strike_amt=v_buy_strike_amt,sell_strike_qty=v_sell_strike_qty, sell_strike_amt=v_sell_strike_amt,comm_sum_status=v_comm_sum_status,strike_status=v_strike_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time,max_comm_comple_date=v_max_comm_comple_date,max_comm_comple_time=v_max_comm_comple_time  where comm_date=v_comm_date and co_no=v_co_no and comm_batch_no=v_comm_batch_no and comm_executor = v_comm_executor;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.95.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令日期=",v_comm_date,","," 机构编号=", v_co_no,","," 指令批号=", v_comm_batch_no,","," 指令执行人=", v_comm_executor);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验融资融券新增指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckFinaLoanAddComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckFinaLoanAddComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_crncy_type varchar(3),
    IN p_exch_crncy_type varchar(3),
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_exgp_avail_amt decimal(18,4),
    IN p_asac_avail_amt decimal(18,4),
    IN p_exgp_avail_qty decimal(18,2),
    IN p_exgp_target_code_avail_qty decimal(18,2),
    IN p_exgp_trade_code_avail_qty decimal(18,2),
    IN p_asac_avail_qty decimal(18,2),
    IN p_asac_target_code_avail_qty decimal(18,2),
    IN p_asac_trade_code_avail_qty decimal(18,2),
    IN p_exgp_busi_config_str varchar(64),
    IN p_asac_busi_config_str varchar(64),
    IN p_capit_reback_days int,
    IN p_posi_reback_days int,
    IN p_comm_dir int,
    IN p_comm_qty decimal(18,2),
    IN p_comm_frozen_amt decimal(18,4),
    IN p_impawn_ratio decimal(18,12),
    IN p_stock_type int,
    IN p_fina_limit_max decimal(18,4),
    IN p_loan_limit_max decimal(18,4),
    IN p_fina_marg_ratio decimal(18,12),
    IN p_secu_loan_marg_ratio decimal(18,12),
    IN p_comm_amt decimal(18,4),
    IN p_init_date int,
    IN p_exgp_loan_sell_amt decimal(18,4),
    IN p_asac_loan_sell_amt decimal(18,4),
    IN p_asac_converted_margin decimal(18,4),
    IN p_asac_fina_converted_pandl decimal(18,4),
    IN p_asac_loan_converted_pandl decimal(18,4),
    IN p_asac_fina_capt_margin decimal(18,4),
    IN p_asac_loan_capt_margin decimal(18,4),
    IN p_asac_keep_guarantee_ratio decimal(18,12),
    IN p_exgp_converted_margin decimal(18,4),
    IN p_exgp_fina_converted_pandl decimal(18,4),
    IN p_exgp_loan_converted_pandl decimal(18,4),
    IN p_exgp_fina_capt_margin decimal(18,4),
    IN p_exgp_loan_capt_margin decimal(18,4),
    IN p_exgp_keep_guarantee_ratio decimal(18,12),
    IN p_exgp_debt_loan_sell_strike_qty decimal(18,2),
    IN p_exgp_debt_fina_buy_strike_amt decimal(18,4),
    IN p_asac_cmmd_converted_margin decimal(18,4),
    IN p_asac_order_converted_margin decimal(18,4),
    IN p_asac_curr_converted_margin decimal(18,4),
    IN p_exgp_cmmd_converted_margin decimal(18,4),
    IN p_exgp_order_converted_margin decimal(18,4),
    IN p_exgp_curr_converted_margin decimal(18,4),
    IN p_exgp_fina_comm_capt_margin decimal(18,4),
    IN p_exgp_loan_comm_capt_margin decimal(18,4),
    IN p_exgp_fina_order_capt_margin decimal(18,4),
    IN p_exgp_loan_order_capt_margin decimal(18,4),
    IN p_asac_fina_comm_capt_margin decimal(18,4),
    IN p_asac_loan_comm_capt_margin decimal(18,4),
    IN p_asac_fina_order_capt_margin decimal(18,4),
    IN p_asac_loan_order_capt_margin decimal(18,4),
    IN p_asac_fina_interest decimal(18,4),
    IN p_asac_loan_interest decimal(18,4),
    IN p_exgp_fina_interest decimal(18,4),
    IN p_exgp_loan_interest decimal(18,4),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_exist_debt_flag int,
    OUT p_debt_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_crncy_type varchar(3);
    declare v_exch_crncy_type varchar(3);
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_exgp_avail_amt decimal(18,4);
    declare v_asac_avail_amt decimal(18,4);
    declare v_exgp_avail_qty decimal(18,2);
    declare v_exgp_target_code_avail_qty decimal(18,2);
    declare v_exgp_trade_code_avail_qty decimal(18,2);
    declare v_asac_avail_qty decimal(18,2);
    declare v_asac_target_code_avail_qty decimal(18,2);
    declare v_asac_trade_code_avail_qty decimal(18,2);
    declare v_exgp_busi_config_str varchar(64);
    declare v_asac_busi_config_str varchar(64);
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_comm_dir int;
    declare v_comm_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_impawn_ratio decimal(18,12);
    declare v_stock_type int;
    declare v_fina_limit_max decimal(18,4);
    declare v_loan_limit_max decimal(18,4);
    declare v_fina_marg_ratio decimal(18,12);
    declare v_secu_loan_marg_ratio decimal(18,12);
    declare v_comm_amt decimal(18,4);
    declare v_init_date int;
    declare v_exgp_loan_sell_amt decimal(18,4);
    declare v_asac_loan_sell_amt decimal(18,4);
    declare v_asac_converted_margin decimal(18,4);
    declare v_asac_fina_converted_pandl decimal(18,4);
    declare v_asac_loan_converted_pandl decimal(18,4);
    declare v_asac_fina_capt_margin decimal(18,4);
    declare v_asac_loan_capt_margin decimal(18,4);
    declare v_asac_keep_guarantee_ratio decimal(18,12);
    declare v_exgp_converted_margin decimal(18,4);
    declare v_exgp_fina_converted_pandl decimal(18,4);
    declare v_exgp_loan_converted_pandl decimal(18,4);
    declare v_exgp_fina_capt_margin decimal(18,4);
    declare v_exgp_loan_capt_margin decimal(18,4);
    declare v_exgp_keep_guarantee_ratio decimal(18,12);
    declare v_exgp_debt_loan_sell_strike_qty decimal(18,2);
    declare v_exgp_debt_fina_buy_strike_amt decimal(18,4);
    declare v_asac_cmmd_converted_margin decimal(18,4);
    declare v_asac_order_converted_margin decimal(18,4);
    declare v_asac_curr_converted_margin decimal(18,4);
    declare v_exgp_cmmd_converted_margin decimal(18,4);
    declare v_exgp_order_converted_margin decimal(18,4);
    declare v_exgp_curr_converted_margin decimal(18,4);
    declare v_exgp_fina_comm_capt_margin decimal(18,4);
    declare v_exgp_loan_comm_capt_margin decimal(18,4);
    declare v_exgp_fina_order_capt_margin decimal(18,4);
    declare v_exgp_loan_order_capt_margin decimal(18,4);
    declare v_asac_fina_comm_capt_margin decimal(18,4);
    declare v_asac_loan_comm_capt_margin decimal(18,4);
    declare v_asac_fina_order_capt_margin decimal(18,4);
    declare v_asac_loan_order_capt_margin decimal(18,4);
    declare v_asac_fina_interest decimal(18,4);
    declare v_asac_loan_interest decimal(18,4);
    declare v_exgp_fina_interest decimal(18,4);
    declare v_exgp_loan_interest decimal(18,4);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_exist_debt_flag int;
    declare v_debt_qty decimal(18,2);
    declare v_hk_cash_avail_date_type int;
    declare v_shsz_comm_avail_amt decimal(18,4);
    declare v_hk_comm_avail_amt decimal(18,4);
    declare v_shsz_trade_avail_amt decimal(18,4);
    declare v_hk_trade_avail_amt decimal(18,4);
    declare v_comm_avail_amt decimal(18,4);
    declare v_trade_avail_amt decimal(18,4);
    declare v_static_avail_amt decimal(18,4);
    declare v_row_id bigint;
    declare v_debt_loan_sell_strike_amt decimal(18,4);
    declare v_debt_strike_fee decimal(18,4);
    declare v_loan_return_strike_amt decimal(18,4);
    declare v_loan_return_order_amt decimal(18,4);
    declare v_loan_return_comm_amt decimal(18,4);
    declare v_return_strike_fee decimal(18,4);
    declare v_update_times int;
    declare v_avail_amt decimal(18,4);
    declare v_exgp_T_hk_sell_total_amt decimal(18,4);
    declare v_exgp_T_hk_buy_total_amt decimal(18,4);
    declare v_exgp_T1_hk_sell_total_amt decimal(18,4);
    declare v_exgp_T1_hk_buy_total_amt decimal(18,4);
    declare v_all_fee decimal(18,4);
    declare v_asac_T_hk_sell_total_amt decimal(18,4);
    declare v_asac_T_hk_buy_total_amt decimal(18,4);
    declare v_asac_T1_hk_sell_total_amt decimal(18,4);
    declare v_asac_T1_hk_buy_total_amt decimal(18,4);
    declare v_tmp_exgp_fina_capt_margin decimal(18,4);
    declare v_tmp_exgp_loan_capt_margin decimal(18,4);
    declare v_tmp_asac_fina_capt_margin decimal(18,4);
    declare v_tmp_asac_loan_capt_margin decimal(18,4);
    declare v_loan_sell_get_capital decimal(18,4);
    declare v_record_count int;
    declare v_comm_avail_qty decimal(18,2);
    declare v_trade_avail_qty decimal(18,2);
    declare v_static_avail_qty decimal(18,2);
    declare v_avail_qty decimal(18,2);
    declare v_tmp_debt_qty decimal(18,2);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_crncy_type = p_crncy_type;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_exgp_avail_amt = p_exgp_avail_amt;
    SET v_asac_avail_amt = p_asac_avail_amt;
    SET v_exgp_avail_qty = p_exgp_avail_qty;
    SET v_exgp_target_code_avail_qty = p_exgp_target_code_avail_qty;
    SET v_exgp_trade_code_avail_qty = p_exgp_trade_code_avail_qty;
    SET v_asac_avail_qty = p_asac_avail_qty;
    SET v_asac_target_code_avail_qty = p_asac_target_code_avail_qty;
    SET v_asac_trade_code_avail_qty = p_asac_trade_code_avail_qty;
    SET v_exgp_busi_config_str = p_exgp_busi_config_str;
    SET v_asac_busi_config_str = p_asac_busi_config_str;
    SET v_capit_reback_days = p_capit_reback_days;
    SET v_posi_reback_days = p_posi_reback_days;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_frozen_amt = p_comm_frozen_amt;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_stock_type = p_stock_type;
    SET v_fina_limit_max = p_fina_limit_max;
    SET v_loan_limit_max = p_loan_limit_max;
    SET v_fina_marg_ratio = p_fina_marg_ratio;
    SET v_secu_loan_marg_ratio = p_secu_loan_marg_ratio;
    SET v_comm_amt = p_comm_amt;
    SET v_init_date = p_init_date;
    SET v_exgp_loan_sell_amt = p_exgp_loan_sell_amt;
    SET v_asac_loan_sell_amt = p_asac_loan_sell_amt;
    SET v_asac_converted_margin = p_asac_converted_margin;
    SET v_asac_fina_converted_pandl = p_asac_fina_converted_pandl;
    SET v_asac_loan_converted_pandl = p_asac_loan_converted_pandl;
    SET v_asac_fina_capt_margin = p_asac_fina_capt_margin;
    SET v_asac_loan_capt_margin = p_asac_loan_capt_margin;
    SET v_asac_keep_guarantee_ratio = p_asac_keep_guarantee_ratio;
    SET v_exgp_converted_margin = p_exgp_converted_margin;
    SET v_exgp_fina_converted_pandl = p_exgp_fina_converted_pandl;
    SET v_exgp_loan_converted_pandl = p_exgp_loan_converted_pandl;
    SET v_exgp_fina_capt_margin = p_exgp_fina_capt_margin;
    SET v_exgp_loan_capt_margin = p_exgp_loan_capt_margin;
    SET v_exgp_keep_guarantee_ratio = p_exgp_keep_guarantee_ratio;
    SET v_exgp_debt_loan_sell_strike_qty = p_exgp_debt_loan_sell_strike_qty;
    SET v_exgp_debt_fina_buy_strike_amt = p_exgp_debt_fina_buy_strike_amt;
    SET v_asac_cmmd_converted_margin = p_asac_cmmd_converted_margin;
    SET v_asac_order_converted_margin = p_asac_order_converted_margin;
    SET v_asac_curr_converted_margin = p_asac_curr_converted_margin;
    SET v_exgp_cmmd_converted_margin = p_exgp_cmmd_converted_margin;
    SET v_exgp_order_converted_margin = p_exgp_order_converted_margin;
    SET v_exgp_curr_converted_margin = p_exgp_curr_converted_margin;
    SET v_exgp_fina_comm_capt_margin = p_exgp_fina_comm_capt_margin;
    SET v_exgp_loan_comm_capt_margin = p_exgp_loan_comm_capt_margin;
    SET v_exgp_fina_order_capt_margin = p_exgp_fina_order_capt_margin;
    SET v_exgp_loan_order_capt_margin = p_exgp_loan_order_capt_margin;
    SET v_asac_fina_comm_capt_margin = p_asac_fina_comm_capt_margin;
    SET v_asac_loan_comm_capt_margin = p_asac_loan_comm_capt_margin;
    SET v_asac_fina_order_capt_margin = p_asac_fina_order_capt_margin;
    SET v_asac_loan_order_capt_margin = p_asac_loan_order_capt_margin;
    SET v_asac_fina_interest = p_asac_fina_interest;
    SET v_asac_loan_interest = p_asac_loan_interest;
    SET v_exgp_fina_interest = p_exgp_fina_interest;
    SET v_exgp_loan_interest = p_exgp_loan_interest;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_exist_debt_flag = 0;
    SET v_debt_qty = 0;
    SET v_hk_cash_avail_date_type = 0;
    SET v_shsz_comm_avail_amt = 0;
    SET v_hk_comm_avail_amt = 0;
    SET v_shsz_trade_avail_amt = 0;
    SET v_hk_trade_avail_amt = 0;
    SET v_comm_avail_amt = 0;
    SET v_trade_avail_amt = 0;
    SET v_static_avail_amt = 0;
    SET v_row_id = 0;
    SET v_debt_loan_sell_strike_amt = 0;
    SET v_debt_strike_fee = 0;
    SET v_loan_return_strike_amt = 0;
    SET v_loan_return_order_amt = 0;
    SET v_loan_return_comm_amt = 0;
    SET v_return_strike_fee = 0;
    SET v_update_times = 1;
    SET v_avail_amt = 0;
    SET v_exgp_T_hk_sell_total_amt = 0;
    SET v_exgp_T_hk_buy_total_amt = 0;
    SET v_exgp_T1_hk_sell_total_amt = 0;
    SET v_exgp_T1_hk_buy_total_amt = 0;
    SET v_all_fee = 0;
    SET v_asac_T_hk_sell_total_amt = 0;
    SET v_asac_T_hk_buy_total_amt = 0;
    SET v_asac_T1_hk_sell_total_amt = 0;
    SET v_asac_T1_hk_buy_total_amt = 0;
    SET v_tmp_exgp_fina_capt_margin = 0;
    SET v_tmp_exgp_loan_capt_margin = 0;
    SET v_tmp_asac_fina_capt_margin = 0;
    SET v_tmp_asac_loan_capt_margin = 0;
    SET v_loan_sell_get_capital = 0;
    SET v_record_count = 0;
    SET v_comm_avail_qty = 0;
    SET v_trade_avail_qty = 0;
    SET v_static_avail_qty = 0;
    SET v_avail_qty = 0;
    SET v_tmp_debt_qty = 0;

    
    label_pro:BEGIN
    

    /* set @港股通资金可用日期# =cast(substring(@资产账户业务控制配置串#,21,1) as SIGNED); */
    set v_hk_cash_avail_date_type =cast(substring(v_asac_busi_config_str,21,1) as SIGNED);

    /* if @指令方向#=《指令方向-买入》   then */
    if v_comm_dir=1   then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询交易组业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryExgpBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_exch_group_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询交易组业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;
            end if;

            /* set @可用金额# = @可用金额# -GREATEST(@负债融券卖出成交金额# - @融券归还成交金额# - @融券归还订单金额#-@融券归还指令金额#,0) ; */
            set v_avail_amt = v_avail_amt -GREATEST(v_debt_loan_sell_strike_amt - v_loan_return_strike_amt - v_loan_return_order_amt-v_loan_return_comm_amt,0) ;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @交易组可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt;
            end if;

            /* set @可用金额# =@可用金额# -GREATEST(@负债融券卖出成交金额# - @融券归还成交金额# - @融券归还订单金额#,0) ; */
            set v_avail_amt =v_avail_amt -GREATEST(v_debt_loan_sell_strike_amt - v_loan_return_strike_amt - v_loan_return_order_amt,0) ;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#)  * @卖出参考汇率#,2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee)  * v_sell_ref_rate,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询资产账户业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryAsacBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询资产账户业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;
            end if;

            /* set @可用金额# = @可用金额# -GREATEST(@负债融券卖出成交金额# - @融券归还成交金额# - @融券归还订单金额#-@融券归还指令金额#,0) ; */
            set v_avail_amt = v_avail_amt -GREATEST(v_debt_loan_sell_strike_amt - v_loan_return_strike_amt - v_loan_return_order_amt-v_loan_return_comm_amt,0) ;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][604][@可用金额#,@指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.604";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,1,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt;
            end if;

            /* set @可用金额# = @可用金额# -GREATEST(@负债融券卖出成交金额# - @融券归还成交金额# - @融券归还订单金额#,0) ; */
            set v_avail_amt = v_avail_amt -GREATEST(v_debt_loan_sell_strike_amt - v_loan_return_strike_amt - v_loan_return_order_amt,0) ;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#) * @卖出参考汇率#,2) >@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee) * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.610";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif @指令方向# = 《指令方向-融资买入》  then */
    elseif v_comm_dir = 5  then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询交易组业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryExgpBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_exch_group_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询交易组业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @临时_交易组融资占用保证金# = @交易组融资占用保证金#+@交易组融资指令占用保证金#+@交易组融资交易占用保证金#; */
        set v_tmp_exgp_fina_capt_margin = v_exgp_fina_capt_margin+v_exgp_fina_comm_capt_margin+v_exgp_fina_order_capt_margin;

        /* set @临时_交易组融券占用保证金# = @交易组融券占用保证金#+@交易组融券指令占用保证金#+@交易组融券交易占用保证金#; */
        set v_tmp_exgp_loan_capt_margin = v_exgp_loan_capt_margin+v_exgp_loan_comm_capt_margin+v_exgp_loan_order_capt_margin;

        /* [检查报错返回][@融资额度上限#> 0 and Round((@指令金额#*@融资保证金比例# + @临时_交易组融资占用保证金#),2) > @融资额度上限# ][609][@指令金额#, @融资保证金比例#,@临时_交易组融资占用保证金#,@融资额度上限#,@交易组融资指令占用保证金#,@交易组融资交易占用保证金#,@交易组融资占用保证金#] */
        if v_fina_limit_max> 0 and Round((v_comm_amt*v_fina_marg_ratio + v_tmp_exgp_fina_capt_margin),2) > v_fina_limit_max  then
            
            SET v_error_code = "tdsecuA.3.96.609";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,","," 融资保证金比例=", v_fina_marg_ratio,",","临时_交易组融资占用保证金=",v_tmp_exgp_fina_capt_margin,",","融资额度上限=",v_fina_limit_max,",","交易组融资指令占用保证金=",v_exgp_fina_comm_capt_margin,",","交易组融资交易占用保证金=",v_exgp_fina_order_capt_margin,",","交易组融资占用保证金=",v_exgp_fina_capt_margin),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令金额=",v_comm_amt,","," 融资保证金比例=", v_fina_marg_ratio,",","临时_交易组融资占用保证金=",v_tmp_exgp_fina_capt_margin,",","融资额度上限=",v_fina_limit_max,",","交易组融资指令占用保证金=",v_exgp_fina_comm_capt_margin,",","交易组融资交易占用保证金=",v_exgp_fina_order_capt_margin,",","交易组融资占用保证金=",v_exgp_fina_capt_margin);
            end if;
            leave label_pro;
        end if;


        /* set @临时_资产账户融资占用保证金# = @资产账户融资占用保证金# +@资产账户融资指令占用保证金#+@资产账户融资交易占用保证金#; */
        set v_tmp_asac_fina_capt_margin = v_asac_fina_capt_margin +v_asac_fina_comm_capt_margin+v_asac_fina_order_capt_margin;

        /* set @临时_资产账户融券占用保证金# = @资产账户融券占用保证金# +@资产账户融券指令占用保证金#+@资产账户融券交易占用保证金#; */
        set v_tmp_asac_loan_capt_margin = v_asac_loan_capt_margin +v_asac_loan_comm_capt_margin+v_asac_loan_order_capt_margin;

        /* [检查报错返回][@融资额度上限#> 0 and Round((@指令金额#*@融资保证金比例# + @临时_资产账户融资占用保证金#),2) > @融资额度上限# ][609][@指令金额#, @融资保证金比例#,@临时_资产账户融资占用保证金#,@融资额度上限#,@资产账户融资指令占用保证金#,@资产账户融资交易占用保证金#,@资产账户融资占用保证金#] */
        if v_fina_limit_max> 0 and Round((v_comm_amt*v_fina_marg_ratio + v_tmp_asac_fina_capt_margin),2) > v_fina_limit_max  then
            
            SET v_error_code = "tdsecuA.3.96.609";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,","," 融资保证金比例=", v_fina_marg_ratio,",","临时_资产账户融资占用保证金=",v_tmp_asac_fina_capt_margin,",","融资额度上限=",v_fina_limit_max,",","资产账户融资指令占用保证金=",v_asac_fina_comm_capt_margin,",","资产账户融资交易占用保证金=",v_asac_fina_order_capt_margin,",","资产账户融资占用保证金=",v_asac_fina_capt_margin),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令金额=",v_comm_amt,","," 融资保证金比例=", v_fina_marg_ratio,",","临时_资产账户融资占用保证金=",v_tmp_asac_fina_capt_margin,",","融资额度上限=",v_fina_limit_max,",","资产账户融资指令占用保证金=",v_asac_fina_comm_capt_margin,",","资产账户融资交易占用保证金=",v_asac_fina_order_capt_margin,",","资产账户融资占用保证金=",v_asac_fina_capt_margin);
            end if;
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then
            #利息费用考虑

            /* set @融券卖出所得资金# = GREATEST(@交易组融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_exgp_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @交易组可用金额# + @指令端可用金额# +@交易组冲抵折算保证金# + @交易组融资折算盈亏# + @交易组融券折算盈亏# -@融券卖出所得资金#- @临时_交易组融资占用保证金# - @临时_交易组融券占用保证金#-@交易组融资利息# - @交易组融券利息#; */
            set v_avail_amt = v_exgp_avail_amt + v_comm_avail_amt +v_exgp_converted_margin + v_exgp_fina_converted_pandl + v_exgp_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_exgp_fina_capt_margin - v_tmp_exgp_loan_capt_margin-v_exgp_fina_interest - v_exgp_loan_interest;

            /* [检查报错返回][Round(@指令金额#*@融资保证金比例#,2)>@可用金额#][605][@指令金额#,@可用金额#] */
            if Round(v_comm_amt*v_fina_marg_ratio,2)>v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,",","可用金额=",v_avail_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令金额=",v_comm_amt,",","可用金额=",v_avail_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then
            #利息费用考虑

            /* set @融券卖出所得资金# = GREATEST(@交易组融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_exgp_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @交易组可用金额# + @交易端可用金额# +@交易组冲抵折算保证金# + @交易组融资折算盈亏# + @交易组融券折算盈亏# -@融券卖出所得资金#- @临时_交易组融资占用保证金# - @临时_交易组融券占用保证金#-@交易组融资利息# - @交易组融券利息#; */
            set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt +v_exgp_converted_margin + v_exgp_fina_converted_pandl + v_exgp_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_exgp_fina_capt_margin - v_tmp_exgp_loan_capt_margin-v_exgp_fina_interest - v_exgp_loan_interest;

            /* [检查报错返回][Round((@指令金额# + @全部费用#)*@融资保证金比例#,2) > @可用金额# ][609][@可用金额#, @指令金额#,@全部费用#] */
            if Round((v_comm_amt + v_all_fee)*v_fina_marg_ratio,2) > v_avail_amt  then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询资产账户业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryAsacBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询资产账户业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* set @融券卖出所得资金# = GREATEST(@资产账户融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_asac_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#  +@资产账户冲抵折算保证金# + @资产账户融资折算盈亏# + @资产账户融券折算盈亏# -@融券卖出所得资金#- @临时_资产账户融资占用保证金# - @临时_资产账户融券占用保证金#-@资产账户融资利息# - @资产账户融券利息#; */
            set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt  +v_asac_converted_margin + v_asac_fina_converted_pandl + v_asac_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_asac_fina_capt_margin - v_tmp_asac_loan_capt_margin-v_asac_fina_interest - v_asac_loan_interest;

            /* [检查报错返回][Round(@指令金额# *@融资保证金比例#,2) >@可用金额#][603][@可用金额#, @指令金额#] */
            if Round(v_comm_amt *v_fina_marg_ratio,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* set @融券卖出所得资金# = GREATEST(@资产账户融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_asac_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#  +@资产账户冲抵折算保证金# + @资产账户融资折算盈亏# + @资产账户融券折算盈亏# -@融券卖出所得资金#- @临时_资产账户融资占用保证金# - @临时_资产账户融券占用保证金#-@资产账户融资利息# - @资产账户融券利息#; */
            set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt  +v_asac_converted_margin + v_asac_fina_converted_pandl + v_asac_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_asac_fina_capt_margin - v_tmp_asac_loan_capt_margin-v_asac_fina_interest - v_asac_loan_interest;

            /* [检查报错返回][Round((@指令金额# + @全部费用#)*@融资保证金比例#,2) > @可用金额#][609][@可用金额#, @指令金额#,@全部费用#] */
            if Round((v_comm_amt + v_all_fee)*v_fina_marg_ratio,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif  @指令方向# = 《指令方向-融券卖出》  then */
    elseif  v_comm_dir = 6  then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询交易组业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryExgpBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_exch_group_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询交易组业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* set @临时_交易组融券占用保证金# = @交易组融券占用保证金#+@交易组融券指令占用保证金#+@交易组融券交易占用保证金#; */
        set v_tmp_exgp_loan_capt_margin = v_exgp_loan_capt_margin+v_exgp_loan_comm_capt_margin+v_exgp_loan_order_capt_margin;

        /* set @临时_交易组融资占用保证金# = @交易组融资占用保证金#+@交易组融资指令占用保证金#+@交易组融资交易占用保证金#; */
        set v_tmp_exgp_fina_capt_margin = v_exgp_fina_capt_margin+v_exgp_fina_comm_capt_margin+v_exgp_fina_order_capt_margin;

        /* [检查报错返回][@融券额度上限#> 0 and Round((@指令金额#*@融券保证金比例# + @临时_交易组融券占用保证金#),2) > @融券额度上限# ][609][@指令金额#, @融券保证金比例#,@临时_交易组融券占用保证金#,@融券额度上限#,@交易组融券指令占用保证金#,@交易组融券交易占用保证金#,@交易组融券占用保证金#] */
        if v_loan_limit_max> 0 and Round((v_comm_amt*v_secu_loan_marg_ratio + v_tmp_exgp_loan_capt_margin),2) > v_loan_limit_max  then
            
            SET v_error_code = "tdsecuA.3.96.609";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,","," 融券保证金比例=", v_secu_loan_marg_ratio,",","临时_交易组融券占用保证金=",v_tmp_exgp_loan_capt_margin,",","融券额度上限=",v_loan_limit_max,",","交易组融券指令占用保证金=",v_exgp_loan_comm_capt_margin,",","交易组融券交易占用保证金=",v_exgp_loan_order_capt_margin,",","交易组融券占用保证金=",v_exgp_loan_capt_margin),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令金额=",v_comm_amt,","," 融券保证金比例=", v_secu_loan_marg_ratio,",","临时_交易组融券占用保证金=",v_tmp_exgp_loan_capt_margin,",","融券额度上限=",v_loan_limit_max,",","交易组融券指令占用保证金=",v_exgp_loan_comm_capt_margin,",","交易组融券交易占用保证金=",v_exgp_loan_order_capt_margin,",","交易组融券占用保证金=",v_exgp_loan_capt_margin);
            end if;
            leave label_pro;
        end if;


        /* set @临时_资产账户融券占用保证金# = @资产账户融券占用保证金# +@资产账户融券指令占用保证金#+@资产账户融券交易占用保证金#; */
        set v_tmp_asac_loan_capt_margin = v_asac_loan_capt_margin +v_asac_loan_comm_capt_margin+v_asac_loan_order_capt_margin;

        /* set @临时_资产账户融资占用保证金# = @资产账户融资占用保证金# +@资产账户融资指令占用保证金#+@资产账户融资交易占用保证金#; */
        set v_tmp_asac_fina_capt_margin = v_asac_fina_capt_margin +v_asac_fina_comm_capt_margin+v_asac_fina_order_capt_margin;

        /* [检查报错返回][@融券额度上限#> 0 and Round((@指令金额#*@融券保证金比例# + @临时_资产账户融券占用保证金#),2) > @融券额度上限# ][609][@指令金额#, @融券保证金比例#,@临时_资产账户融券占用保证金#,@融券额度上限#,@资产账户融券指令占用保证金#,@资产账户融券交易占用保证金#,@资产账户融券占用保证金#] */
        if v_loan_limit_max> 0 and Round((v_comm_amt*v_secu_loan_marg_ratio + v_tmp_asac_loan_capt_margin),2) > v_loan_limit_max  then
            
            SET v_error_code = "tdsecuA.3.96.609";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,","," 融券保证金比例=", v_secu_loan_marg_ratio,",","临时_资产账户融券占用保证金=",v_tmp_asac_loan_capt_margin,",","融券额度上限=",v_loan_limit_max,",","资产账户融券指令占用保证金=",v_asac_loan_comm_capt_margin,",","资产账户融券交易占用保证金=",v_asac_loan_order_capt_margin,",","资产账户融券占用保证金=",v_asac_loan_capt_margin),"#",v_mysql_message);
            else
                SET v_error_info = concat("指令金额=",v_comm_amt,","," 融券保证金比例=", v_secu_loan_marg_ratio,",","临时_资产账户融券占用保证金=",v_tmp_asac_loan_capt_margin,",","融券额度上限=",v_loan_limit_max,",","资产账户融券指令占用保证金=",v_asac_loan_comm_capt_margin,",","资产账户融券交易占用保证金=",v_asac_loan_order_capt_margin,",","资产账户融券占用保证金=",v_asac_loan_capt_margin);
            end if;
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then
            #利息费用考虑

            /* set @融券卖出所得资金# = GREATEST(@交易组融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_exgp_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @交易组可用金额# + @指令端可用金额# +@交易组冲抵折算保证金# + @交易组融资折算盈亏# + @交易组融券折算盈亏# -@融券卖出所得资金#- @临时_交易组融资占用保证金# - @临时_交易组融券占用保证金#-@交易组融资利息# - @交易组融券利息#; */
            set v_avail_amt = v_exgp_avail_amt + v_comm_avail_amt +v_exgp_converted_margin + v_exgp_fina_converted_pandl + v_exgp_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_exgp_fina_capt_margin - v_tmp_exgp_loan_capt_margin-v_exgp_fina_interest - v_exgp_loan_interest;

            /* [检查报错返回][Round(@指令金额#*@融券保证金比例#,2)>@可用金额#][605][@指令金额#,@可用金额#] */
            if Round(v_comm_amt*v_secu_loan_marg_ratio,2)>v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令金额=",v_comm_amt,",","可用金额=",v_avail_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令金额=",v_comm_amt,",","可用金额=",v_avail_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then
            #利息费用考虑

            /* set @融券卖出所得资金# = GREATEST(@交易组融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_exgp_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @交易组可用金额# + @交易端可用金额# +@交易组冲抵折算保证金# + @交易组融资折算盈亏# + @交易组融券折算盈亏# -@融券卖出所得资金#- @临时_交易组融资占用保证金# - @临时_交易组融券占用保证金#-@交易组融资利息# - @交易组融券利息#; */
            set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt +v_exgp_converted_margin + v_exgp_fina_converted_pandl + v_exgp_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_exgp_fina_capt_margin - v_tmp_exgp_loan_capt_margin-v_exgp_fina_interest - v_exgp_loan_interest;

            /* [检查报错返回][Round((@指令金额# + @全部费用#)*@融券保证金比例#,2) > @可用金额# ][609][@可用金额#, @指令金额#,@全部费用#] */
            if Round((v_comm_amt + v_all_fee)*v_secu_loan_marg_ratio,2) > v_avail_amt  then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_查询资产账户业务资金负债】*/
        call db_tdsecu.pra_tdseac_QueryAsacBusiCapitalDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_error_code,
            v_error_info,
            v_row_id,
            v_debt_loan_sell_strike_amt,
            v_debt_strike_fee,
            v_loan_return_strike_amt,
            v_loan_return_order_amt,
            v_loan_return_comm_amt,
            v_return_strike_fee,
            v_update_times);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_查询资产账户业务资金负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* set @融券卖出所得资金# = GREATEST(@资产账户融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_asac_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#  +@资产账户冲抵折算保证金# + @资产账户融资折算盈亏# + @资产账户融券折算盈亏# -@融券卖出所得资金#- @临时_资产账户融资占用保证金# - @临时_资产账户融券占用保证金#-@资产账户融资利息# - @资产账户融券利息#; */
            set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt  +v_asac_converted_margin + v_asac_fina_converted_pandl + v_asac_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_asac_fina_capt_margin - v_tmp_asac_loan_capt_margin-v_asac_fina_interest - v_asac_loan_interest;

            /* [检查报错返回][Round(@指令金额#*@融券保证金比例#,2) >@可用金额#][603][@可用金额#, @指令金额#] */
            if Round(v_comm_amt*v_secu_loan_marg_ratio,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* set @融券卖出所得资金# = GREATEST(@资产账户融券卖出金额#+@负债融券卖出成交金额#-@融券归还成交金额#,0); */
            set v_loan_sell_get_capital = GREATEST(v_asac_loan_sell_amt+v_debt_loan_sell_strike_amt-v_loan_return_strike_amt,0);

            /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#  +@资产账户冲抵折算保证金# + @资产账户融资折算盈亏# + @资产账户融券折算盈亏# -@融券卖出所得资金#- @临时_资产账户融资占用保证金# - @临时_资产账户融券占用保证金#-@资产账户融资利息# - @资产账户融券利息#; */
            set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt  +v_asac_converted_margin + v_asac_fina_converted_pandl + v_asac_loan_converted_pandl -v_loan_sell_get_capital- v_tmp_asac_fina_capt_margin - v_tmp_asac_loan_capt_margin-v_asac_fina_interest - v_asac_loan_interest;

            /* [检查报错返回][Round((@指令金额# + @全部费用#)*@融券保证金比例#,2) > @可用金额#][609][@可用金额#, @指令金额#,@全部费用#] */
            if Round((v_comm_amt + v_all_fee)*v_secu_loan_marg_ratio,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令金额=", v_comm_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif @指令方向# = 《指令方向-卖出》 or  @指令方向# = 《指令方向-卖券还款》  then */
    elseif v_comm_dir = 2 or  v_comm_dir = 7  then
        #判断是否有融资负债

        /* if @指令方向# = 《指令方向-卖券还款》 then */
        if v_comm_dir = 7 then

            /* [获取表记录数量][交易证券_账户_交易组负债明细表][@记录个数#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {资产账户编号} = @资产账户编号# and {交易组编号} = @交易组编号# and {负债类型} = 《负债类型-融资》 and {负债状态}=《负债状态-未归还》 ] */
            select count(1) into v_record_count from db_tdsecu.tb_tdseac_exgp_debtjour where co_no = v_co_no and pd_no = v_pd_no and asset_acco_no = v_asset_acco_no and exch_group_no = v_exch_group_no and debt_type = 1 and debt_status=1 ;


            /* [检查报错返回][@交易组负债融资买入成交金额#=0 and @记录个数#=0][605][@交易组负债融资买入成交金额#,@记录个数#] */
            if v_exgp_debt_fina_buy_strike_amt=0 and v_record_count=0 then
                
                SET v_error_code = "tdsecuA.3.96.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("交易组负债融资买入成交金额=",v_exgp_debt_fina_buy_strike_amt,",","记录个数=",v_record_count),"#",v_mysql_message);
                else
                    SET v_error_info = concat("交易组负债融资买入成交金额=",v_exgp_debt_fina_buy_strike_amt,",","记录个数=",v_record_count);
                end if;
                leave label_pro;
            end if;

        end if;

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.96.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@交易组可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_exgp_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][605][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.96.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@交易组可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_exgp_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][611][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.96.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.96.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@资产账户可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_asac_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][606][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.96.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@资产账户可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_asac_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][612][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.96.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

    /* elseif @指令方向# = 《指令方向-买券还券》 then */
    elseif v_comm_dir = 8 then
        #先判断是否存在这只票的负债，例如欠350，只能还400，不能多还

        /* select sum({融券归还成交数量} - {融券归还订单数量} - {融券归还指令数量}) into @负债数量# from ~交易证券_账户_交易组业务持仓负债表^ where {交易组编号} = @交易组编号# and {证券代码编号} = @证券代码编号# and {负债类型} = 《负债类型-融券》; */
        select sum(loan_return_strike_qty - loan_return_order_qty - loan_return_comm_qty) into v_debt_qty from db_tdsecu.tb_tdseac_exgp_busi_posi_debt where exch_group_no = v_exch_group_no and stock_code_no = v_stock_code_no and debt_type = 2;

        /* set @负债数量# = ifnull(@负债数量#,0); */
        set v_debt_qty = ifnull(v_debt_qty,0);

        /* set @临时_负债数量# = @负债数量#; */
        set v_tmp_debt_qty = v_debt_qty;

        /* set @负债数量# = round( (@负债数量# + @交易组负债融券卖出成交数量#) /100)*100; */
        set v_debt_qty = round( (v_debt_qty + v_exgp_debt_loan_sell_strike_qty) /100)*100;

        /* if @指令数量# > 0 then */
        if v_comm_qty > 0 then

            /* [检查报错返回][@指令数量#>@负债数量# or @负债数量#=0][611][@指令数量#,@负债数量#] */
            if v_comm_qty>v_debt_qty or v_debt_qty=0 then
                
                SET v_error_code = "tdsecuA.3.96.611";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","负债数量=",v_debt_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令数量=",v_comm_qty,",","负债数量=",v_debt_qty);
                end if;
                leave label_pro;
            end if;

        end if;

        /* set @负债数量# = @临时_负债数量#; */
        set v_debt_qty = v_tmp_debt_qty;

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
            set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;

            /* [检查报错返回][Round(@指令冻结金额#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* set @可用金额# = @交易组可用金额# + @交易端可用金额#; */
            set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#),2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee),2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
            set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;

            /* [检查报错返回][Round(@指令冻结金额#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#; */
            set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#),2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee),2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif @指令方向#=《指令方向-直接还款》 then */
    elseif v_comm_dir=14 then

        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @交易组可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#)  * @卖出参考汇率#,2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee)  * v_sell_ref_rate,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][604][@可用金额#,@指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.604";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,1,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#) * @卖出参考汇率#,2) >@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee) * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.610";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif @指令方向#=《指令方向-直接还款》 then */
    elseif v_comm_dir=14 then
        #判断有没有融资负债

        /* [获取表记录数量][交易证券_账户_交易组负债明细表][@记录个数#][{机构编号} = @机构编号# and {产品编号} = @产品编号# and {资产账户编号} = @资产账户编号# and {交易组编号} = @交易组编号# and {负债类型} = 《负债类型-融资》 and {负债状态}=《负债状态-未归还》 ] */
        select count(1) into v_record_count from db_tdsecu.tb_tdseac_exgp_debtjour where co_no = v_co_no and pd_no = v_pd_no and asset_acco_no = v_asset_acco_no and exch_group_no = v_exch_group_no and debt_type = 1 and debt_status=1 ;


        /* [检查报错返回][@交易组负债融资买入成交金额#=0 and @记录个数#=0][605][@交易组负债融资买入成交金额#,@记录个数#] */
        if v_exgp_debt_fina_buy_strike_amt=0 and v_record_count=0 then
            
            SET v_error_code = "tdsecuA.3.96.605";
            if v_mysql_message <> "" then
                SET v_error_info = CONCAT(concat("交易组负债融资买入成交金额=",v_exgp_debt_fina_buy_strike_amt,",","记录个数=",v_record_count),"#",v_mysql_message);
            else
                SET v_error_info = concat("交易组负债融资买入成交金额=",v_exgp_debt_fina_buy_strike_amt,",","记录个数=",v_record_count);
            end if;
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_计算交易组资金可用】*/
        call db_tdsecu.pra_tdseac_CalcExgpCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@交易组业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_exgp_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深指令可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@交易组可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_exgp_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][603][@可用金额#, @指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.603";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,3,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,3,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                @交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额# + 
                least(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt + 
                                    least(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@交易组可用金额#+@沪深交易可用金额# + 
                least(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#) + 
                least(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@交易组T日当日港股卖出金额#-@交易组T日当日港股买入金额#)+@交易组T1日当日港股卖出金额#-@交易组T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_exgp_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_exgp_T_hk_sell_total_amt-v_exgp_T_hk_buy_total_amt)+v_exgp_T1_hk_sell_total_amt-v_exgp_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @交易组可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_exgp_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#)  * @卖出参考汇率#,2) > @可用金额#][609][@可用金额#, @指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee)  * v_sell_ref_rate,2) > v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.609";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,","," 指令冻结金额=", v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

        /* 调用【原子_交易证券_账户_计算资产账户资金可用】*/
        call db_tdsecu.pra_tdseac_CalcAsacCashAvail(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_co_no,
            v_pd_no,
            v_asset_acco_no,
            v_crncy_type,
            v_exch_crncy_type,
            v_buy_ref_rate,
            v_sell_ref_rate,
            v_capit_reback_days,
            v_error_code,
            v_error_info,
            v_shsz_comm_avail_amt,
            v_hk_comm_avail_amt,
            v_shsz_trade_avail_amt,
            v_hk_trade_avail_amt,
            v_comm_avail_amt,
            v_trade_avail_amt,
            v_static_avail_amt);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.96.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户资金可用出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if substring(@资产账户业务控制配置串#,1,1) <> 《指令资金校验-否》 then */
        if substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深指令可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股指令可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_comm_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_comm_avail_amt);
                end if;
            else

                /* set @可用金额#=@资产账户可用金额# + @指令端可用金额#; */
                set v_avail_amt=v_asac_avail_amt + v_comm_avail_amt;
            end if;

            /* [检查报错返回][Round(@指令冻结金额# * @卖出参考汇率#,2) >@可用金额#][604][@可用金额#,@指令冻结金额#] */
            if Round(v_comm_frozen_amt * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.604";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt);
                end if;
                leave label_pro;
            end if;

        end if;
        #如果设置了自动审批，并且需要交易资金校验，则需要一并检查交易相关数据

        /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,1,1) <> 《交易资金校验-否》 then */
        if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,1,1) <> 2 then

            /* if @市场编号# = 《市场编号-上海证券交易所》 or @市场编号# = 《市场编号-深圳证券交易所》 then */
            if v_exch_no = 1 or v_exch_no = 2 then

                /* if @港股通资金可用日期# = 《港股通资金可用日期-T+2日日初可用》 then */
                if v_hk_cash_avail_date_type = 4 then

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                @资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额# + 
                least(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt + 
                                    least(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                else

                    /* set @可用金额# =@资产账户可用金额#+@沪深交易可用金额# + 
                least(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#) + 
                least(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#)+
                least(0,greatest(0,greatest(0,@资产账户T日当日港股卖出金额#-@资产账户T日当日港股买入金额#)+@资产账户T1日当日港股卖出金额#-@资产账户T1日当日港股买入金额#) + @港股交易可用金额#); */
                    set v_avail_amt =v_asac_avail_amt+v_shsz_trade_avail_amt + 
                                    least(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt) + 
                                    least(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt)+
                                    least(0,greatest(0,greatest(0,v_asac_T_hk_sell_total_amt-v_asac_T_hk_buy_total_amt)+v_asac_T1_hk_sell_total_amt-v_asac_T1_hk_buy_total_amt) + v_hk_trade_avail_amt);
                end if;
            else

                /* set @可用金额# = @资产账户可用金额# + @交易端可用金额#; */
                set v_avail_amt = v_asac_avail_amt + v_trade_avail_amt;
            end if;

            /* [检查报错返回][Round((@指令冻结金额# + @全部费用#) * @卖出参考汇率#,2) >@可用金额#][610][@可用金额#,@指令冻结金额#,@全部费用#] */
            if Round((v_comm_frozen_amt + v_all_fee) * v_sell_ref_rate,2) >v_avail_amt then
                
                SET v_error_code = "tdsecuA.3.96.610";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用金额=",v_avail_amt,",","指令冻结金额=",v_comm_frozen_amt,",","全部费用=",v_all_fee);
                end if;
                leave label_pro;
            end if;

        end if;

    /* elseif @指令方向#=《指令方向-直接还券》 then */
    elseif v_comm_dir=15 then
        #先判断是否存在这只票的负债，例如欠350，只能还400，不能多还

        /* select sum({融券归还成交数量} - {融券归还订单数量} - {融券归还指令数量}) into @负债数量# from ~交易证券_账户_交易组业务持仓负债表^ where {交易组编号} = @交易组编号# and {证券代码编号} = @证券代码编号# and {负债类型} = 《负债类型-融券》; */
        select sum(loan_return_strike_qty - loan_return_order_qty - loan_return_comm_qty) into v_debt_qty from db_tdsecu.tb_tdseac_exgp_busi_posi_debt where exch_group_no = v_exch_group_no and stock_code_no = v_stock_code_no and debt_type = 2;

        /* set @负债数量# = ifnull(@负债数量#,0); */
        set v_debt_qty = ifnull(v_debt_qty,0);

        /* set @临时_负债数量# = @负债数量#; */
        set v_tmp_debt_qty = v_debt_qty;

        /* set @负债数量# = round( (@负债数量# + @交易组负债融券卖出成交数量#) /100)*100; */
        set v_debt_qty = round( (v_debt_qty + v_exgp_debt_loan_sell_strike_qty) /100)*100;

        /* if @指令数量# > 0 then */
        if v_comm_qty > 0 then

            /* [检查报错返回][@指令数量#>@负债数量# or @负债数量#=0][611][@指令数量#,@负债数量#] */
            if v_comm_qty>v_debt_qty or v_debt_qty=0 then
                
                SET v_error_code = "tdsecuA.3.96.611";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("指令数量=",v_comm_qty,",","负债数量=",v_debt_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("指令数量=",v_comm_qty,",","负债数量=",v_debt_qty);
                end if;
                leave label_pro;
            end if;

        end if;

        /* set @负债数量# = @临时_负债数量#; */
        set v_debt_qty = v_tmp_debt_qty;

        /* if substring(@交易组业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_exgp_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算交易组持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcExgpPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_exch_group_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.96.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算交易组持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@交易组可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_exgp_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][605][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.96.605";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@交易组业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_exgp_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@交易组可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_exgp_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][611][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.96.611";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;

        /* if substring(@资产账户业务控制配置串#,2,1) <> 《指令持仓校验-否》 then */
        if substring(v_asac_busi_config_str,2,1) <> 2 then

            /* 调用【原子_交易证券_账户_计算资产账户持仓可用】*/
            call db_tdsecu.pra_tdseac_CalcAsacPosiAvail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_pd_no,
                v_asset_acco_no,
                v_exch_no,
                v_stock_acco_no,
                v_stock_code_no,
                v_posi_reback_days,
                v_error_code,
                v_error_info,
                v_comm_avail_qty,
                v_trade_avail_qty,
                v_static_avail_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.96.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_计算资产账户持仓可用出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;


            /* set @可用数量#=@资产账户可用数量# + @指令端可用数量#; */
            set v_avail_qty=v_asac_avail_qty + v_comm_avail_qty;

            /* [检查报错返回][@指令数量#>@可用数量#][606][@可用数量#,@指令数量#] */
            if v_comm_qty>v_avail_qty then
                
                SET v_error_code = "tdsecuA.3.96.606";
                if v_mysql_message <> "" then
                    SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                else
                    SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                end if;
                leave label_pro;
            end if;

            #如果设置了自动审批，并且需要交易持仓校验，则需要一并检查交易相关数据

            /* if substring(@资产账户业务控制配置串#,5,1)=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,6,1)=《审批通过自动下单-是》=《指令审批设置-自动审批》 and substring(@资产账户业务控制配置串#,4,1) <> 《交易持仓校验-否》 then */
            if substring(v_asac_busi_config_str,5,1)=1 and substring(v_asac_busi_config_str,6,1)=1=1 and substring(v_asac_busi_config_str,4,1) <> 2 then

                /* set @可用数量#=@资产账户可用数量# + @交易端可用数量#; */
                set v_avail_qty=v_asac_avail_qty + v_trade_avail_qty;

                /* [检查报错返回][@指令数量#>@可用数量#][612][@可用数量#,@指令数量#] */
                if v_comm_qty>v_avail_qty then
                    
                    SET v_error_code = "tdsecuA.3.96.612";
                    if v_mysql_message <> "" then
                        SET v_error_info = CONCAT(concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty),"#",v_mysql_message);
                    else
                        SET v_error_info = concat("可用数量=",v_avail_qty,",","指令数量=",v_comm_qty);
                    end if;
                    leave label_pro;
                end if;

            end if;
        end if;
    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_exist_debt_flag = v_exist_debt_flag;
    SET p_debt_qty = v_debt_qty;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_撤销融资融券指令订单
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CancelFinaLoanCommOrder;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CancelFinaLoanCommOrder(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_pass_no int,
    IN p_out_acco varchar(32),
    IN p_exch_crncy_type varchar(3),
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_acco varchar(16),
    IN p_stock_code_no int,
    IN p_stock_code varchar(6),
    IN p_target_code_no int,
    IN p_trade_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_id bigint,
    IN p_external_no bigint,
    IN p_order_batch_no int,
    IN p_order_date int,
    IN p_report_no varchar(32),
    IN p_order_id bigint,
    IN p_order_dir int,
    IN p_order_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_order_status varchar(2),
    IN p_order_frozen_amt decimal(18,4),
    IN p_order_frozen_qty decimal(18,2),
    IN p_impawn_ratio decimal(18,12),
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_wtdraw_batch_no int,
    IN p_wtdraw_remark varchar(255),
    IN p_order_oper_way varchar(2),
    IN p_busi_opor_no int,
    IN p_is_record_jour int,
    IN p_target_stock_code_no int,
    IN p_trade_acco varchar(32),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_frozen_amt decimal(18,4),
    OUT p_wtdraw_status varchar(2),
    OUT p_wtdraw_qty decimal(18,2),
    OUT p_wtdraw_id bigint
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_acco varchar(16);
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_id bigint;
    declare v_external_no bigint;
    declare v_order_batch_no int;
    declare v_order_date int;
    declare v_report_no varchar(32);
    declare v_order_id bigint;
    declare v_order_dir int;
    declare v_order_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_order_status varchar(2);
    declare v_order_frozen_amt decimal(18,4);
    declare v_order_frozen_qty decimal(18,2);
    declare v_impawn_ratio decimal(18,12);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_wtdraw_batch_no int;
    declare v_wtdraw_remark varchar(255);
    declare v_order_oper_way varchar(2);
    declare v_busi_opor_no int;
    declare v_is_record_jour int;
    declare v_target_stock_code_no int;
    declare v_trade_acco varchar(32);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_frozen_amt decimal(18,4);
    declare v_wtdraw_status varchar(2);
    declare v_wtdraw_qty decimal(18,2);
    declare v_wtdraw_id bigint;
    declare v_open_close_permission int;
    declare v_invest_type int;
    declare v_pass_status varchar(2);
    declare v_wtdraw_date int;
    declare v_wtdraw_time int;
    declare v_comm_cancel_qty decimal(18,2);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_comm_amt decimal(18,4);
    declare v_comm_qty decimal(18,2);
    declare v_calc_dir int;
    declare v_comm_occur_amt decimal(18,4);
    declare v_comm_occur_qty decimal(18,2);
    declare v_total_strike_qty decimal(18,2);
    declare v_all_wtdraw_qty decimal(18,2);
    declare v_trade_occur_amt decimal(18,4);
    declare v_trade_occur_qty decimal(18,2);
    declare v_avail_cal_flag int;
    declare v_combo_code varchar(32);
    declare v_combo_posi_id bigint;
    declare v_debt_qty decimal(18,2);
    declare v_open_posi_date int;
    declare v_debt_type int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_pass_no = p_pass_no;
    SET v_out_acco = p_out_acco;
    SET v_exch_crncy_type = p_exch_crncy_type;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_acco = p_stock_acco;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_code = p_stock_code;
    SET v_target_code_no = p_target_code_no;
    SET v_trade_code_no = p_trade_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_id = p_comm_id;
    SET v_external_no = p_external_no;
    SET v_order_batch_no = p_order_batch_no;
    SET v_order_date = p_order_date;
    SET v_report_no = p_report_no;
    SET v_order_id = p_order_id;
    SET v_order_dir = p_order_dir;
    SET v_order_price = p_order_price;
    SET v_order_qty = p_order_qty;
    SET v_order_status = p_order_status;
    SET v_order_frozen_amt = p_order_frozen_amt;
    SET v_order_frozen_qty = p_order_frozen_qty;
    SET v_impawn_ratio = p_impawn_ratio;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_wtdraw_batch_no = p_wtdraw_batch_no;
    SET v_wtdraw_remark = p_wtdraw_remark;
    SET v_order_oper_way = p_order_oper_way;
    SET v_busi_opor_no = p_busi_opor_no;
    SET v_is_record_jour = p_is_record_jour;
    SET v_target_stock_code_no = p_target_stock_code_no;
    SET v_trade_acco = p_trade_acco;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_frozen_amt = 0;
    SET v_wtdraw_status = "0";
    SET v_wtdraw_qty = 0;
    SET v_wtdraw_id = 0;
    SET v_open_close_permission = 0;
    SET v_invest_type = 0;
    SET v_pass_status = "0";
    SET v_wtdraw_date = date_format(curdate(),'%Y%m%d');
    SET v_wtdraw_time = date_format(curtime(),'%H%i%s');
    SET v_comm_cancel_qty = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_dir = 0;
    SET v_comm_amt = 0;
    SET v_comm_qty = 0;
    SET v_calc_dir = 1;
    SET v_comm_occur_amt = 0;
    SET v_comm_occur_qty = 0;
    SET v_total_strike_qty = 0;
    SET v_all_wtdraw_qty = 0;
    SET v_trade_occur_amt = 0;
    SET v_trade_occur_qty = 0;
    SET v_avail_cal_flag = 0;
    SET v_combo_code = " ";
    SET v_combo_posi_id = 0;
    SET v_debt_qty = 0;
    SET v_open_posi_date = date_format(curdate(),'%Y%m%d');
    SET v_debt_type = 0;

    
    label_pro:BEGIN
    

    /* set @开平仓权限# =《开平仓权限-不限制》; */
    set v_open_close_permission =0;

    /* set @投资类型# =《投资类型-二级市场交易性金融资产》; */
    set v_invest_type =1;

    /* if @订单状态# <> 《订单状态-未报》  then */
    if v_order_status <> "1"  then

        /* set @订单状态#=《订单状态-待撤》; */
        set v_order_status="3";

        /* set @撤单状态#=《撤单状态-未报》; */
        set v_wtdraw_status="1";
        #需主推，直接更新状态为已报

        /* 调用【原子_交易证券_公用_获取通道状态】*/
        call db_tdsecu.pra_tdsepb_GetChannelStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_pass_no,
            v_error_code,
            v_error_info,
            v_pass_status);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_获取通道状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* if @通道状态#=《通道状态-正常》 then */
        if v_pass_status="1" then

            /* set @撤单状态#=《撤单状态-已报》; */
            set v_wtdraw_status="2";
        end if;

        /* set @撤单说明#="撤销指令订单！"; */
        set v_wtdraw_remark="撤销指令订单！";

        /* set @撤单数量# = 0; */
        set v_wtdraw_qty = 0;

        /* set @订单冻结金额# = 0; */
        set v_order_frozen_amt = 0;

        /* set @订单冻结数量# = 0; */
        set v_order_frozen_qty = 0;

        /* 调用【原子_交易证券_交易_撤销订单】*/
        call db_tdsecu.pra_tdsetd_CancelOrder(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_pass_no,
            v_out_acco,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_acco_no,
            v_stock_acco,
            v_stock_code_no,
            v_stock_code,
            v_external_no,
            v_order_date,
            v_order_id,
            v_report_no,
            v_order_frozen_amt,
            v_order_frozen_qty,
            v_order_status,
            v_wtdraw_batch_no,
            v_wtdraw_qty,
            v_wtdraw_remark,
            v_wtdraw_status,
            v_order_price,
            v_trade_acco,
            v_error_code,
            v_error_info,
            v_wtdraw_id,
            v_wtdraw_date,
            v_wtdraw_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_交易_撤销订单出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    else
        #未报撤单处理逻辑

        /* set @订单状态#=《订单状态-已撤》; */
        set v_order_status="4";

        /* set @撤单状态#=《撤单状态-成功》; */
        set v_wtdraw_status="3";

        /* set @撤单数量# = @订单数量#; */
        set v_wtdraw_qty = v_order_qty;
        #更新指令表

        /* if @指令序号#>0 then */
        if v_comm_id>0 then

            /* set @指令撤销数量# = 0; */
            set v_comm_cancel_qty = 0;

            /* 调用【原子_交易证券_指令_撤销更新指令】*/
            call db_tdsecu.pra_tdseap_CancelUpdateComm(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_comm_id,
                v_comm_cancel_qty,
                v_wtdraw_qty,
                v_error_code,
                v_error_info,
                v_limit_actual_price,
                v_comm_status,
                v_comm_date,
                v_comm_batch_no,
                v_comm_executor,
                v_comm_oper_way,
                v_comm_dir,
                v_comm_amt);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.97.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_撤销更新指令出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

            #计算指令变动金额

            /* set @指令方向# = @订单方向#; */
            set v_comm_dir = v_order_dir;

            /* set @指令数量# = @撤单数量#; */
            set v_comm_qty = v_wtdraw_qty;

            /* set @计算方向# = 《计算方向-加上》; */
            set v_calc_dir = 1;

            /* 调用【原子_交易证券_公用_计算融资融券撤单指令变动金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetFinaLoanCancelCommOccurAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_wtdraw_qty,
                v_comm_status,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_comm_amt,
                v_error_code,
                v_error_info,
                v_comm_occur_amt,
                v_comm_occur_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.97.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券撤单指令变动金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;

        /* set @总成交数量# = 0; */
        set v_total_strike_qty = 0;

        /* set @总撤单数量# = @撤单数量#; */
        set v_all_wtdraw_qty = v_wtdraw_qty;

        /* 调用【原子_交易证券_公用_计算融资融券撤单交易变动金额和数量】*/
        call db_tdsecu.pra_tdsepb_GetFinaLoanCancelExchChangeAmtAndQty(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_stock_type,
            v_order_dir,
            v_order_qty,
            v_order_price,
            v_order_frozen_amt,
            v_wtdraw_qty,
            v_total_strike_qty,
            v_all_wtdraw_qty,
            v_net_price_flag,
            v_par_value,
            v_bond_accr_intrst,
            v_bond_rate_type,
            v_error_code,
            v_error_info,
            v_trade_occur_amt,
            v_trade_occur_qty);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券撤单交易变动金额和数量出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

        #更新订单表，冻结数量这个字段还没有处理，后续统一处理掉

        /* set @订单冻结金额# = -1 * @订单冻结金额#; */
        set v_order_frozen_amt = -1 * v_order_frozen_amt;

        /* set @订单冻结数量# = -1 * @订单冻结数量#; */
        set v_order_frozen_qty = -1 * v_order_frozen_qty;

        /* set @撤单说明#="撤销指令订单！"; */
        set v_wtdraw_remark="撤销指令订单！";

        /* 调用【原子_交易证券_交易_撤销订单】*/
        call db_tdsecu.pra_tdsetd_CancelOrder(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_pass_no,
            v_out_acco,
            v_exch_crncy_type,
            v_exch_no,
            v_stock_acco_no,
            v_stock_acco,
            v_stock_code_no,
            v_stock_code,
            v_external_no,
            v_order_date,
            v_order_id,
            v_report_no,
            v_order_frozen_amt,
            v_order_frozen_qty,
            v_order_status,
            v_wtdraw_batch_no,
            v_wtdraw_qty,
            v_wtdraw_remark,
            v_wtdraw_status,
            v_order_price,
            v_trade_acco,
            v_error_code,
            v_error_info,
            v_wtdraw_id,
            v_wtdraw_date,
            v_wtdraw_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_交易_撤销订单出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

        #处理订单资金持仓数据，保护指令变动和交易的变动

        /* set @可用计算标志# = 0; */
        set v_avail_cal_flag = 0;

        /* set @组合代码# = " "; */
        set v_combo_code = " ";

        /* set @组合持仓序号# = 0 ; */
        set v_combo_posi_id = 0 ;

        /* set @负债数量# = 0 ; */
        set v_debt_qty = 0 ;

        /* 调用【原子_交易证券_账户_更新指令交易资金持仓】*/
        call db_tdsecu.pra_tdseac_UpdateApprExchCashPosi(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_comm_id,
            v_order_id,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_order_dir,
            v_impawn_ratio,
            v_stock_acco_no,
            v_stock_code_no,
            v_trade_code_no,
            v_target_code_no,
            v_comm_occur_amt,
            v_comm_occur_qty,
            v_trade_occur_amt,
            v_trade_occur_qty,
            v_is_record_jour,
            v_order_oper_way,
            v_busi_opor_no,
            v_open_close_permission,
            v_avail_cal_flag,
            v_combo_code,
            v_combo_posi_id,
            v_target_stock_code_no,
            v_error_code,
            v_error_info,
            v_open_posi_date);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新指令交易资金持仓出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;


        /* 调用【原子_交易证券_账户_更新融资融券指令交易资金持仓负债】*/
        call db_tdsecu.pra_tdseac_UpdateFinaLoanApprDebt(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_init_date,
            v_co_no,
            v_pd_no,
            v_exch_group_no,
            v_asset_acco_no,
            v_exch_crncy_type,
            v_comm_id,
            v_exch_no,
            v_stock_code,
            v_stock_type,
            v_asset_type,
            v_invest_type,
            v_order_dir,
            v_stock_acco_no,
            v_stock_code_no,
            v_trade_code_no,
            v_comm_occur_amt,
            v_comm_occur_qty,
            v_trade_occur_amt,
            v_trade_occur_qty,
            v_is_record_jour,
            v_debt_qty,
            v_error_code,
            v_error_info,
            v_debt_type);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.97.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_账户_更新融资融券指令交易资金持仓负债出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;
    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_frozen_amt = v_frozen_amt;
    SET p_wtdraw_status = v_wtdraw_status;
    SET p_wtdraw_qty = v_wtdraw_qty;
    SET p_wtdraw_id = v_wtdraw_id;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_校验组合在途指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_CheckComboWayComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_CheckComboWayComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_combo_code varchar(32),
    IN p_comm_batch_no int,
    IN p_co_no int,
    IN p_stock_code_no int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_combo_code varchar(32);
    declare v_comm_batch_no int;
    declare v_co_no int;
    declare v_stock_code_no int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_oper_time int;
    declare v_record_count int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_combo_code = p_combo_code;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_co_no = p_co_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_oper_time = date_format(curtime(),'%H%i%s');
    SET v_record_count = 0;

    
    label_pro:BEGIN
    

    /* select  date_format(CURRENT_TIME(),'%H%i%s') into @操作时间#; */
    select  date_format(CURRENT_TIME(),'%H%i%s') into v_oper_time;

    /* select count(1) into @记录个数# from ~交易证券_指令_指令表^  where {机构编号} = @机构编号# and {组合代码}=@组合代码# and {指令批号} <>@指令批号# and {证券代码编号} = @证券代码编号# and {指令完成标志} = 《指令完成标志-未完成》 and {指令状态} <> 《指令状态-全部撤销》  and (@操作时间# between {指令开始时间} and {指令结束时间}); */
    select count(1) into v_record_count from db_tdsecu.tb_tdseap_command  where co_no = v_co_no and combo_code=v_combo_code and comm_batch_no <>v_comm_batch_no and stock_code_no = v_stock_code_no and comm_comple_flag = 1 and comm_status <> "6"  and (v_oper_time between comm_begin_time and comm_end_time);

    /* [检查报错返回][@记录个数#>0][778][@记录个数#] */
    if v_record_count>0 then
        
        SET v_error_code = "tdsecuA.3.98.778";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("记录个数=",v_record_count),"#",v_mysql_message);
        else
            SET v_error_info = concat("记录个数=",v_record_count);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_新分发指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_NewDispComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_NewDispComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_init_date int,
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_comm_date int,
    IN p_comm_id bigint,
    IN p_comm_qty decimal(18,2),
    IN p_comm_amt decimal(18,4),
    IN p_comm_limit_price decimal(16,9),
    IN p_limit_actual_price decimal(16,9),
    IN p_order_qty decimal(18,2),
    IN p_comm_cancel_qty decimal(18,2),
    IN p_bond_accr_intrst decimal(18,12),
    IN p_bond_rate_type int,
    IN p_net_price_flag int,
    IN p_par_value decimal(16,9),
    IN p_comm_batch_no int,
    IN p_comm_dir int,
    IN p_comm_status varchar(2),
    IN p_comm_executor int,
    IN p_disp_flag int,
    IN p_disp_remark varchar(255),
    IN p_before_comm_executor int,
    IN p_is_withdraw int,
    IN p_exter_comm_flag int,
    IN p_disp_status int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_comm_occur_qty decimal(18,2),
    OUT p_comm_occur_amt decimal(18,4)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_date int;
    declare v_comm_id bigint;
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_comm_batch_no int;
    declare v_comm_dir int;
    declare v_comm_status varchar(2);
    declare v_comm_executor int;
    declare v_disp_flag int;
    declare v_disp_remark varchar(255);
    declare v_before_comm_executor int;
    declare v_is_withdraw int;
    declare v_exter_comm_flag int;
    declare v_disp_status int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_comm_occur_qty decimal(18,2);
    declare v_comm_occur_amt decimal(18,4);
    declare v_disp_time int;
    declare v_disp_date int;
    declare v_oper_func_code varchar(16);
    declare v_remark_info varchar(255);
    declare v_tmp_comm_cancel_qty decimal(18,2);
    declare v_tmp_comm_qty decimal(18,2);
    declare v_calc_dir int;
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_update_date int;
    declare v_update_time int;
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_times int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_read_flag int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_init_date = p_init_date;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_comm_date = p_comm_date;
    SET v_comm_id = p_comm_id;
    SET v_comm_qty = p_comm_qty;
    SET v_comm_amt = p_comm_amt;
    SET v_comm_limit_price = p_comm_limit_price;
    SET v_limit_actual_price = p_limit_actual_price;
    SET v_order_qty = p_order_qty;
    SET v_comm_cancel_qty = p_comm_cancel_qty;
    SET v_bond_accr_intrst = p_bond_accr_intrst;
    SET v_bond_rate_type = p_bond_rate_type;
    SET v_net_price_flag = p_net_price_flag;
    SET v_par_value = p_par_value;
    SET v_comm_batch_no = p_comm_batch_no;
    SET v_comm_dir = p_comm_dir;
    SET v_comm_status = p_comm_status;
    SET v_comm_executor = p_comm_executor;
    SET v_disp_flag = p_disp_flag;
    SET v_disp_remark = p_disp_remark;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_is_withdraw = p_is_withdraw;
    SET v_exter_comm_flag = p_exter_comm_flag;
    SET v_disp_status = p_disp_status;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_comm_occur_qty = 0;
    SET v_comm_occur_amt = 0;
    SET v_disp_time = date_format(curtime(),'%H%i%s');
    SET v_disp_date = date_format(curdate(),'%Y%m%d');
    SET v_oper_func_code = " ";
    SET v_remark_info = " ";
    SET v_tmp_comm_cancel_qty = 0;
    SET v_tmp_comm_qty = 0;
    SET v_calc_dir = 1;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_read_flag = 0;
    SET v_comm_appr_qty = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* [获取机器时间][@分发时间#] */
    select date_format(curtime(),'%H%i%s') into v_disp_time;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* set @操作功能# = @功能编码#; */
    set v_oper_func_code = v_func_code;

    /* set @备注信息#=" "; */
    set v_remark_info=" ";

    /* set @临时_指令撤销数量# = 0; */
    set v_tmp_comm_cancel_qty = 0;

    /* if @分发状态# = 《分发状态-分发拒绝》 then */
    if v_disp_status = 2 then

            /* set @临时_指令撤销数量# = @指令数量# - @订单数量# - @指令撤销数量#; */
            set v_tmp_comm_cancel_qty = v_comm_qty - v_order_qty - v_comm_cancel_qty;

            /* if @指令数量# = (@临时_指令撤销数量# +@指令撤销数量#) then */
            if v_comm_qty = (v_tmp_comm_cancel_qty +v_comm_cancel_qty) then

                /* set @指令状态#=《指令状态-全部撤销》; */
                set v_comm_status="6";
            else

                /* set @指令状态#=《指令状态-部分撤销》; */
                set v_comm_status="5";
            end if;

            /* set @临时_指令数量# = @指令数量#; */
            set v_tmp_comm_qty = v_comm_qty;

            /* set @指令数量# = @临时_指令撤销数量#; */
            set v_comm_qty = v_tmp_comm_cancel_qty;

            /* set @计算方向# = 《计算方向-减去》; */
            set v_calc_dir = -1;

            /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-融券卖出》  or @指令方向# = 《指令方向-买券还券》  or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》  then */
            if v_comm_dir = 5 or v_comm_dir = 6  or v_comm_dir = 8  or v_comm_dir = 7 or v_comm_dir = 14 or v_comm_dir = 15  then

                /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_comm_amt,
                    v_error_code,
                    v_error_info,
                    v_comm_frozen_amt,
                    v_comm_frozen_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.99.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            else

                /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_error_code,
                    v_error_info,
                    v_comm_frozen_amt,
                    v_comm_frozen_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.99.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;

            /* set @指令数量# = @临时_指令数量#; */
            set v_comm_qty = v_tmp_comm_qty;

            /* set @指令数量# = @临时_指令撤销数量#; */
            set v_comm_qty = v_tmp_comm_cancel_qty;
            #计算指令变动金额和数量

            /* set @计算方向# = 《计算方向-减去》; */
            set v_calc_dir = -1;

            /* if @指令方向# = 《指令方向-融资买入》 or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-买券还券》  or @指令方向# = 《指令方向-卖券还款》  or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》  then */
            if v_comm_dir = 5 or v_comm_dir = 6 or v_comm_dir = 8  or v_comm_dir = 7  or v_comm_dir = 14 or v_comm_dir = 15  then

                /* 调用【原子_交易证券_公用_计算融资融券指令变动金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetFinaLoanCommOccurAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_comm_amt,
                    v_error_code,
                    v_error_info,
                    v_comm_occur_amt,
                    v_comm_occur_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.99.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令变动金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            else

                /* 调用【原子_交易证券_公用_计算指令变动金额和数量】*/
                call db_tdsecu.pra_tdsepb_GetCommOccurAmtAndQty(
                    v_opor_co_no,
                    v_opor_no,
                    v_oper_mac,
                    v_oper_ip_addr,
                    v_oper_info,
                    v_oper_way,
                    v_func_code,
                    v_stock_type,
                    v_comm_dir,
                    v_limit_actual_price,
                    v_comm_qty,
                    v_net_price_flag,
                    v_par_value,
                    v_bond_accr_intrst,
                    v_bond_rate_type,
                    v_calc_dir,
                    v_error_code,
                    v_error_info,
                    v_comm_occur_amt,
                    v_comm_occur_qty);
                if v_error_code = "1" then
                    SET v_error_code = "tdsecuA.3.99.999";
                    if v_mysql_message <> "" then
                         SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令变动金额和数量出现错误！',v_mysql_message);
                    end if;
                    leave label_pro;
                elseif v_error_code <> "0" then
                    leave label_pro;
                end if;

            end if;
    end if;

    /* [更新表记录][交易证券_指令_指令表][{指令撤销数量}= {指令撤销数量} + @临时_指令撤销数量#, {指令冻结金额} = {指令冻结金额} + @指令冻结金额#, {指令冻结数量} = {指令冻结数量} + @指令冻结数量#,{指令执行人}=@指令执行人#,{分发操作员} = @操作员编号#,{分发状态} = @分发状态#,{指令状态} = @指令状态#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_cancel_qty= comm_cancel_qty + v_tmp_comm_cancel_qty, comm_frozen_amt = comm_frozen_amt + v_comm_frozen_amt, comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty,comm_executor=v_comm_executor,disp_opor = v_opor_no,disp_status = v_disp_status,comm_status = v_comm_status where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.99.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #获取指令信息，检查指令状态

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.99.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* [插入表记录][交易证券_指令_指令分发表][字段][字段变量][1][@指令序号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command_dispense(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, comm_date, 
        comm_id, comm_batch_no, comm_dir, comm_status, 
        comm_opor, disp_date, disp_time, before_comm_executor, 
        comm_executor, is_withdraw, disp_flag, disp_remark, 
        exter_comm_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_comm_date, 
        v_comm_id, v_comm_batch_no, v_comm_dir, v_comm_status, 
        v_comm_opor, v_disp_date, v_disp_time, v_before_comm_executor, 
        v_comm_executor, v_is_withdraw, v_disp_flag, v_disp_remark, 
        v_exter_comm_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.99.1";
        SET v_error_info =  CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* if @分发状态# = 《分发状态-分发拒绝》 then */
    if v_disp_status = 2 then

        /* set @指令撤销数量#=@指令数量#; */
        set v_comm_cancel_qty=v_comm_qty;
    end if;

    /* 调用【原子_交易证券_指令_分发更新原汇总指令】*/
    call db_tdsecu.pra_tdseap_DispUpdateOrgBatchComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_date,
        v_co_no,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_status,
        v_strike_status,
        v_comm_appr_status,
        v_before_comm_executor,
        v_sell_ref_rate,
        v_buy_ref_rate,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.99.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_分发更新原汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;


    /* set @指令审批数量# = @指令数量#; */
    set v_comm_appr_qty = v_comm_qty;
    #这里需要更新一下转发后的指令

    /* set @账户拼接信息# = ""; */
    set v_acco_concat_info = "";

    /* 调用【原子_交易证券_指令_指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_oper_func_code,
        v_init_date,
        v_comm_date,
        v_comm_time,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_pass_no,
        v_out_acco,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_code_no,
        v_stock_code,
        v_target_code_no,
        v_trade_code_no,
        v_stock_type,
        v_asset_type,
        v_comm_opor,
        v_comm_executor,
        v_comm_batch_no,
        v_comm_dir,
        v_comm_limit_price,
        v_limit_actual_price,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_appr_qty,
        v_comm_begin_date,
        v_comm_end_date,
        v_comm_begin_time,
        v_comm_end_time,
        v_net_price_flag,
        v_par_value,
        v_impawn_ratio,
        v_intrst_days,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_strike_status,
        v_comm_status,
        v_comm_appr_status,
        v_basket_id,
        v_comm_oper_way,
        v_exter_comm_flag,
        v_buy_ref_rate,
        v_sell_ref_rate,
        v_comm_remark_info,
        v_acco_concat_info,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.99.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_comm_occur_qty = v_comm_occur_qty;
    SET p_comm_occur_amt = v_comm_occur_amt;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_指令自动分发
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_AutoDispComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_AutoDispComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_pd_no int,
    IN p_exch_group_no int,
    IN p_asset_acco_no int,
    IN p_exch_no int,
    IN p_stock_acco_no int,
    IN p_stock_code varchar(6),
    IN p_stock_code_no int,
    IN p_stock_type int,
    IN p_asset_type int,
    IN p_filter_not_online_trader int,
    IN p_distribute_last_trader int,
    IN p_distribute_by_jobs int,
    IN p_online_opor_no_str varchar(2048),
    IN p_comm_id bigint,
    IN p_curr_opor_no int,
    IN p_buy_ref_rate decimal(18,12),
    IN p_sell_ref_rate decimal(18,12),
    IN p_before_comm_executor int,
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_disp_opor int,
    OUT p_disp_status int,
    OUT p_comm_executor int
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code varchar(6);
    declare v_stock_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_filter_not_online_trader int;
    declare v_distribute_last_trader int;
    declare v_distribute_by_jobs int;
    declare v_online_opor_no_str varchar(2048);
    declare v_comm_id bigint;
    declare v_curr_opor_no int;
    declare v_buy_ref_rate decimal(18,12);
    declare v_sell_ref_rate decimal(18,12);
    declare v_before_comm_executor int;
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_comm_executor int;
    declare v_tmp_filter_not_online_trader int;
    declare v_tmp_distribute_last_trader int;
    declare v_tmp_distribute_by_jobs int;
    declare v_disp_flag int;
    declare v_is_withdraw int;
    declare v_disp_remark varchar(255);
    declare v_disp_time int;
    declare v_record_count int;
    declare v_cursor_done int;
    declare v_rule_prior_type int;
    declare v_split_str varchar(4);
    declare v_tmp_opor_no_str varchar(2048);
    declare v_row_id bigint;
    declare v_busi_opor_no int;
    declare v_rule_name varchar(64);
    declare v_prior_type int;
    declare v_exch_group_no_str varchar(2048);
    declare v_exch_no_str varchar(2048);
    declare v_stock_type_str varchar(2048);
    declare v_stock_code_str varchar(4096);
    declare v_opor_no_str varchar(2048);
    declare v_remark_info varchar(255);
    declare v_update_date int;
    declare v_update_time int;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_comm_date int;
    declare v_comm_time int;
    declare v_comm_batch_no int;
    declare v_comm_opor int;
    declare v_comm_dir int;
    declare v_comm_limit_price decimal(16,9);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_comm_amt decimal(18,4);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_comm_oper_way varchar(2);
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_read_flag int;
    declare v_disp_date int;
    declare v_comm_appr_qty decimal(18,2);
    declare v_acco_concat_info varchar(4096);

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_pd_no = p_pd_no;
    SET v_exch_group_no = p_exch_group_no;
    SET v_asset_acco_no = p_asset_acco_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_acco_no = p_stock_acco_no;
    SET v_stock_code = p_stock_code;
    SET v_stock_code_no = p_stock_code_no;
    SET v_stock_type = p_stock_type;
    SET v_asset_type = p_asset_type;
    SET v_filter_not_online_trader = p_filter_not_online_trader;
    SET v_distribute_last_trader = p_distribute_last_trader;
    SET v_distribute_by_jobs = p_distribute_by_jobs;
    SET v_online_opor_no_str = p_online_opor_no_str;
    SET v_comm_id = p_comm_id;
    SET v_curr_opor_no = p_curr_opor_no;
    SET v_buy_ref_rate = p_buy_ref_rate;
    SET v_sell_ref_rate = p_sell_ref_rate;
    SET v_before_comm_executor = p_before_comm_executor;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_comm_executor = 0;
    SET v_tmp_filter_not_online_trader = 0;
    SET v_tmp_distribute_last_trader = 0;
    SET v_tmp_distribute_by_jobs = 0;
    SET v_disp_flag = 0;
    SET v_is_withdraw = 0;
    SET v_disp_remark = " ";
    SET v_disp_time = date_format(curtime(),'%H%i%s');
    SET v_record_count = 0;
    SET v_cursor_done = false;
    SET v_rule_prior_type = 0;
    SET v_split_str = " ";
    SET v_tmp_opor_no_str = " ";
    SET v_row_id = 0;
    SET v_busi_opor_no = 0;
    SET v_rule_name = " ";
    SET v_prior_type = 0;
    SET v_exch_group_no_str = " ";
    SET v_exch_no_str = " ";
    SET v_stock_type_str = " ";
    SET v_stock_code_str = " ";
    SET v_opor_no_str = " ";
    SET v_remark_info = " ";
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_batch_no = 0;
    SET v_comm_opor = 0;
    SET v_comm_dir = 0;
    SET v_comm_limit_price = 0;
    SET v_limit_actual_price = 0;
    SET v_comm_qty = 0;
    SET v_comm_amt = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_comm_oper_way = " ";
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_read_flag = 0;
    SET v_disp_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_qty = 0;
    SET v_acco_concat_info = " ";

    
    label_pro:BEGIN
    

    /* set @临时_指令自动分发过滤不在线交易员#=@指令自动分发过滤不在线交易员#; */
    set v_tmp_filter_not_online_trader=v_filter_not_online_trader;

    /* set @临时_指令自动分发同券分发给上次分发的交易员# = @指令自动分发同券分发给上次分发的交易员#; */
    set v_tmp_distribute_last_trader = v_distribute_last_trader;

    /* set @临时_指令自动分发按工作量分发#=@指令自动分发按工作量分发#; */
    set v_tmp_distribute_by_jobs=v_distribute_by_jobs;

    /* set @在线操作员编号串#=concat(";", @在线操作员编号串#, ";"); */
    set v_online_opor_no_str=concat(";", v_online_opor_no_str, ";");

    /* set @分发方式# = 《分发方式-自动分发》; */
    set v_disp_flag = 1;

    /* set @是否撤单# = 《是否撤单-否》; */
    set v_is_withdraw = 2;

    /* set @分发说明# = "审批通过自动分发"; */
    set v_disp_remark = "审批通过自动分发";

    /* [获取机器时间][@分发时间#] */
    select date_format(curtime(),'%H%i%s') into v_disp_time;

    #若无自定义规则，则优先级：过滤不在线的交易员>同券分发给上次分发的交易员>按工作量分发，若有自定义规则，则按照自定义规则优先级依次判断直到找到交易员为止。

    /* set @分发操作员# = 0; */
    set v_disp_opor = 0;

    /* set @记录个数# = 0; */
    set v_record_count = 0;

    /* set @结束标志# = 0; */
    set v_cursor_done = 0;

    /* set @规则优先级# =0 ; */
    set v_rule_prior_type =0 ;

    /* set @分隔符# = ";"; */
    set v_split_str = ";";

    /* set @临时_操作员编号串# = ";"; */
    set v_tmp_opor_no_str = ";";

    /* [获取表记录数量][交易证券_公用_指令自动分发规则表][@记录个数#][{机构编号}=@机构编号# and instr(concat(";",{交易组编号串},";"), concat(";",@交易组编号#,";"))>0 and ({市场编号串} = " " or instr(concat(";",{市场编号串},";"), concat(";",@市场编号#,";"))>0 ) and ({证券类型串} = " " or instr(concat(";",{证券类型串},";"), concat(";",@证券类型#,";"))>0 ) and ({证券代码串} = " " or instr( concat(";",{证券代码串},";"), concat(";",@证券代码#,";"))>0 )] */
    select count(1) into v_record_count from db_tdsecu.tb_tdsepb_commautodistributerule where co_no=v_co_no and instr(concat(";",exch_group_no_str,";"), concat(";",v_exch_group_no,";"))>0 and (exch_no_str = " " or instr(concat(";",exch_no_str,";"), concat(";",v_exch_no,";"))>0 ) and (stock_type_str = " " or instr(concat(";",stock_type_str,";"), concat(";",v_stock_type,";"))>0 ) and (stock_code_str = " " or instr( concat(";",stock_code_str,";"), concat(";",v_stock_code,";"))>0 );


    /* if @记录个数#>0 then */
    if v_record_count>0 then

        /* set @记录个数# = 0 ; */
        set v_record_count = 0 ;
        loop_label:loop

            /* 调用【原子_交易证券_指令_获取指令自动分发规则记录】*/
            call db_tdsecu.pra_tdseap_GetAutoDispCommRuleDetail(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_co_no,
                v_rule_prior_type,
                v_exch_group_no,
                v_exch_no,
                v_stock_type,
                v_stock_code,
                v_error_code,
                v_error_info,
                v_row_id,
                v_busi_opor_no,
                v_rule_name,
                v_prior_type,
                v_exch_group_no_str,
                v_exch_no_str,
                v_stock_type_str,
                v_stock_code_str,
                v_opor_no_str,
                v_distribute_last_trader,
                v_distribute_by_jobs,
                v_remark_info);

            /* if @错误编码#="0" then */
            if v_error_code="0" then

                /* set @规则优先级# = @优先级#; */
                set v_rule_prior_type = v_prior_type;

                /* set @操作员编号串# = concat(@操作员编号串#,";"); */
                set v_opor_no_str = concat(v_opor_no_str,";");
                #set @操作员编号串# = substring(@操作员编号串#,2,LENGTH(@操作员编号串#)-1);
                #判断在线情况，多个交易员在线时，才进行规则判断；一个交易员在线，取该在线的交易员；都不在线，进行下一条规则判断

                /* if @指令自动分发过滤不在线交易员# = 《指令自动分发过滤不在线交易员-过滤》 then */
                if v_filter_not_online_trader = 1 then

                    /* while LOCATE(@分隔符#,@操作员编号串#)<>0   do */
                    while LOCATE(v_split_str,v_opor_no_str)<>0   do
                    #截取前面每一位

                        /* set @操作员编号#=substring(@操作员编号串#,1,LOCATE(@分隔符#,@操作员编号串#)-1); */
                        set v_opor_no=substring(v_opor_no_str,1,LOCATE(v_split_str,v_opor_no_str)-1);

                        /* if @操作员编号# > 0 and instr(@在线操作员编号串#, concat(";",@操作员编号#,";"))>0 then */
                        if v_opor_no > 0 and instr(v_online_opor_no_str, concat(";",v_opor_no,";"))>0 then

                            /* set @记录个数# = @记录个数#+1; */
                            set v_record_count = v_record_count+1;

                            /* set @分发操作员# = @操作员编号#; */
                            set v_disp_opor = v_opor_no;

                            /* set @临时_操作员编号串# = concat(@临时_操作员编号串#,@操作员编号#,";"); */
                            set v_tmp_opor_no_str = concat(v_tmp_opor_no_str,v_opor_no,";");
                        end if;

                        /* set @操作员编号串#=substring(@操作员编号串#,LOCATE(@分隔符#,@操作员编号串#)+1); */
                        set v_opor_no_str=substring(v_opor_no_str,LOCATE(v_split_str,v_opor_no_str)+1);
                    end while;

                    /* if @记录个数# = 1 then */
                    if v_record_count = 1 then

                        /* set @结束标志# = 1; */
                        set v_cursor_done = 1;
                        leave loop_label;

                    /* elseif @记录个数# >1 then */
                    elseif v_record_count >1 then

                        /* if @指令自动分发同券分发给上次分发的交易员# = 《指令自动分发同券分发给上次分发的交易员-是》 then */
                        if v_distribute_last_trader = 1 then

                            /* select {指令执行人} into @分发操作员# from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= @机构编号# and {指令执行人}>0 and stock_code_no = @证券代码编号#); */
                            select comm_executor into v_disp_opor from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= v_co_no and comm_executor>0 and stock_code_no = v_stock_code_no);

                            /* set @分发操作员# = ifnull(@分发操作员#,0); */
                            set v_disp_opor = ifnull(v_disp_opor,0);

                                /* if @分发操作员# > 0 and instr(@临时_操作员编号串#, concat(";",@分发操作员#,";"))>0 then */
                                if v_disp_opor > 0 and instr(v_tmp_opor_no_str, concat(";",v_disp_opor,";"))>0 then

                                    /* set @结束标志# = 1; */
                                    set v_cursor_done = 1;
                                    leave loop_label;
                                end if;
                        end if;

                        /* if @结束标志# = 0 and @指令自动分发按工作量分发# = 《指令自动分发按工作量分发-是》 then */
                        if v_cursor_done = 0 and v_distribute_by_jobs = 1 then

                            /* select {指令执行人} into @分发操作员# from (select {指令执行人},count(*) as c from tb_tdseap_command where co_no = @机构编号# and {指令执行人}>0 group by {指令执行人}) as t order by c desc limit 1; */
                            select comm_executor into v_disp_opor from (select comm_executor,count(*) as c from tb_tdseap_command where co_no = v_co_no and comm_executor>0 group by comm_executor) as t order by c desc limit 1;

                            /* set @分发操作员# = ifnull(@分发操作员#,0); */
                            set v_disp_opor = ifnull(v_disp_opor,0);

                                /* if @分发操作员# > 0 and instr(@临时_操作员编号串#, concat(";",@分发操作员#,";"))>0 then */
                                if v_disp_opor > 0 and instr(v_tmp_opor_no_str, concat(";",v_disp_opor,";"))>0 then

                                    /* set @结束标志# = 1; */
                                    set v_cursor_done = 1;
                                    leave loop_label;
                                end if;
                        end if;
                    end if;
                else

                    /* set @操作员编号串# = concat(";",@操作员编号串#,";"); */
                    set v_opor_no_str = concat(";",v_opor_no_str,";");

                    /* if @指令自动分发同券分发给上次分发的交易员# = 《指令自动分发同券分发给上次分发的交易员-是》 then */
                    if v_distribute_last_trader = 1 then

                        /* select {指令执行人} into @分发操作员# from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= @机构编号# and {指令执行人}>0 and stock_code_no = @证券代码编号#); */
                        select comm_executor into v_disp_opor from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= v_co_no and comm_executor>0 and stock_code_no = v_stock_code_no);

                        /* set @分发操作员# = ifnull(@分发操作员#,0); */
                        set v_disp_opor = ifnull(v_disp_opor,0);

                        /* if @分发操作员# > 0 and instr(@操作员编号串#, concat(";",@分发操作员#,";"))>0  then */
                        if v_disp_opor > 0 and instr(v_opor_no_str, concat(";",v_disp_opor,";"))>0  then

                            /* set @结束标志# = 1; */
                            set v_cursor_done = 1;
                            leave loop_label;
                        end if;
                    end if;

                    /* if @结束标志# = 0 and @指令自动分发按工作量分发# = 《指令自动分发按工作量分发-是》 then */
                    if v_cursor_done = 0 and v_distribute_by_jobs = 1 then

                        /* select {指令执行人} into @分发操作员# from (select {指令执行人},count(*) as c from tb_tdseap_command where co_no = @机构编号# and {指令执行人}>0 group by {指令执行人}) as t order by c desc limit 1; */
                        select comm_executor into v_disp_opor from (select comm_executor,count(*) as c from tb_tdseap_command where co_no = v_co_no and comm_executor>0 group by comm_executor) as t order by c desc limit 1;

                        /* set @分发操作员# = ifnull(@分发操作员#,0); */
                        set v_disp_opor = ifnull(v_disp_opor,0);

                        /* if @分发操作员# > 0 and instr(@操作员编号串#, concat(";",@分发操作员#,";"))>0  then */
                        if v_disp_opor > 0 and instr(v_opor_no_str, concat(";",v_disp_opor,";"))>0  then

                            /* set @结束标志# = 1; */
                            set v_cursor_done = 1;
                            leave loop_label;
                        end if;
                    end if;
                end if;
            else

                /* set @错误编码#="0"; */
                set v_error_code="0";

                /* set @错误信息#=' '; */
                set v_error_info=' ';
                leave loop_label;
            end if;
        end loop;
    end if;

    /* set @指令自动分发过滤不在线交易员#=@临时_指令自动分发过滤不在线交易员#; */
    set v_filter_not_online_trader=v_tmp_filter_not_online_trader;

    /* set @指令自动分发同券分发给上次分发的交易员# = @临时_指令自动分发同券分发给上次分发的交易员#; */
    set v_distribute_last_trader = v_tmp_distribute_last_trader;

    /* set @指令自动分发按工作量分发#=@临时_指令自动分发按工作量分发#; */
    set v_distribute_by_jobs=v_tmp_distribute_by_jobs;
    #按机构参数

    /* if @结束标志# = 0 then */
    if v_cursor_done = 0 then

        /* if @指令自动分发同券分发给上次分发的交易员# = 《指令自动分发同券分发给上次分发的交易员-是》 then */
        if v_distribute_last_trader = 1 then

            /* select {指令执行人} into @分发操作员# from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= @机构编号# and {指令执行人}>0 and stock_code_no = @证券代码编号#); */
            select comm_executor into v_disp_opor from tb_tdseap_command where row_id = (select max(row_id) from tb_tdseap_command where co_no= v_co_no and comm_executor>0 and stock_code_no = v_stock_code_no);

            /* set @分发操作员# = ifnull(@分发操作员#,0); */
            set v_disp_opor = ifnull(v_disp_opor,0);

            /* if @指令自动分发过滤不在线交易员# = 《指令自动分发过滤不在线交易员-过滤》 then */
            if v_filter_not_online_trader = 1 then

                /* if @分发操作员# > 0 and instr(@在线操作员编号串#, concat(";",@分发操作员#,";"))>0 then */
                if v_disp_opor > 0 and instr(v_online_opor_no_str, concat(";",v_disp_opor,";"))>0 then

                    /* set @结束标志# = 1; */
                    set v_cursor_done = 1;
                end if;
            else

                /* if @分发操作员# > 0 then */
                if v_disp_opor > 0 then

                    /* set @结束标志# = 1; */
                    set v_cursor_done = 1;
                end if;
            end if;
        end if;

        /* if @结束标志# = 0 and @指令自动分发按工作量分发# = 《指令自动分发按工作量分发-是》 then */
        if v_cursor_done = 0 and v_distribute_by_jobs = 1 then

            /* select {指令执行人} into @分发操作员# from (select {指令执行人},count(*) as c from tb_tdseap_command where co_no = @机构编号# and {指令执行人}>0 group by {指令执行人}) as t order by c desc limit 1; */
            select comm_executor into v_disp_opor from (select comm_executor,count(*) as c from tb_tdseap_command where co_no = v_co_no and comm_executor>0 group by comm_executor) as t order by c desc limit 1;

            /* set @分发操作员# = ifnull(@分发操作员#,0); */
            set v_disp_opor = ifnull(v_disp_opor,0);

            /* if @指令自动分发过滤不在线交易员# = 《指令自动分发过滤不在线交易员-过滤》 then */
            if v_filter_not_online_trader = 1 then

                /* if @分发操作员# > 0 and instr(@在线操作员编号串#, concat(";",@分发操作员#,";"))>0 then */
                if v_disp_opor > 0 and instr(v_online_opor_no_str, concat(";",v_disp_opor,";"))>0 then

                    /* set @结束标志# = 1; */
                    set v_cursor_done = 1;
                end if;
            else

                /* if @分发操作员# > 0 then */
                if v_disp_opor > 0 then

                    /* set @结束标志# = 1; */
                    set v_cursor_done = 1;
                end if;
            end if;
        end if;

        /* if @结束标志# = 0 then */
        if v_cursor_done = 0 then
            #如果还是没匹配到，指令执行人给自己

            /* set @分发操作员# = @当前操作员#; */
            set v_disp_opor = v_curr_opor_no;

            /* set @结束标志# = 1; */
            set v_cursor_done = 1;
        end if;
    end if;

    /* set @指令执行人# = @分发操作员#; */
    set v_comm_executor = v_disp_opor;

    /* set @分发操作员# = @当前操作员#; */
    set v_disp_opor = v_curr_opor_no;

    /* [更新表记录][交易证券_指令_指令表][{指令执行人}=@指令执行人#,{分发操作员} = @分发操作员#,{分发状态} = 《分发状态-分发通过》][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, comm_executor=v_comm_executor,disp_opor = v_disp_opor,disp_status = 1 where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.100.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #获取指令信息，检查指令状态

    /* [获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.100.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @分发日期# = @初始化日期#; */
    set v_disp_date = v_init_date;

    /* [插入表记录][交易证券_指令_指令分发表][字段][字段变量][1][@指令序号#] */
    set v_create_date = date_format(curdate(),'%Y%m%d');
    set v_create_time = date_format(curtime(),'%H%i%s');
    set v_update_date = v_create_date;
    set v_update_time = v_create_time;
    set v_update_times = 1;
    insert into db_tdsecu.tb_tdseap_command_dispense(
        create_date, create_time, update_date, 
        update_time, update_times, opor_co_no, opor_no, 
        oper_mac, oper_ip_addr, oper_info, oper_way, 
        oper_func_code, init_date, co_no, pd_no, 
        exch_group_no, asset_acco_no, exch_no, stock_acco_no, 
        stock_code_no, stock_type, asset_type, comm_date, 
        comm_id, comm_batch_no, comm_dir, comm_status, 
        comm_opor, disp_date, disp_time, before_comm_executor, 
        comm_executor, is_withdraw, disp_flag, disp_remark, 
        exter_comm_flag) 
    value( 
        v_create_date, v_create_time, v_update_date, 
        v_update_time, v_update_times, v_opor_co_no, v_opor_no, 
        v_oper_mac, v_oper_ip_addr, v_oper_info, v_oper_way, 
        v_oper_func_code, v_init_date, v_co_no, v_pd_no, 
        v_exch_group_no, v_asset_acco_no, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_type, v_asset_type, v_comm_date, 
        v_comm_id, v_comm_batch_no, v_comm_dir, v_comm_status, 
        v_comm_opor, v_disp_date, v_disp_time, v_before_comm_executor, 
        v_comm_executor, v_is_withdraw, v_disp_flag, v_disp_remark, 
        v_exter_comm_flag);
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.100.1";
        SET v_error_info =  CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        leave label_pro;
    end if;


    /* 调用【原子_交易证券_指令_分发更新原汇总指令】*/
    call db_tdsecu.pra_tdseap_DispUpdateOrgBatchComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_comm_date,
        v_co_no,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_status,
        v_strike_status,
        v_comm_appr_status,
        v_before_comm_executor,
        v_sell_ref_rate,
        v_buy_ref_rate,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.100.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_分发更新原汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    #这里需要更新一下转发后的指令

    /* set @指令审批数量# = @指令数量#; */
    set v_comm_appr_qty = v_comm_qty;

    /* set @账户拼接信息# = ""; */
    set v_acco_concat_info = "";

    /* 调用【原子_交易证券_指令_指令更新汇总指令】*/
    call db_tdsecu.pra_tdseap_CommUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_oper_func_code,
        v_init_date,
        v_comm_date,
        v_comm_time,
        v_co_no,
        v_pd_no,
        v_exch_group_no,
        v_asset_acco_no,
        v_pass_no,
        v_out_acco,
        v_exch_crncy_type,
        v_exch_no,
        v_stock_code_no,
        v_stock_code,
        v_target_code_no,
        v_trade_code_no,
        v_stock_type,
        v_asset_type,
        v_comm_opor,
        v_comm_executor,
        v_comm_batch_no,
        v_comm_dir,
        v_comm_limit_price,
        v_limit_actual_price,
        v_comm_qty,
        v_comm_amt,
        v_order_qty,
        v_comm_cancel_qty,
        v_strike_amt,
        v_strike_qty,
        v_comm_appr_qty,
        v_comm_begin_date,
        v_comm_end_date,
        v_comm_begin_time,
        v_comm_end_time,
        v_net_price_flag,
        v_par_value,
        v_impawn_ratio,
        v_intrst_days,
        v_bond_accr_intrst,
        v_bond_rate_type,
        v_strike_status,
        v_comm_status,
        v_comm_appr_status,
        v_basket_id,
        v_comm_oper_way,
        v_exter_comm_flag,
        v_buy_ref_rate,
        v_sell_ref_rate,
        v_comm_remark_info,
        v_acco_concat_info,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.100.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_指令更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_disp_opor = v_disp_opor;
    SET p_disp_status = v_disp_status;
    SET p_comm_executor = v_comm_executor;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_获取指令自动分发规则记录
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_GetAutoDispCommRuleDetail;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_GetAutoDispCommRuleDetail(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_co_no int,
    IN p_rule_prior_type int,
    IN p_exch_group_no int,
    IN p_exch_no int,
    IN p_stock_type int,
    IN p_stock_code varchar(6),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_row_id bigint,
    OUT p_busi_opor_no int,
    OUT p_rule_name varchar(64),
    OUT p_prior_type int,
    OUT p_exch_group_no_str varchar(2048),
    OUT p_exch_no_str varchar(2048),
    OUT p_stock_type_str varchar(2048),
    OUT p_stock_code_str varchar(4096),
    OUT p_opor_no_str varchar(2048),
    OUT p_distribute_last_trader int,
    OUT p_distribute_by_jobs int,
    OUT p_remark_info varchar(255)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_co_no int;
    declare v_rule_prior_type int;
    declare v_exch_group_no int;
    declare v_exch_no int;
    declare v_stock_type int;
    declare v_stock_code varchar(6);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_row_id bigint;
    declare v_busi_opor_no int;
    declare v_rule_name varchar(64);
    declare v_prior_type int;
    declare v_exch_group_no_str varchar(2048);
    declare v_exch_no_str varchar(2048);
    declare v_stock_type_str varchar(2048);
    declare v_stock_code_str varchar(4096);
    declare v_opor_no_str varchar(2048);
    declare v_distribute_last_trader int;
    declare v_distribute_by_jobs int;
    declare v_remark_info varchar(255);
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_co_no = p_co_no;
    SET v_rule_prior_type = p_rule_prior_type;
    SET v_exch_group_no = p_exch_group_no;
    SET v_exch_no = p_exch_no;
    SET v_stock_type = p_stock_type;
    SET v_stock_code = p_stock_code;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_row_id = 0;
    SET v_busi_opor_no = 0;
    SET v_rule_name = " ";
    SET v_prior_type = 0;
    SET v_exch_group_no_str = " ";
    SET v_exch_no_str = " ";
    SET v_stock_type_str = " ";
    SET v_stock_code_str = " ";
    SET v_opor_no_str = " ";
    SET v_distribute_last_trader = 0;
    SET v_distribute_by_jobs = 0;
    SET v_remark_info = " ";
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;

    
    label_pro:BEGIN
    

    /* [获取表记录变量][交易证券_公用_指令自动分发规则表][字段][字段变量][{机构编号}=@机构编号# and instr(concat(";",{交易组编号串},";"), concat(";",@交易组编号#,";"))>0 and ({市场编号串} = " " or instr(concat(";",{市场编号串},";"), concat(";",@市场编号#,";"))>0 ) and ({证券类型串} = " " or instr(concat(";",{证券类型串},";"), concat(";",@证券类型#,";"))>0 ) and ({证券代码串} = " " or instr( concat(";",{证券代码串},";"), concat(";",@证券代码#,";"))>0 ) and {优先级} >@规则优先级#   order by {优先级}][4][@机构编号#,@规则优先级#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_no, 
        co_no, rule_name, prior_type, exch_group_no_str, 
        exch_no_str, stock_type_str, stock_code_str, opor_no_str, 
        distribute_last_trader, distribute_by_jobs, remark_info into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_no, 
        v_co_no, v_rule_name, v_prior_type, v_exch_group_no_str, 
        v_exch_no_str, v_stock_type_str, v_stock_code_str, v_opor_no_str, 
        v_distribute_last_trader, v_distribute_by_jobs, v_remark_info from db_tdsecu.tb_tdsepb_commautodistributerule where co_no=v_co_no and instr(concat(";",exch_group_no_str,";"), concat(";",v_exch_group_no,";"))>0 and (exch_no_str = " " or instr(concat(";",exch_no_str,";"), concat(";",v_exch_no,";"))>0 ) and (stock_type_str = " " or instr(concat(";",stock_type_str,";"), concat(";",v_stock_type,";"))>0 ) and (stock_code_str = " " or instr( concat(";",stock_code_str,";"), concat(";",v_stock_code,";"))>0 ) and prior_type >v_rule_prior_type   order by prior_type limit 1;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.101.4";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("机构编号=",v_co_no,",","规则优先级=",v_rule_prior_type),"#",v_mysql_message);
        else
            SET v_error_info = concat("机构编号=",v_co_no,",","规则优先级=",v_rule_prior_type);
        end if;
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_row_id = v_row_id;
    SET p_busi_opor_no = v_busi_opor_no;
    SET p_rule_name = v_rule_name;
    SET p_prior_type = v_prior_type;
    SET p_exch_group_no_str = v_exch_group_no_str;
    SET p_exch_no_str = v_exch_no_str;
    SET p_stock_type_str = v_stock_type_str;
    SET p_stock_code_str = v_stock_code_str;
    SET p_opor_no_str = v_opor_no_str;
    SET p_distribute_last_trader = v_distribute_last_trader;
    SET p_distribute_by_jobs = v_distribute_by_jobs;
    SET p_remark_info = v_remark_info;

END;;


DELIMITER ;;
use db_tdsecu;;

# 原子_交易证券_指令_错单修改撤单回退更新指令
DELIMITER ;;
DROP PROCEDURE IF EXISTS pra_tdseap_BackModiErrorOrderCancelUpdateComm;;
DELIMITER ;;
CREATE PROCEDURE pra_tdseap_BackModiErrorOrderCancelUpdateComm(
    IN p_opor_co_no int,
    IN p_opor_no int,
    IN p_oper_mac varchar(32),
    IN p_oper_ip_addr varchar(32),
    IN p_oper_info varchar(1024),
    IN p_oper_way varchar(2),
    IN p_func_code varchar(16),
    IN p_comm_id bigint,
    IN p_wtdraw_qty decimal(18,2),
    OUT p_error_code varchar(32),
    OUT p_error_info varchar(255),
    OUT p_limit_actual_price decimal(16,9),
    OUT p_comm_status varchar(2),
    OUT p_comm_date int,
    OUT p_comm_batch_no int,
    OUT p_comm_executor int,
    OUT p_comm_oper_way varchar(2),
    OUT p_comm_dir int,
    OUT p_comm_amt decimal(18,4),
    OUT p_comm_frozen_amt decimal(18,4),
    OUT p_comm_frozen_qty decimal(18,2)
   )
BEGIN
    declare v_opor_co_no int;
    declare v_opor_no int;
    declare v_oper_mac varchar(32);
    declare v_oper_ip_addr varchar(32);
    declare v_oper_info varchar(1024);
    declare v_oper_way varchar(2);
    declare v_func_code varchar(16);
    declare v_comm_id bigint;
    declare v_wtdraw_qty decimal(18,2);
    declare v_error_code varchar(32);
    declare v_error_info varchar(255);
    declare v_limit_actual_price decimal(16,9);
    declare v_comm_status varchar(2);
    declare v_comm_date int;
    declare v_comm_batch_no int;
    declare v_comm_executor int;
    declare v_comm_oper_way varchar(2);
    declare v_comm_dir int;
    declare v_comm_amt decimal(18,4);
    declare v_comm_frozen_amt decimal(18,4);
    declare v_comm_frozen_qty decimal(18,2);
    declare v_row_id bigint;
    declare v_create_date int;
    declare v_create_time int;
    declare v_update_date int;
    declare v_update_time int;
    declare v_update_times int;
    declare v_oper_func_code varchar(16);
    declare v_init_date int;
    declare v_co_no int;
    declare v_pd_no int;
    declare v_exch_group_no int;
    declare v_asset_acco_no int;
    declare v_pass_no int;
    declare v_out_acco varchar(32);
    declare v_exch_crncy_type varchar(3);
    declare v_exch_no int;
    declare v_stock_acco_no int;
    declare v_stock_code_no int;
    declare v_stock_code varchar(6);
    declare v_target_code_no int;
    declare v_trade_code_no int;
    declare v_stock_type int;
    declare v_asset_type int;
    declare v_comm_time int;
    declare v_comm_opor int;
    declare v_comm_limit_price decimal(16,9);
    declare v_comm_qty decimal(18,2);
    declare v_order_qty decimal(18,2);
    declare v_comm_cancel_qty decimal(18,2);
    declare v_strike_amt decimal(18,4);
    declare v_strike_qty decimal(18,2);
    declare v_net_price_flag int;
    declare v_par_value decimal(16,9);
    declare v_impawn_ratio decimal(18,12);
    declare v_intrst_days int;
    declare v_bond_accr_intrst decimal(18,12);
    declare v_bond_rate_type int;
    declare v_capit_reback_days int;
    declare v_posi_reback_days int;
    declare v_strike_status varchar(2);
    declare v_comm_begin_date int;
    declare v_comm_end_date int;
    declare v_comm_begin_time int;
    declare v_comm_end_time int;
    declare v_comm_comple_date int;
    declare v_comm_comple_time int;
    declare v_comm_appr_date int;
    declare v_comm_appr_time int;
    declare v_comm_appr_status varchar(2);
    declare v_comm_appr_oper_no int;
    declare v_comm_appr_oper int;
    declare v_comm_appr_remark varchar(255);
    declare v_basket_id bigint;
    declare v_exter_comm_flag int;
    declare v_comm_comple_flag int;
    declare v_strategy_order_qty decimal(18,2);
    declare v_strategy_capt_qty decimal(18,2);
    declare v_combo_code varchar(32);
    declare v_target_stock_code varchar(6);
    declare v_target_stock_code_no int;
    declare v_comm_remark_info varchar(1024);
    declare v_workflow_type int;
    declare v_contra_no varchar(32);
    declare v_asset_acco_type int;
    declare v_exist_debt_flag int;
    declare v_disp_opor int;
    declare v_disp_status int;
    declare v_read_flag int;
    declare v_occur_qty decimal(18,2);
    declare v_calc_dir int;

    DECLARE v_mysql_number int DEFAULT 0;
    DECLARE v_mysql_row_count int DEFAULT 0;
    DECLARE v_mysql_sqlstate varchar(32) DEFAULT "";
    DECLARE v_mysql_message varchar(255) DEFAULT "";
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        GET DIAGNOSTICS v_mysql_number = NUMBER, v_mysql_row_count = ROW_COUNT;
        GET DIAGNOSTICS CONDITION 1 v_mysql_sqlstate = RETURNED_SQLSTATE, v_mysql_message = MESSAGE_TEXT;
        set v_error_code = "1";
        set v_error_info = v_mysql_message;
    END;


    SET v_opor_co_no = p_opor_co_no;
    SET v_opor_no = p_opor_no;
    SET v_oper_mac = p_oper_mac;
    SET v_oper_ip_addr = p_oper_ip_addr;
    SET v_oper_info = p_oper_info;
    SET v_oper_way = p_oper_way;
    SET v_func_code = p_func_code;
    SET v_comm_id = p_comm_id;
    SET v_wtdraw_qty = p_wtdraw_qty;
    SET v_error_code = "0";
    SET v_error_info = " ";
    SET v_limit_actual_price = 0;
    SET v_comm_status = "0";
    SET v_comm_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_batch_no = 0;
    SET v_comm_executor = 0;
    SET v_comm_oper_way = " ";
    SET v_comm_dir = 0;
    SET v_comm_amt = 0;
    SET v_comm_frozen_amt = 0;
    SET v_comm_frozen_qty = 0;
    SET v_row_id = 0;
    SET v_create_date = date_format(curdate(),'%Y%m%d');
    SET v_create_time = date_format(curtime(),'%H%i%s');
    SET v_update_date = date_format(curdate(),'%Y%m%d');
    SET v_update_time = date_format(curtime(),'%H%i%s');
    SET v_update_times = 1;
    SET v_oper_func_code = " ";
    SET v_init_date = date_format(curdate(),'%Y%m%d');
    SET v_co_no = 0;
    SET v_pd_no = 0;
    SET v_exch_group_no = 0;
    SET v_asset_acco_no = 0;
    SET v_pass_no = 0;
    SET v_out_acco = " ";
    SET v_exch_crncy_type = "CNY";
    SET v_exch_no = 0;
    SET v_stock_acco_no = 0;
    SET v_stock_code_no = 0;
    SET v_stock_code = " ";
    SET v_target_code_no = 0;
    SET v_trade_code_no = 0;
    SET v_stock_type = 0;
    SET v_asset_type = 0;
    SET v_comm_time = date_format(curtime(),'%H%i%s');
    SET v_comm_opor = 0;
    SET v_comm_limit_price = 0;
    SET v_comm_qty = 0;
    SET v_order_qty = 0;
    SET v_comm_cancel_qty = 0;
    SET v_strike_amt = 0;
    SET v_strike_qty = 0;
    SET v_net_price_flag = 0;
    SET v_par_value = 0;
    SET v_impawn_ratio = 0;
    SET v_intrst_days = 0;
    SET v_bond_accr_intrst = 0;
    SET v_bond_rate_type = 0;
    SET v_capit_reback_days = 0;
    SET v_posi_reback_days = 0;
    SET v_strike_status = "0";
    SET v_comm_begin_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_end_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_begin_time = date_format(curtime(),'%H%i%s');
    SET v_comm_end_time = date_format(curtime(),'%H%i%s');
    SET v_comm_comple_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_comple_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_date = date_format(curdate(),'%Y%m%d');
    SET v_comm_appr_time = date_format(curtime(),'%H%i%s');
    SET v_comm_appr_status = " ";
    SET v_comm_appr_oper_no = 0;
    SET v_comm_appr_oper = 0;
    SET v_comm_appr_remark = " ";
    SET v_basket_id = 0;
    SET v_exter_comm_flag = 0;
    SET v_comm_comple_flag = 0;
    SET v_strategy_order_qty = 0;
    SET v_strategy_capt_qty = 0;
    SET v_combo_code = " ";
    SET v_target_stock_code = " ";
    SET v_target_stock_code_no = 0;
    SET v_comm_remark_info = " ";
    SET v_workflow_type = 0;
    SET v_contra_no = " ";
    SET v_asset_acco_type = 0;
    SET v_exist_debt_flag = 0;
    SET v_disp_opor = 0;
    SET v_disp_status = 0;
    SET v_read_flag = 0;
    SET v_occur_qty = 0;
    SET v_calc_dir = 1;

    
    label_pro:BEGIN
    
    #防止并发，加锁获取

    /* [锁定获取表记录变量][交易证券_指令_指令表][字段][字段变量][{记录序号}=@指令序号#][1][@指令序号#] */
    select row_id, create_date, create_time, 
        update_date, update_time, update_times, opor_co_no, 
        opor_no, oper_mac, oper_ip_addr, oper_info, 
        oper_way, oper_func_code, init_date, co_no, 
        pd_no, exch_group_no, asset_acco_no, pass_no, 
        out_acco, exch_crncy_type, exch_no, stock_acco_no, 
        stock_code_no, stock_code, target_code_no, trade_code_no, 
        stock_type, asset_type, comm_date, comm_time, 
        comm_batch_no, comm_opor, comm_executor, comm_dir, 
        comm_limit_price, limit_actual_price, comm_qty, comm_amt, 
        order_qty, comm_cancel_qty, strike_amt, strike_qty, 
        comm_frozen_amt, comm_frozen_qty, net_price_flag, par_value, 
        impawn_ratio, intrst_days, bond_accr_intrst, bond_rate_type, 
        capit_reback_days, posi_reback_days, strike_status, comm_status, 
        comm_begin_date, comm_end_date, comm_begin_time, comm_end_time, 
        comm_comple_date, comm_comple_time, comm_appr_date, comm_appr_time, 
        comm_appr_status, comm_appr_oper_no, comm_appr_oper, comm_appr_remark, 
        basket_id, comm_oper_way, exter_comm_flag, comm_comple_flag, 
        strategy_order_qty, strategy_capt_qty, combo_code, target_stock_code, 
        target_stock_code_no, comm_remark_info, workflow_type, contra_no, 
        asset_acco_type, exist_debt_flag, disp_opor, disp_status, 
        read_flag into v_row_id, v_create_date, v_create_time, 
        v_update_date, v_update_time, v_update_times, v_opor_co_no, 
        v_opor_no, v_oper_mac, v_oper_ip_addr, v_oper_info, 
        v_oper_way, v_oper_func_code, v_init_date, v_co_no, 
        v_pd_no, v_exch_group_no, v_asset_acco_no, v_pass_no, 
        v_out_acco, v_exch_crncy_type, v_exch_no, v_stock_acco_no, 
        v_stock_code_no, v_stock_code, v_target_code_no, v_trade_code_no, 
        v_stock_type, v_asset_type, v_comm_date, v_comm_time, 
        v_comm_batch_no, v_comm_opor, v_comm_executor, v_comm_dir, 
        v_comm_limit_price, v_limit_actual_price, v_comm_qty, v_comm_amt, 
        v_order_qty, v_comm_cancel_qty, v_strike_amt, v_strike_qty, 
        v_comm_frozen_amt, v_comm_frozen_qty, v_net_price_flag, v_par_value, 
        v_impawn_ratio, v_intrst_days, v_bond_accr_intrst, v_bond_rate_type, 
        v_capit_reback_days, v_posi_reback_days, v_strike_status, v_comm_status, 
        v_comm_begin_date, v_comm_end_date, v_comm_begin_time, v_comm_end_time, 
        v_comm_comple_date, v_comm_comple_time, v_comm_appr_date, v_comm_appr_time, 
        v_comm_appr_status, v_comm_appr_oper_no, v_comm_appr_oper, v_comm_appr_remark, 
        v_basket_id, v_comm_oper_way, v_exter_comm_flag, v_comm_comple_flag, 
        v_strategy_order_qty, v_strategy_capt_qty, v_combo_code, v_target_stock_code, 
        v_target_stock_code_no, v_comm_remark_info, v_workflow_type, v_contra_no, 
        v_asset_acco_type, v_exist_debt_flag, v_disp_opor, v_disp_status, 
        v_read_flag from db_tdsecu.tb_tdseap_command where row_id=v_comm_id limit 1 for update;
    if FOUND_ROWS() = 0 then
                
        SET v_error_code = "tdsecuA.3.102.1";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;


    /* set @订单数量#=@订单数量#+@撤单数量#; */
    set v_order_qty=v_order_qty+v_wtdraw_qty;
    #获取指令状态,不为暂停再重算

    /* if @指令状态# <> 《指令状态-暂停执行》 then */
    if v_comm_status <> "7" then

        /* 调用【原子_交易证券_公用_计算指令状态】*/
        call db_tdsecu.pra_tdsepb_CaclCommStatus(
            v_opor_co_no,
            v_opor_no,
            v_oper_mac,
            v_oper_ip_addr,
            v_oper_info,
            v_oper_way,
            v_func_code,
            v_comm_qty,
            v_order_qty,
            v_comm_cancel_qty,
            v_strike_qty,
            v_error_code,
            v_error_info,
            v_comm_status,
            v_comm_comple_date,
            v_comm_comple_time);
        if v_error_code = "1" then
            SET v_error_code = "tdsecuA.3.102.999";
            if v_mysql_message <> "" then
                 SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令状态出现错误！',v_mysql_message);
            end if;
            leave label_pro;
        elseif v_error_code <> "0" then
            leave label_pro;
        end if;

    end if;

    /* set @变动数量# =  @撤单数量#; */
    set v_occur_qty =  v_wtdraw_qty;

    /* set @指令冻结数量# = 0; */
    set v_comm_frozen_qty = 0;

    /* set @指令冻结金额# = 0; */
    set v_comm_frozen_amt = 0;

    /* if @指令状态# <> 《指令状态-待撤销》 and @指令状态# <> 《指令状态-部分撤销》 and @指令状态# <> 《指令状态-全部撤销》 then */
    if v_comm_status <> "4" and v_comm_status <> "5" and v_comm_status <> "6" then

        /* set @指令数量# = @撤单数量#; */
        set v_comm_qty = v_wtdraw_qty;

        /* set @计算方向# = 《计算方向-减去》; */
        set v_calc_dir = -1;

        /* if @指令方向# = 《指令方向-融资买入》  or @指令方向# = 《指令方向-融券卖出》 or @指令方向# = 《指令方向-买券还券》 or @指令方向# = 《指令方向-卖券还款》 or @指令方向# = 《指令方向-直接还款》 or @指令方向# = 《指令方向-直接还券》 then */
        if v_comm_dir = 5  or v_comm_dir = 6 or v_comm_dir = 8 or v_comm_dir = 7 or v_comm_dir = 14 or v_comm_dir = 15 then

            /* 调用【原子_交易证券_公用_计算融资融券指令冻结金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetFinaLoanCommFrozenAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_comm_qty,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_calc_dir,
                v_comm_amt,
                v_error_code,
                v_error_info,
                v_comm_frozen_amt,
                v_comm_frozen_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.102.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算融资融券指令冻结金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        else

            /* 调用【原子_交易证券_公用_计算指令冻结金额和数量】*/
            call db_tdsecu.pra_tdsepb_GetCommFrozenAmtAndQty(
                v_opor_co_no,
                v_opor_no,
                v_oper_mac,
                v_oper_ip_addr,
                v_oper_info,
                v_oper_way,
                v_func_code,
                v_stock_type,
                v_comm_dir,
                v_limit_actual_price,
                v_comm_qty,
                v_net_price_flag,
                v_par_value,
                v_bond_accr_intrst,
                v_bond_rate_type,
                v_calc_dir,
                v_error_code,
                v_error_info,
                v_comm_frozen_amt,
                v_comm_frozen_qty);
            if v_error_code = "1" then
                SET v_error_code = "tdsecuA.3.102.999";
                if v_mysql_message <> "" then
                     SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_公用_计算指令冻结金额和数量出现错误！',v_mysql_message);
                end if;
                leave label_pro;
            elseif v_error_code <> "0" then
                leave label_pro;
            end if;

        end if;
    end if;

    /* [更新表记录][交易证券_指令_指令表][{订单数量}={订单数量} + @变动数量#, {指令冻结金额}={指令冻结金额} + @指令冻结金额# , {指令冻结数量} = {指令冻结数量} + @指令冻结数量#,{指令撤销数量}=@指令撤销数量#,{指令状态}=@指令状态#,{指令完成日期}=@指令完成日期#,{指令完成时间}=@指令完成时间#][{记录序号}=@指令序号#][2][@指令序号#] */
    set v_update_date = date_format(curdate(),'%Y%m%d');
    set v_update_time = date_format(curtime(),'%H%i%s');
    update db_tdsecu.tb_tdseap_command set update_date = v_update_date, update_time = v_update_time, update_times = update_times + 1, order_qty=order_qty + v_occur_qty, comm_frozen_amt=comm_frozen_amt + v_comm_frozen_amt , comm_frozen_qty = comm_frozen_qty + v_comm_frozen_qty,comm_cancel_qty=v_comm_cancel_qty,comm_status=v_comm_status,comm_comple_date=v_comm_comple_date,comm_comple_time=v_comm_comple_time where row_id=v_comm_id;
    if v_error_code = "1" then
                
        SET v_error_code = "tdsecuA.3.102.2";
        if v_mysql_message <> "" then
            SET v_error_info = CONCAT(concat("指令序号=",v_comm_id),"#",v_mysql_message);
        else
            SET v_error_info = concat("指令序号=",v_comm_id);
        end if;
        leave label_pro;
    end if;

    #回退撤单，相当于重新下单

    /* set @订单数量# =  @撤单数量#; */
    set v_order_qty =  v_wtdraw_qty;

    /* 调用【原子_交易证券_指令_下单更新汇总指令】*/
    call db_tdsecu.pra_tdseap_OrderUpdateSumComm(
        v_opor_co_no,
        v_opor_no,
        v_oper_mac,
        v_oper_ip_addr,
        v_oper_info,
        v_oper_way,
        v_func_code,
        v_co_no,
        v_comm_date,
        v_comm_batch_no,
        v_comm_executor,
        v_comm_status,
        v_comm_dir,
        v_comm_comple_date,
        v_comm_comple_time,
        v_order_qty,
        v_comm_oper_way,
        v_error_code,
        v_error_info);
    if v_error_code = "1" then
        SET v_error_code = "tdsecuA.3.102.999";
        if v_mysql_message <> "" then
             SET v_error_info = CONCAT(v_error_info,"#",'调用过程原子_交易证券_指令_下单更新汇总指令出现错误！',v_mysql_message);
        end if;
        leave label_pro;
    elseif v_error_code <> "0" then
        leave label_pro;
    end if;

    END;

    SET p_error_code = v_error_code;
    SET p_error_info = v_error_info;
    SET p_limit_actual_price = v_limit_actual_price;
    SET p_comm_status = v_comm_status;
    SET p_comm_date = v_comm_date;
    SET p_comm_batch_no = v_comm_batch_no;
    SET p_comm_executor = v_comm_executor;
    SET p_comm_oper_way = v_comm_oper_way;
    SET p_comm_dir = v_comm_dir;
    SET p_comm_amt = v_comm_amt;
    SET p_comm_frozen_amt = v_comm_frozen_amt;
    SET p_comm_frozen_qty = v_comm_frozen_qty;

END;;


