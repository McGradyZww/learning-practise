<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LdNet.MetroControls</name>
    </assembly>
    <members>
        <member name="T:LdNet.MetroControls.Accent">
            <summary>
            An object that represents the foreground color for a Metro <see cref="T:LdNet.MetroControls.AppTheme"/>.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Accent.Resources">
            <summary>
            The ResourceDictionary that represents this Accent.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Accent.Name">
            <summary>
            Gets/sets the name of the Accent.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Accent.#ctor">
            <summary>
            Initializes a new instance of the LdNet.MetroControls.Accent class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Accent.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the LdNet.MetroControls.Accent class.
            </summary>
            <param name="name">The name of the new Accent.</param>
            <param name="resourceAddress">The URI of the accent ResourceDictionary.</param>
        </member>
        <member name="T:LdNet.MetroControls.Behaviours.BorderlessWindowBehavior">
            <summary>
            With this class we can make custom window styles.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Behaviours.BorderlessWindowBehavior._ModifyStyle(Standard.WS,Standard.WS)">
            <summary>Add and remove a native WindowStyle from the HWND.</summary>
            <param name="removeStyle">The styles to be removed.  These can be bitwise combined.</param>
            <param name="addStyle">The styles to be added.  These can be bitwise combined.</param>
            <returns>Whether the styles of the HWND were modified as a result of this call.</returns>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:LdNet.MetroControls.Behaviours.GlowWindowBehavior.Update">
            <summary>
            Updates all glow windows (visible, hidden, collapsed)
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Behaviours.GlowWindowBehavior.SetOpacityTo(System.Double)">
            <summary>
            Sets the opacity to all glow windows
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Behaviours.GlowWindowBehavior.StartOpacityStoryboard">
            <summary>
            Starts the opacity storyboard 0 -> 1
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Behaviours.GlowWindowBehavior.Show">
            <summary>
            Shows all glow windows
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.AccordionAutomationPeer">
            <summary>
            Exposes Accordion types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:LdNet.MetroControls.AccordionAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            allows more than one child element to be selected concurrently.
            </summary>
            <returns>true if multiple selection is allowed; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.AccordionAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI Automation provider 
            requires at least one child element to be selected.
            </summary>
            <returns>true if selection is required; otherwise, false.
            </returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.AccordionAutomationPeer.OwnerAccordion">
            <summary>
            Gets the Accordion that owns this AccordionAutomationPeer.
            </summary>
            <value>The accordion.</value>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.#ctor(LdNet.MetroControls.MetroAccordion)">
            <summary>
            Initializes a new instance of the <see cref="T:LdNet.PlugIn.Controls.AccordionAutomationPeer" /> class.
            </summary>
            <param name="owner">The Accordion that is associated with this
            AccordionAutomationPeer.</param>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.CreateItemAutomationPeer(System.Object)">
            <summary>
            Exposes a data item  to UI Automation.
            </summary>
            <param name="item">The item to expose</param>
            <returns>The UI automation object associated with the item</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the Accordion that is associated
            with this AccordionAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>List AutomationControlType.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of 
            the <see cref="T:System.Windows.Controls.ItemsControl" /> that is 
            associated with this <see cref="T:LdNet.PlugIn.Controls.ItemsControlAutomationPeer" />.
            </summary>
            <returns>
            A collection of AccordionItemAutomationPeer elements, or null if the
            Accordion that is associated with this AccordionAutomationPeer is
            empty.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the Accordion that is associated with this
            AccordionAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name Accordion.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the Accordion that is associated
            with this AccordionAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI Automation provider for each child element that is 
            selected.
            </summary>
            <returns>An array of UI Automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:LdNet.MetroControls.AccordionButton">
            <summary>
            Represents the header for an accordion item.
            </summary>
            <remarks>By creating a seperate control, there is more flexibility in 
            the templating possibilities.</remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:LdNet.MetroControls.AccordionButton.ParentAccordionItem">
            <summary>
            Gets or sets a reference to the parent AccordionItem 
            of an AccordionButton.
            </summary>
            <value>The parent accordion item.</value>
        </member>
        <member name="M:LdNet.MetroControls.AccordionButton.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.AccordionButton.UpdateVisualState(System.Boolean)">
            <summary>
            Updates the state of the visual.
            </summary>
            <param name="useTransitions">If set to <c>true</c> use transitions.</param>
            <remarks>The header will follow the parent accordionitem states.</remarks>
        </member>
        <member name="T:LdNet.MetroControls.AccordionItemAutomationPeer">
            <summary>
            Exposes AccordionItem types to UI Automation.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:LdNet.MetroControls.AccordionItemAutomationPeer.OwnerAccordionItem">
            <summary>
            Gets the AccordionItem that owns this AccordionItemAutomationPeer.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the Accordion.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether the Accordion is selected.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements ISelectionProvider
            and acts as the container for the calling object.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
            <summary>
            Initializes a new instance of the AccordionAutomationPeer class.
            </summary>
            <param name="item">
            The item associated with this AutomationPeer 
            </param>
            <param name="itemsControlAutomationPeer">
            The Accordion that is associated with this item.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the AccordionItem that is associated
            with this AccordionItemAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Custom AutomationControlType.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the AccordionItem that is associated with this
            AccordionItemAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name AccordionItem.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the AccordionItem that is associated
            with this AccordionItemAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Collapses the AccordionItem.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Expands the AccordionItem.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the AccordionItem to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current Accordion from the collection of selected
            items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears selection from currently selected items and then proceeds to
            select the current Accordion.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:LdNet.MetroControls.AccordionItemWrapperAutomationPeer">
            <summary>
            Wraps an <see cref="T:System.Windows.Controls.AccordionItem" />.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.AccordionItemWrapperAutomationPeer.#ctor(LdNet.MetroControls.MetroAccordionItem)">
            <summary>
            Constructor
            </summary>
            <param name="item">The <see cref="T:System.Windows.Controls.AccordionItem" /> to wrap.</param>
        </member>
        <member name="T:LdNet.MetroControls.BaseMetroTabControl">
            <summary>
            A base class for every MetroTabControl (Pivot).
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.HeaderBackgroundBrushProperty">
            <summary>
            标题背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.IsUnderlinedProperty">
            <summary>
            是否存在下方横线
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.UnderlineSelectionBrushProperty">
            <summary>
            选中时下划线画刷
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.SelectedForegroundProperty">
            <summary>
            选中时字体颜色画刷
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.SelectedBackgroundBrushProperty">
            <summary>
            选中时背景画刷
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.UnderlineBrushProperty">
            <summary>
            下划线颜色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.UnderlineMouseOverBrushProperty">
            <summary>
            下划线鼠标覆盖时颜色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.BaseMetroTabControl.CloseTabCommandProperty">
            <summary>
            关闭Tab页命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.CloseTabCommand">
            <summary>
            获取和设置关闭Tab页命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.HeaderBackgroundBrush">
            <summary>
            获取或设置标题背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.IsUnderlined">
            <summary>
            获取或设置 是否存在下方横线
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.SelectedBackgroundBrush">
            <summary>
            获取或设置 选中时背景画刷
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.SelectedForeground">
            <summary>
            获取或设置 选中时字体颜色画刷
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.UnderlineBrush">
            <summary>
            获取或设置 下划线颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.UnderlineMouseOverBrush">
            <summary>
            获取或设置 下划线鼠标覆盖时颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.UnderlineSelectionBrush">
            <summary>
            获取或设置 选中时下划线画刷
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.BaseMetroTabControl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.BaseMetroTabControl.TabItemClosingEvent">
            <summary>
            Tab页关闭事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.BaseMetroTabControl.TabItemClosingEventArgs">
            <summary>
            Event args that is created when a TabItem is closed.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.BaseMetroTabControl.TabItemClosingEventArgs.ClosingTabItem">
            <summary>
            Gets the MetroTabItem that will be closed.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.BaseMetroTabControl.TabItemClosingEventHandler">
            <summary>
            Tab页关闭事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LdNet.MetroControls.ChineseAdorner">
            <summary>
            中文标签装饰器
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ChineseAdorner.#ctor(System.Windows.UIElement)">
            <summary>
            构造函数
            </summary>
            <param name="adornedElement"></param>
        </member>
        <member name="M:LdNet.MetroControls.CloseCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:LdNet.MetroControls.CloseCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="T:LdNet.MetroControls.ColorItem">
            <summary>
            颜色项对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ColorItem.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ColorItem.Name">
            <summary>
            颜色名称
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ColorItem.#ctor(System.Nullable{System.Windows.Media.Color},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="color"></param>
            <param name="name"></param>
        </member>
        <member name="M:LdNet.MetroControls.ColorItem.Equals(System.Object)">
            <summary>
            确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Object" />。
            </summary>
            <returns>
            如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:System.Object" />，则为 true；否则为 false。
            </returns>
            <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:LdNet.MetroControls.ColorItem.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>
            当前 <see cref="T:System.Object" /> 的哈希代码。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:LdNet.MetroControls.ColorUtilities.ConvertHsvToRgb(System.Double,System.Double,System.Double)">
            <summary>
             Converts an HSV color to an RGB color.
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ColorUtilities.ConvertRgbToHsv(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts an RGB color to an HSV color.
            </summary>
            <param name="r"></param>
            <param name="b"></param>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ColorUtilities.GenerateHsvSpectrum">
            <summary>
            Generates a list of colors with hues ranging from 0 360 and a saturation and value of 1. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.CurrencyUtility">
            <summary>
            金额相关工具类
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter">
            <summary>
            阿拉伯金融转换为中国金额（只支持到万亿，之后不支持）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.CTN">
            <summary>
            中文0-9
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.A_CTAU">
            <summary>
            大写金额
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.P_CTAU">
            <summary>
            大写金额单位
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.CONST_PARSE_MAX_INTEGRER_LENGTH">
            <summary>
            整数部分解析最大长度，目前是万亿
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.CONST_PARSE_MAX_DECIMAL_LENGTH">
            <summary>
            小数部分解析最大长度，目前是到厘
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.GetTraditionalChineseAmount(System.Decimal)">
            <summary>
            返回人民币繁体字样的金额
            </summary>
            <param name="amount">阿拉伯数字金额值</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.ConvertIntToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换整数为繁体字样 
            </summary>
            <param name="capValue">整数值</param>
            <param name="isZeroShow">是否显示零</param>
            <returns>返回整数的繁体金额</returns> 
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换小数为繁体字样
            </summary>
            <param name="capValue">小数值</param>
            <param name="addZero">是否增加零位</param>
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.LimitedA2CConverter.ConvertDecToTraditionalAmountLess4(System.String,System.Boolean)">
            <summary>
            针对小于等于4位小数位的情况
            </summary>
            <param name="capValue"></param>
            <param name="addZero"></param>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter">
            <summary> 
            阿拉伯金额转换为中国的金额
            </summary>
            <remarks> 
            http://wuu.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99
            http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E6%95%B0%E5%AD%97
            </remarks> 
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.CTN">
            <summary>
            Chinese Traditional Numbers
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.A_CTAU">
            <summary>
            All Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.P_CTAU">
            <summary>
            Part Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.ConvertDecToTraditionalAmountLess4(System.String,System.Boolean)">
            <summary>
            针对小于等于4位小数位的情况
            </summary>
            <param name="capValue"></param>
            <param name="addZero"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseAmountConverter.GetTraditionalChineseAmount(System.Decimal)">
            <summary>
            返回人民币繁体字样的金额
            </summary>
            <param name="amount">阿拉伯数字金额值</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="T:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter">
            <summary> 
            阿拉伯金额转换为中国的金额
            </summary>
            <remarks> 
            http://wuu.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99
            http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E6%95%B0%E5%AD%97
            </remarks> 
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.CTN">
            <summary>
            Chinese Traditional Numbers
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.A_CTAU">
            <summary>
            All Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.P_CTAU">
            <summary>
            Part Chinese Traditional Amount Unit
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertIntToTraditionalAmount(System.String,System.Boolean)">
            <summary>
            转换整数为繁体字样 
            </summary>
            <param name="capValue">整数值</param>
            <param name="isZeroShow">是否显示零</param>
            <returns>返回整数的繁体金额</returns> 
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertDecToTraditionalAmount(System.String,System.Boolean)">
            <returns>返回小数的繁体金额</returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.ConvertDecToTraditionalAmountMore4(System.String)">
            <summary>
            只针对大于4个小数位的情况
            </summary>
            <param name="capValue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.ArabiaToChineseNumberConverter.GetTraditionalChineseAmount(System.Decimal,System.String)">
            <summary>
            返回人民币繁体字样的数字
            </summary>
            <param name="amount">阿拉伯数字值</param>
            <param name="unit">单位</param>
            <returns>返回人民币繁体字样的数字</returns>
        </member>
        <member name="F:LdNet.MetroControls.CurrencyUtility.A2CConverter">
            <summary>
            阿拉伯金额转换为中国的金额
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.CurrencyUtility.IsUseA2CLimitedConverter">
            <summary>
            阿拉伯数字转换中文大写的时候使用O32类型的转换器
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.CurrencyUtility.GetTraditionalChineseAmount(System.Decimal,System.String)">
            <summary>
            返回人民币繁体字样的金额;如果小数位在上位内这以毫厘分的形式显示或者就以中文大写数字显示
            </summary>
            <param name="amount">阿拉伯数字金额值</param>
            <param name="unit">单位</param>
            <returns>返回人民币繁体字样的金额</returns>
        </member>
        <member name="T:LdNet.MetroControls.Controls.DataGridColumnsSet">
            <summary>
            DataGridColumnsSet.xaml 的交互逻辑
            </summary>
            <summary>
            DataGridColumnsSet
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Controls.DataGridColumnsSet.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Controls.FontSizeSettingView">
            <summary>
            FontSizeSettingView.xaml 的交互逻辑
            </summary>
            <summary>
            FontSizeSettingView
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Controls.FontSizeSettingView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.GestureEventArgs">
            <summary>
            鼠标手势事件对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.GestureEventArgs.Gesture">
            <summary>
            手势
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.GestureEventArgs.GestureAction">
            <summary>
            该手势代表的操作描述
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.GestureEventArgs.#ctor">
            <summary>
            初始化一个 鼠标手势事件对象
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.GestureEventArgs.#ctor(LdNet.MetroControls.Gesture)">
            <summary>
            初始化一个 鼠标手势事件对象
            </summary>
            <param name="gesture">手势</param>
        </member>
        <member name="T:LdNet.MetroControls.FilterToolDiscerningEventArgs">
            <summary>
            FilterToolDiscerningEvent事件参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterToolDiscerningEventArgs.BindingPath">
            <summary>
            获取 绑定该列的实体字段名称
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterToolDiscerningEventArgs.Column">
            <summary>
            获取 DataGidColumn
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterToolDiscerningEventArgs.ColumnHeader">
            <summary>
            获取 DataGidColumnHeader
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterToolDiscerningEventArgs.FilterCondtions">
            <summary>
            获取或设置 HsDataGrid当前列筛选面板中去重后的数据，在FilterToolDiscerning事件触发时默认为空
            <para>当有分页的情况时去重数据并不完整，建议在FilterToolDiscerning事件里对本参数进行赋值</para>
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.FilterCommittingEventArgs">
            <summary>
            FilterCommittingEvent事件参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.BindingPath">
            <summary>
            获取 绑定该列的实体字段名称
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.BlanksCommitted">
            <summary>
            是否筛选为空数据
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.Cancel">
            <summary>
            是否取消筛选
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.Column">
            <summary>
            获取 DataGidColumn
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.ColumnHeader">
            <summary>
            获取 DataGidColumnHeader
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.ConditionObjs">
            <summary>
            获取 筛选项集合,key-字段名，value-各字段对应取出的去重值集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCommittingEventArgs.NonBlanksCommitted">
            <summary>
            是否筛选非空数据
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ToolIconClickEventArgs">
            <summary>
            ToolIconClickEvent事件参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToolIconClickEventArgs.CancelPopupDisplay">
            <summary>
            是否取消打开列筛选浮动窗口
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToolIconClickEventArgs.DisableCheckColumns">
            <summary>
            不允许勾选的列
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.RowReplacingEventArgs">
            <summary>
            RowReplacingEvent事件参数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.RowReplacedEventArgs">
            <summary>
            RowReplacedEvent事件参数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.SelectIndexChangedEventArgs">
            <summary>
            SlectIndexChengedEventArgs
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SelectIndexChangedEventArgs.SelectIndex">
            <summary>
            SelectIndex
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.SelectIndexChangedEventArgs.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="selectIndex"></param>
        </member>
        <member name="T:LdNet.MetroControls.PageIndexChangedEventArgs">
            <summary>
            分页控件页码改变事件对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageIndexChangedEventArgs.PageIndex">
            <summary>
            选中页码
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageIndexChangedEventArgs.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.PageIndexChangedEventArgs.#ctor(System.Int32,System.UInt32)">
            <summary>
            构造函数
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
        </member>
        <member name="T:LdNet.MetroControls.CheckedStatusChangedEventArgs">
            <summary>
            选中状态路由事件参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.CheckedStatusChangedEventArgs.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.CheckedStatusChangedEventArgs.IsChecked">
            <summary>
            选中状态
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MouseHookHandler.MouseHookProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            鼠标钩子回调函数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.FilterToolDiscerningEventHandle">
            <summary>
            MetroDataGird的列筛选功能面板去重开始事件
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.FilterToolDiscerningEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.FilterCommittingEventHandle">
            <summary>
            MetroDataGird的列筛选提交开始事件
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.FilterCommittingEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.ToolIconClickEventHandle">
            <summary>
            MetroDataGird的列筛选图标点击事件
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.ToolIconClickEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.RowReplacingEventHandle">
            <summary>
            MetroDataGird的行置换开始事件
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.RowReplacingEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.RowReplacedEventHandle">
            <summary>
            MetroDataGird的行置换结束事件
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.RowReplacedEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.CheckedStatusChangedEventHandler">
            <summary>
            选中状态改变路由委托
            </summary>
            <param name="sender">发起者</param>
            <param name="e">路由参数<see cref="T:Metro.Controls.CheckedStatusChangedEventArgs" /></param>
        </member>
        <member name="P:LdNet.MetroControls.ExCommandParameter.EventArgs">
            <summary>
            事件参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExCommandParameter.Parameter">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExCommandParameter.Sender">
            <summary>
            事件触发源
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExInvokeCommandAction.Command">
            <summary>
            获取或设置此操作应调用的命令。这是依赖属性。
            </summary>
            <value>要执行的命令。</value>
            <remarks>如果设置了此属性和 CommandName 属性，则此属性将优先于后者。</remarks>
        </member>
        <member name="P:LdNet.MetroControls.ExInvokeCommandAction.CommandName">
            <summary>
            获得或设置此操作应调用的命令的名称。
            </summary>
            <value>此操作应调用的命令的名称。</value>
            <remarks>如果设置了此属性和 Command 属性，则此属性将被后者所取代。</remarks>
        </member>
        <member name="P:LdNet.MetroControls.ExInvokeCommandAction.CommandParameter">
            <summary>
            获得或设置命令参数。这是依赖属性。
            </summary>
            <value>命令参数。</value>
            <remarks>这是传递给 ICommand.CanExecute 和 ICommand.Execute 的值。</remarks>
        </member>
        <member name="M:LdNet.MetroControls.ExInvokeCommandAction.Invoke(System.Object)">
            <summary>
            调用操作。
            </summary>
            <param name="parameter">操作的参数。如果操作不需要参数，则可以将参数设置为空引用。</param>
        </member>
        <member name="T:LdNet.MetroControls.ExpandableContentControl">
            <summary>
            Represents a control with a single piece of content that expands or 
            collapses in a sliding motion to a specified desired size.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl._clippingRectangle">
            <summary>
            The Geometry used to clip this control. The control will potentially
            have less available space than the content it is arranging. That
            part will be clipped.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl.ElementContentSiteName">
            <summary>
            The name of the ContentSite template part.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl._contentSite">
            <summary>
            BackingField for the ContentSite property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl.RevealModeProperty">
            <summary>
            Identifies the RevealMode dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl.PercentageProperty">
            <summary>
            Identifies the Percentage dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ExpandableContentControl.TargetSizeProperty">
            <summary>
            Identifies the TargetSize dependency property.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.ContentSite">
            <summary>
            Gets or sets the ContentSite template part.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.IsHorizontalRevealMode">
            <summary>
            Gets a value indicating whether the content should be revealed horizontally.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.IsVerticalRevealMode">
            <summary>
            Gets a value indicating whether the content should be revealed vertically.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.Percentage">
            <summary>
            Gets or sets the relative percentage of the content that is 
            currently visible. A percentage of 1 corresponds to the complete
            TargetSize.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.RelevantContentSize">
            <summary>
            Gets the content current visible size.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.RevealMode">
            <summary>
            Gets or sets the direction in which the ExpandableContentControl 
            content window opens.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ExpandableContentControl.TargetSize">
            <summary>
            Gets or sets the desired size of the ExpandableContentControl content.
            </summary>
            <remarks>Use the percentage property to animate to this size.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:LdNet.PlugIn.Controls.ExpandableContentControl" /> class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LdNet.PlugIn.Controls.ExpandableContentControl" /> class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the control and its content. Content is arranged according
            to the TargetSize and clipped.
            </summary>
            <param name="finalSize">The final area within the parent that this 
            object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.CalculateDesiredContentSize">
            <summary>
            Interprets TargetSize.
            </summary>
            <returns>A size that can be safely used to measure content.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.CalculatePercentage(LdNet.MetroControls.ExpandableContentControl,System.Windows.Size)">
            <summary>
            Recalculates the percentage based on a new size.
            </summary>
            <param name="expandableContentControl">The control which is going to be evaluated</param>
            <param name="value">The new size used to base percentages on.</param>
            <returns>The new percentage value</returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.CoercePercentageProperty(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerce the percentage property as necessary.
            </summary>
            <param name="d"></param>
            <param name="baseValue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.MeasureContent(System.Windows.Size)">
            <summary>
            Measures the content with a specific size.
            </summary>
            <param name="desiredSize">The size passed to the content.</param>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Does a measure pass of the control and its content. The content will
            get measured according to the TargetSize and is clipped.
            </summary>
            <param name="availableSize">The available size that this object can 
            give to child objects. Infinity can be specified as a value to 
            indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based 
            on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ExpandableContentControl control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.OnContentSiteSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Raises the ContentSizeChanged event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.OnPercentagePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PercentageProperty property changed handler.
            </summary>
            <param name="d">Page that changed its Percentage.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.OnRevealModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            RevealModeProperty property changed handler.
            </summary>
            <param name="d">ExpandableContentControl that changed its RevealMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.OnTargetSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TargetSizeProperty property changed handler.
            </summary>
            <param name="d">ExpandableContentControl that changed its TargetSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.RecalculatePercentage(System.Windows.Size)">
            <summary>
            Recalculates the percentage based on a new size.
            </summary>
            <param name="value">The new size used to base percentages on.</param>
            <returns>The new percentage value</returns>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.SetNonRevealDimension">
            <summary>
            Sets the opposite dimension.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.SetRevealDimension">
            <summary>
            Sets the dimensions according to the current percentage.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExpandableContentControl.UpdateClip(System.Windows.Size)">
            <summary>
            Updates the clip geometry.
            </summary>
            <param name="arrangeSize">Size of the visible part of the control.</param>
        </member>
        <member name="E:LdNet.MetroControls.ExpandableContentControl.ContentSizeChanged">
            <summary>
            Occurs when the content changed its size.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.FilterCondition">
            <summary>
            HsDataGrid列查询条件实体
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCondition.IsChecked">
            <summary>
            是否勾选
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCondition.StrValue">
            <summary>
            当前实体数据的文字显示
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FilterCondition.Value">
            <summary>
            当前实体数据
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Gesture">
            <summary>
            手势对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Gesture.Directions">
            <summary>
            手势方向集合
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Gesture.#ctor">
            <summary>
            初始化一个 手势对象
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Gesture.#ctor(System.Collections.Generic.IEnumerable{LdNet.MetroControls.GestureDirection})">
            <summary>
            初始化一个 手势对象
            </summary>
            <param name="directions">手势方向集合</param>
        </member>
        <member name="M:LdNet.MetroControls.Gesture.GetHashCode">
            <summary>
            Gesture对象的哈希函数
            </summary>
            <returns>当前对象的哈希代码。</returns>
        </member>
        <member name="M:LdNet.MetroControls.Gesture.ToString">
            <summary>
            返回表示当前对象的字符串
            </summary>
            <returns>表示当前的Gesture对象的字符串</returns>
        </member>
        <member name="T:LdNet.MetroControls.MetroAccordion">
            <summary>
            手风箱控件，即可支持项伸缩和展开的列表控件
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._scheduledActions">
            <summary>
            目前正在等待执行的项集合
            </summary>
            <remarks>包含相关动作，包括展开、调整大小和显示状态</remarks>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.AccordionButtonStyleName">
            <summary>
            accordionbuttonstyle属性的名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isAllowedToWriteSelectedItems">
            <summary>
            SelectedItems是否允许可写
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isAllowedToWriteSelectedIndices">
            <summary>
            SelectedIndices是否可写
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isIgnoringSelectedIndicesChanges">
            <summary>
            是否允许忽略SelectedIndices的变化
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isIgnoringSelectedItemsChanges">
            <summary>
            是否允许忽略SelectedItems的变化
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isInSelectedItemsCollectionChanged">
            <summary>
            SelectedItems集合是否正在改变
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._isInSelectedIndicesCollectionChanged">
            <summary>
            SelectedIndices集合是否正在改变
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._currentActioningItem">
            <summary>
            当前执行的项
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._scrollView">
            <summary>
            滚动区域（来源于模板）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ExpandDirectionProperty">
            <summary>
            展开方向
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectionModeProperty">
            <summary>
            获取或设置 选中模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.BackgroundForSelectionProperty">
            <summary>
            获取或设置 选中时背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.BackgroundForMouseOverProperty">
            <summary>
            获取或设置 鼠标覆盖时背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ForegroundForSelectionProperty">
            <summary>
            获取或设置 选中时背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ForegroundForMouseOverProperty">
            <summary>
            获取或设置 鼠标覆盖时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ItemForegroundProperty">
            <summary>
            获取或设置 鼠标覆盖时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ButtonHeightProperty">
            <summary>
            获取或设置 项按钮高度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._selectedItemNestedLevel">
            <summary>
            Nested level for SelectedItemCoercion.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion._selectedIndexNestedLevel">
            <summary>
            Coercion level.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectionSequenceProperty">
            <summary>
            Identifies the SelectionSequence dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectedIndicesProperty">
            <summary>
            Identifies the SelectedIndices dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.AccordionButtonStyleProperty">
            <summary>
            Identifies the AccordionButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordion.SelectionChangedEvent">
            <summary>
            Occurs when the SelectedItem or SelectedItems property value changes.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.AccordionButtonStyle">
            <summary>
            Gets or sets the Style that is applied to AccordionButton elements
            in the AccordionItems.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.BackgroundForMouseOver">
            <summary>
            鼠标覆盖时背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.BackgroundForSelection">
            <summary>
            选中时背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ButtonHeight">
            <summary>
            项按钮高度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ContentTemplate">
            <summary>
            Gets or sets the DataTemplate used to display the content 
            of each generated AccordionItem. 
            </summary>
            <remarks>Either ContentTemplate or ItemTemplate is used. 
            Setting both will result in an exception.</remarks>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ExpandDirection">
            <summary>
            获取或设置 展开方向
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ForegroundForMouseOver">
            <summary>
            鼠标覆盖时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ForegroundForSelection">
            <summary>
            选中时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.Interaction">
            <summary>
            交互功能帮助类
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.IsMaximumOneSelected">
            <summary>
            Gets a value indicating whether at most one item is selected at all times.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.IsMinimumOneSelected">
            <summary>
            Gets a value indicating whether at least one item is selected at 
            all times.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.IsResizing">
            <summary>
            当前控件是否正在调整尺寸
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.IsShouldFillHeight">
            <summary>
            Gets a value indicating whether the accordion fills height.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.IsShouldFillWidth">
            <summary>
            Gets a value indicating whether the accordion fills width.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ItemForeground">
            <summary>
            行前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.ItemsControlHelper">
            <summary>
            ItemsControl相关帮助类
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected AccordionItem.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectedIndices">
            <summary>
            Gets the indices of the currently selected AccordionItems.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <remarks>
            The default value is null.
            When multiple items are allowed (IsMaximumOneSelected false), 
            return the first of the selectedItems.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <remarks>Does not allow setting.</remarks>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectionMode">
            <summary>
            选中模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.SelectionSequence">
            <summary>
            Gets or sets the SelectionSequence used to determine 
            the order of AccordionItem selection.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordion.VerticalOffset">
            <summary>
            获取一个值，该值包含滚动内容的垂直偏移量。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LdNet.PlugIn.Controls.MetroAccordion" /> class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.ChangeSelectedIndex(System.Int32,System.Int32)">
            <summary>
            Changes the selected item, by unselecting and selecting where 
            necessary.
            </summary>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 
            method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item that should be cleared.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given 
            item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.LdNet#MetroControls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.InitializeNewItemsSource">
            <summary>
            Initializes the SelectedItem property when a new ItemsSource is set.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own 
            container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            True if the item is (or is eligible to be) its own container; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.IsValidIndexForSelection(System.Int32)">
            <summary>
            Determines whether the new value can be selected.
            </summary>
            <param name="newValue">The new value.</param>
            <returns>
            <c>True</c> if this item can be selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.IsValidItemForSelection(System.Object)">
            <summary>
            Determines whether the new value can be selected.
            </summary>
            <param name="newValue">The new value.</param>
            <returns>
            <c>True</c> if this item can be selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.LayoutChildren">
            <summary>
            Determines and sets the height of the accordion items.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnAccordionButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AccordionButtonStyleProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its AccordionButtonStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnAccordionItemSelected(LdNet.MetroControls.MetroAccordionItem)">
            <summary>
            Called when an AccordionItem selected.
            </summary>
            <param name="accordionItem">The accordion item that was selected.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnAccordionItemUnselected(LdNet.MetroControls.MetroAccordionItem)">
            <summary>
            Called when an AccordionItem is unselected.
            </summary>
            <param name="accordionItem">The accordion item that was unselected.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnAccordionSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the size of the Accordion changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnActionFinish(LdNet.MetroControls.MetroAccordionItem)">
            <summary>
            Signals the finish of an action by an item.
            </summary>
            <param name="item">The AccordionItem that finishes an action.</param>
            <remarks>An AccordionItem should always signal a finish, for this call
            will start the next scheduled action.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Accordion control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnCreateAutomationPeer">
            <summary>
            Returns a AccordionAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A AccordionAutomationPeer object for the Accordion.</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            展开方向属性发生改变后执行相关逻辑
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnHeaderSizeChange(LdNet.MetroControls.MetroAccordionItem)">
            <summary>
            Called when size of a Header on the item changes.
            </summary>
            <param name="item">The item whose Header changed.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 
            property changes.
            </summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndexProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its SelectedIndex.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedIndicesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler of SelectedIndices.
            </summary>
            <param name="d">Accordion that changed the collection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedIndicesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when selected indices collection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedItemChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the SelectedItemChanged event when the SelectedItem 
            property value changes.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">Accordion that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler of SelectedItems.
            </summary>
            <param name="d">Accordion that changed the collection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectedItemsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when selected items collection changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectionModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            选中模式改变后
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.OnSelectionSequencePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when SelectionSequenceProperty changed.
            </summary>
            <param name="d">Accordion that changed its SelectionSequence property.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.ProposeSelectedIndexCandidate(System.Int32)">
            <summary>
            Gets an item that is suitable for selection.
            </summary>
            <param name="nonCandidateIndex">Index that should not be considered if 
            possible.</param>
            <returns>An item that should be selected. This could be nonCandidateIndex, 
            if no other possibility was found.</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.RaiseOnSelectedItemsCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise the SelectedItemsCollectionChanged event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 
            instance containing the event data.</param>
            <remarks>This event is raised after the changes to the collection 
            have been processed.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.ScheduleAction(LdNet.MetroControls.MetroAccordionItem,LdNet.MetroControls.AccordionAction)">
            <summary>
            Allows an AccordionItem to signal the need for a visual action 
            (resize, collapse, expand).
            </summary>
            <param name="item">The AccordionItem that signals for a schedule.</param>
            <param name="action">The action it is scheduling for.</param>
            <returns>True if the item is allowed to proceed without scheduling, 
            false if the item needs to wait for a signal to execute the action.</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.ScrollToVerticalOffset(System.Double)">
            <summary>
            将ScrollView中的内容滚动到指定的垂直偏移量位置。
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.SelectAll">
            <summary>
            Selects all the AccordionItems in the Accordion control.
            </summary>
            <remarks>If the Accordion SelectionMode is OneOrMore or ZeroOrMore all 
            AccordionItems would be selected. If the Accordion SelectionMode is 
            One or ZeroOrOne all items would be selected and unselected. Only 
            the last AccordionItem would remain selected. </remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.SelectItem(System.Int32)">
            <summary>
            Selects the item.
            </summary>
            <param name="index">The index of the item to select.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.SetLockedProperties">
            <summary>
            Sets the locked properties on all the items.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.SetPanelOrientation">
            <summary>
            设置容器的对齐方式
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.StartNextAction">
            <summary>
            Starts the next action in the list, in a particular order.
            </summary>
            <remarks>An AccordionItem is should always signal that it is 
            finished with an action.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.UnselectAll">
            <summary>
            Unselects all the AccordionItems in the Accordion control.
            </summary>
            <remarks>If the Accordion SelectionMode is Zero or ZeroOrMore all 
            AccordionItems would be Unselected. If SelectionMode is One or  
            OneOrMode  than all items would be Unselected and selected. Only the 
            first AccordionItem would still be selected.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.UnselectItem(System.Int32,System.Object)">
            <summary>
            Unselects the item.
            </summary>
            <param name="index">The index of the item that will be unselected.</param>
            <param name="item">The item that will be unselected. Can be null.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.UpdateAccordionItemsSelection(System.Boolean)">
            <summary>
            Updates all accordionItems to be selected or unselected.
            </summary>
            <param name="selectedValue">True to select all items, false to unselect.</param>
            <remarks>Will not attempt to change a locked accordionItem.</remarks>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordion.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="E:LdNet.MetroControls.MetroAccordion.SelectedItemsChanged">
            <summary>
            Occurs when the SelectedItems collection changes.
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroAccordion.SelectionChanged">
            <summary>
            Occurs when the SelectedItem or SelectedItems property value changes.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:LdNet.MetroControls.MetroAccordionItem">
            <summary>
            Represents a control that displays a header and has a collapsible 
            content window.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.ElementExpandSiteName">
            <summary>
            The name of the ExpandSite template part.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's 
            used to select and unselect this AccordionItem.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._expandSite">
            <summary>
            BackingField for the ExpandSite property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._isBusyWithAction">
            <summary>
            Indicates that the control is currently executing an action.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._allowedToWriteExpandDirection">
            <summary>
            Determines whether the ExpandDirection property may be written.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection dependency property. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._isSelectedNestedLevel">
            <summary>
            Nested level for IsSelectedCoercion.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._isLocked">
            <summary>
            BackingField for IsLocked.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.AccordionButtonStyleProperty">
            <summary>
            Identifies the AccordionButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.ExpandableContentControlStyleProperty">
            <summary>
            Identifies the ExpandableContentControlStyle dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._allowedToWriteContentTargetSize">
            <summary>
            Determines whether it is allowed to set the ContentTargetSize
            property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.ContentTargetSizeProperty">
            <summary>
            Identifies the ContentTargetSize dependency property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.SelectedEvent">
            <summary>
            Occurs when the accordionItem is selected.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem.UnselectedEvent">
            <summary>
            Occurs when the accordionItem is unselected.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroAccordionItem._interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.AccordionButtonStyle">
            <summary>
            Gets or sets the Style used by AccordionButton.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ContentTargetSize">
            <summary>
            Gets the Size that the content will animate to.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ExpandableContentControlStyle">
            <summary>
            Gets or sets the Style used by ExpandableContentControl.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ExpandDirection">
            <summary>
            Gets the direction in which the AccordionItem content window opens.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ExpandSite">
            <summary>
            Gets or sets the expand site template part.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.IsLocked">
            <summary>
            Gets a value indicating whether the AccordionItem cannot be 
            selected by the user.
            </summary>
            <value><c>True</c> if this instance is locked; otherwise, <c>false</c>.</value>
            <remarks>The IsSelected property may not be changed when the 
            AccordionItem is locked. Locking occurs when the item is the first 
            in the list, the SelectionMode of Accordion requires atleast one selected
            AccordionItem and the AccordionItem is currently selected.</remarks>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the AccordionItem is 
            selected and its content window is visible.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ParentAccordion">
            <summary>
            Gets or sets a reference to the parent Accordion of an
            AccordionItem.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.RelevantContentSize">
            <summary>
            Gets the relevant size of the current content.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ScheduledAction">
            <summary>
            Gets the scheduled action.
            </summary>
            <value>The scheduled action.</value>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ShouldFillHeight">
            <summary>
            Gets a value indicating whether the AccordionItem fills height.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroAccordionItem.ShouldFillWidth">
            <summary>
            Gets a value indicating whether the AccordionItem fills width.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.#ctor">
            <summary>
            Initializes a new instance of the AccordionItem class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.HasDefaultValue(System.Windows.Controls.Control,System.Windows.DependencyProperty)">
            <summary>
            Check whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>
            True if the property has the default value; false otherwise.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.LdNet#MetroControls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnAccordionButtonStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when AccordionButtonStyle is changed.
            </summary>
            <param name="oldStyle">The old style.</param>
            <param name="newStyle">The new style.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnAccordionButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AccordionButtonStyleProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its AccordionButtonStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the AccordionItem control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnContentTargetSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentTargetSizeProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its ContentTargetSize.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnCreateAutomationPeer">
            <summary>
            Returns a AccordionItemAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>A AccordionItemAutomationPeer object for the AccordionItem.</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnExpandableContentControlStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when ExpandableContentControlStyle is changed.
            </summary>
            <param name="oldStyle">The old style.</param>
            <param name="newStyle">The new style.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnExpandableContentControlStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandableContentControlStyleProperty property changed handler.
            </summary>
            <param name="d">AccordionItem that changed its ExpandableContentControlStyle.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static 
            function.
            This function validates the new value before calling virtual function 
            OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is 
            changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains 
            the old and new values.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnExpandSiteContentSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the content changes size.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnHeaderSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when the size of the control changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the 
            old and new values.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonDown event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the MouseLeftButtonUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnSelected">
            <summary>
            Raises the Selected event when the IsSelected property changes 
            from false to true.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.OnUnselected">
            <summary>
            Raises the Unselected event when the IsSelected property changes 
            from true to false.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.PreparePrepareHeaderedContentControlContainerForItemOverride(System.Windows.Controls.HeaderedContentControl,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
            <param name="parent">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.Schedule(LdNet.MetroControls.AccordionAction)">
            <summary>
            Schedules the specified action.
            </summary>
            <param name="action">The action to be performed.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.StartAction">
            <summary>
            Starts an action, such as resize, collapse or expand.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.ToggleSelected(System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsSelected property.
            </summary>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroAccordionItem.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="E:LdNet.MetroControls.MetroAccordionItem.Selected">
            <summary>
            Occurs when the accordionItem is selected.
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroAccordionItem.Unselected">
            <summary>
            Occurs when the accordionItem is unselected.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroColorCanvas">
            <summary>
            颜色选择面板
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroColorPicker">
            <summary>
            颜色选择控件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.AdvancedButtonHeaderProperty">
            <summary>
            高级按钮文本属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.AvailableColorsProperty">
            <summary>
            常用颜色集合属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.AvailableColorsSortingModeProperty">
            <summary>
            常用颜色集合排序模式属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.AvailableColorsHeaderProperty">
            <summary>
            常用颜色文本属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ButtonStyleProperty">
            <summary>
            按钮样式属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.DisplayColorAndNameProperty">
            <summary>
            是否显示颜色和名称属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ColorModeProperty">
            <summary>
            颜色模式属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.IsOpenProperty">
            <summary>
            下拉框是否打开属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.RecentColorsProperty">
            <summary>
            最近颜色属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.RecentColorsHeaderProperty">
            <summary>
            最近颜色文本属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.SelectedColorProperty">
            <summary>
            选中的颜色属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.SelectedColorTextProperty">
            <summary>
            选中的颜色名称属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ShowAdvancedButtonProperty">
            <summary>
            是否显示高级按钮属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ShowAvailableColorsProperty">
            <summary>
            是否显示常用颜色属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ShowRecentColorsProperty">
            <summary>
            是否显示最近颜色属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ShowStandardColorsProperty">
            <summary>
            是否显示标准颜色属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.ShowDropDownButtonProperty">
            <summary>
            是否显示下拉按钮属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.StandardButtonHeaderProperty">
            <summary>
            标准按钮文本属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.StandardColorsProperty">
            <summary>
            标准颜色集合属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.StandardColorsHeaderProperty">
            <summary>
            标准颜色按钮文本属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.UsingAlphaChannelProperty">
            <summary>
            是否使用透明通道属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroColorPicker.SelectedColorChangedEvent">
            <summary>
            选择的颜色改变事件
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.AdvancedButtonHeader">
            <summary>
            高级按钮文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.AvailableColors">
            <summary>
            可用颜色集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.AvailableColorsHeader">
            <summary>
            常用颜色文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.AvailableColorsSortingMode">
            <summary>
            常用颜色集合排序模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ButtonStyle">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ColorMode">
            <summary>
            颜色模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.DisplayColorAndName">
            <summary>
            是否显示颜色和名称
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.IsOpen">
            <summary>
            下拉框是否打开
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.RecentColors">
            <summary>
            最近颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.RecentColorsHeader">
            <summary>
            最近颜色文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.SelectedColor">
            <summary>
            选中的颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.SelectedColorText">
            <summary>
            选中的颜色名称
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ShowAdvancedButton">
            <summary>
            是否显示高级按钮
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ShowAvailableColors">
            <summary>
            是否显示常用颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ShowDropDownButton">
            <summary>
            是否显示下拉按钮
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ShowRecentColors">
            <summary>
            是否显示最近颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.ShowStandardColors">
            <summary>
            是否显示标准颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.StandardButtonHeader">
            <summary>
            标准按钮文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.StandardColors">
            <summary>
            标准颜色集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.StandardColorsHeader">
            <summary>
            标准颜色按钮文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroColorPicker.UsingAlphaChannel">
            <summary>
            是否使用透明通道
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroColorPicker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroColorPicker.OnApplyTemplate">
            <summary>
            在派生类中重写后，每当应用程序代码或内部进程调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，都将调用此方法。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroColorPicker.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            当未处理的 <see cref="E:System.Windows.Input.Mouse.MouseUp" /> 路由事件在其路由中到达派生自此类的元素时，调用此方法。实现此方法可为此事件添加类处理。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。事件数据将报告已释放了鼠标按钮。</param>
        </member>
        <member name="E:LdNet.MetroControls.MetroColorPicker.SelectedColorChanged">
            <summary>
            选择的颜色改变事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBoxPopup.GetActiveWindow">
            <summary>
            获取当前激活窗口句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBoxPopup.IsWindow(System.IntPtr)">
            <summary>
            判断窗口句柄是否是Window
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBoxPopup.OnOpened(System.EventArgs)">
            <summary>  
            重写拉开方法，置于非最前  
            </summary>  
            <param name="e"></param>  
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBoxPopup.UpdateWindow">
            <summary>  
            刷新Popup层级  
            </summary>  
        </member>
        <member name="T:LdNet.MetroControls.MetroContentControl">
            <summary>
            Originally from http://xamlcoder.com/blog/2010/11/04/creating-a-metro-ui-style-control/
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroContextMenu">
            <summary>
            MetroContextMenu.xaml 的交互逻辑
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.BottomOffset">
            <summary>
            下边平移量
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.CornerRadius">
            <summary>
            圆角属性
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.IsBottom">
            <summary>
            是否显示在目标控件的下端
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.IsPolygonVisible">
            <summary>
            是否显示三角形
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.ItemMouseOverBackground">
            <summary>
            获取或设置 项鼠标移上去背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroContextMenu.ItemMouseOverForeground">
            <summary>
            获取或设置 项鼠标移上去前景色
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroContextMenu.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroContextMenu.OnApplyTemplate">
            <summary>
            加载模板时
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
            <summary>
            打开菜单时
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:LdNet.MetroControls.MetroMenuControl">
            <summary>
            MetroMenuControl
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMenuControl.HeaderItemsSourceProperty">
            <summary>
            头部项集合数据源
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMenuControl.MenuItemsSourceProperty">
            <summary>
            菜单项集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMenuControl.HeaderItemTemplateProperty">
            <summary>
            头部项内容模板
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMenuControl.HeaderItemsSource">
            <summary>
             获取或设置 头部项集合数据源
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMenuControl.HeaderItemTemplate">
            <summary>
             获取或设置 头部项内容模板
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMenuControl.HeaderMouseMoveCommand">
            <summary>
            头部鼠标移动命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMenuControl.MenuItemsSource">
            <summary>
             获取或设置 菜单项集合
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMenuControl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMenuControl.GetImageSource(System.Windows.FrameworkElement,System.Nullable{System.Windows.Rect})">
            <summary>
            根据控件获取图片
            </summary>
            <param name="element">控件</param>
            <param name="imgRect">截取的范围</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMenuControl.OnApplyTemplate">
            <summary>
            重写基类OnApplyTemplate
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMenuControl.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="T:LdNet.MetroControls.MetroDataGrid">
            <summary>
            自定义列表控件
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.OutPutFileName">
            <summary>
            获取或设置列显示文件配置文件名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.HeaderBorderThicknessProperty">
            <summary>
            列表头部边框的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DataGridHeaderBackgroundMouseOverBrushProperty">
            <summary>
            头部背景鼠标移动色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DataGridRowBackgroundMouseOverBrushProperty">
            <summary>
            行背景鼠标移动色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DataGridRowBorderMouseOverBrushProperty">
            <summary>
            行边框鼠标移动色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DataGridRowBackgroundSelectedBrushProperty">
            <summary>
            行背景鼠标选中色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.RowMouseOverForegroundProperty">
            <summary>
            鼠标覆盖时行前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.RowSelectedForegroundProperty">
            <summary>
            行选中时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DataGridRowBorderSelectedBrushProperty">
            <summary>
            行边框鼠标选中色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.CellMarginProperty">
            <summary>
            单元格的边距
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ColumnFilterModelProperty">
            <summary>
             列筛选模式，默认为And
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.EnableToolIconProperty">
            <summary>
             是否显示工具悬浮图标，当鼠标进入控件时
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ToolIconResourceKeyProperty">
            <summary>
             是否显示工具悬浮图标，当鼠标进入控件时
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ToolIconSizeProperty">
            <summary>
             工具悬浮图标大小
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ToolIconLocationProperty">
            <summary>
             工具悬浮图标的当前左上角坐标
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.LoadingMaskTemplateProperty">
            <summary>
             加载过程中的遮罩模版
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.LoadingMaskVisibilityProperty">
            <summary>
             是否显示加载遮罩
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.LoadingMaskValueProperty">
            <summary>
             加载遮罩中显示的进度值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.DetailDisplayModelProperty">
            <summary>
             Detail模版内容显示的模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ExpanderArrowResourceKeyProperty">
            <summary>
             获取或设置带二级内容的展开图标
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.SelectAllButtonStyleActivatedProperty">
            <summary>
             是否启用全选按钮样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.IsScrollBarStretchProperty">
            <summary>
             获取或设置是否将滚动条撑满
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ScrollViewBackgroundProperty">
            <summary>
             获取或设置滚动容器背景
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.FilteredCollectionProperty">
            <summary>
            筛选后数据集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.CanReplaceRowProperty">
            <summary>
             获取或设置是否开启行置换
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.RowBorderBrushWhenReplaceRowProperty">
            <summary>
             获取或设置在置换行时移到某个行时其边框色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.CanHeaderScrollProperty">
            <summary>
             获取或设置是否开启表头滚动
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.CanCreateAutoColumnProperty">
            <summary>
             获取或设置是否开启自动生成列填补空白区域
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ExpandModeProperty">
            <summary>
            获取或设置展开模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.FilterCheckBoxStyleProperty">
            <summary>
            获取或设置筛选浮出框的勾选框样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.IsCfpCloseWhenBtnCommitProperty">
            <summary>
             获取或设置是否点击确定关闭筛选条件窗口
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.FilterToolDiscerningEvent">
            <summary>
            列筛选面板打开后去重开始事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.FilterCommittingEvent">
            <summary>
            列筛选提交开始事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ColumnsDisplayChangedEvent">
            <summary>
            列选择变化事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.ToolIconClickEvent">
            <summary>
            列筛选图标点击事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.RowReplacingEvent">
            <summary>
            行置换开始事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.RowReplacedEvent">
            <summary>
            行置换结束事件
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ColumnSetFileName">
            <summary>
            获取或设置列显示文件配置文件名称
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.CanCreateAutoColumn">
            <summary>
            获取或设置是否开启自动生成列填补空白区域
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.RefreshTotalRow">
            <summary>
            获取或设置是否刷新汇总行
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.CanHeaderScroll">
            <summary>
            获取或设置是否开启表头滚动
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.CanReplaceRow">
            <summary>
            获取或设置是否开启行置换
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.CellMargin">
            <summary>
            获取或设置 单元格的边距
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ColumnFilterModel">
            <summary>
            获取或设置 列筛选模式，默认为And
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridColumnHeaderLoadedCommand">
            <summary>
            DataGridColumnHeader加载命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridHeaderBackgroundMouseOverBrush">
            <summary>
            获取或设置 头部背景鼠标移动色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridRowBackgroundMouseOverBrush">
            <summary>
            获取或设置 行背景鼠标移动色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridRowBackgroundSelectedBrush">
            <summary>
            获取或设置 行背景鼠标选中色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridRowBorderMouseOverBrush">
            <summary>
            获取或设置 行边框鼠标移动色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DataGridRowBorderSelectedBrush">
            <summary>
            获取或设置 行边框鼠标选中色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.DetailDisplayModel">
            <summary>
            获取或设置 Detail模版内容显示的模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.EnableToolIcon">
            <summary>
            获取或设置 是否显示工具悬浮图标，当鼠标进入控件时
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ExpanderArrowResourceKey">
            <summary>
            获取或设置带二级内容的展开图标
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ExpandMode">
            <summary>
            获取或设置展开模式
            <para>默认为ZeroOrMore模式</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.FilterCheckBoxStyle">
            <summary>
            获取或设置筛选浮出框的勾选框样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.FilterCommand">
            <summary>
            头部筛选命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.FilteredCollection">
            <summary>
            获取筛选后数据集合
            <para>没有筛选条件时，集合为null。</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.HeaderBorderThickness">
            <summary>
            获取或设置列表头部边框的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.IsCfpCloseWhenBtnCommit">
            <summary>
            获取或设置是否点击确定关闭筛选条件窗口
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.IsScrollBarStretch">
            <summary>
            获取或设置是否将滚动条撑满
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.LoadingMaskTemplate">
            <summary>
            获取或设置 加载过程中的遮罩模版
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.LoadingMaskValue">
            <summary>
            获取或设置 加载遮罩中显示的进度值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.LoadingMaskVisibility">
            <summary>
            获取或设置 是否显示加载遮罩
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ResetFilterCommand">
            <summary>
            重置数据筛选命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.RowBorderBrushWhenReplaceRow">
            <summary>
            获取或设置在置换行时移到某个行时其边框色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.RowExpanderBtnCommand">
            <summary>
            行展开收缩按钮命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.RowMouseOverForeground">
            <summary>
            获取或设置 鼠标覆盖时行前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.RowSelectedForeground">
            <summary>
            获取或设置 行选中时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ScrollViewBackground">
            <summary>
            获取或设置滚动容器背景
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.SearchFilterCommand">
            <summary>
            搜索数据筛选命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.SelectAllButtonStyleActivated">
            <summary>
            获取或设置是否启用全选按钮样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.StartFilterCommand">
            <summary>
            开始数据筛选命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ToolIconLocation">
            <summary>
            获取或设置 工具悬浮图标的当前左上角坐标
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ToolIconResourceKey">
            <summary>
            获取或设置 是否显示工具悬浮图标，当鼠标进入控件时
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDataGrid.ToolIconSize">
            <summary>
            获取或设置 工具悬浮图标大小
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.InitExcelObject(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.IEnumerable,System.Int32)">
            <summary>
            exportType=0 生成模板 1 导出数据
            </summary>
            <param name="Columns1"></param>
            <param name="ItemsSource1"></param>
            <param name="exportType"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.CollectionView_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            筛选视图更改时，相应改变筛选集合
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.EnforceInstance``1(System.String)">
            <summary>
            找到模板子元素
            </summary>
            <typeparam name="T">子元素的类型</typeparam>
            <param name="partName">子元素的Name</param>
            <returns>返回子元素对象</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate方法，为了相关模板控件及验证绑定
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGrid.CustomCalTotalDic">
            <summary>
            自定义汇总计算方法集合，字段名-计算方法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetColumnToolPopupChildren(System.Windows.DependencyObject)">
            <summary>
            获取ColumnToolPopup的子集（需要的子集）
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetElementsByVisualTree(System.Windows.DependencyObject)">
            <summary>
            利用视觉树获取当前控件需要的元素
            </summary>
            <param name="parent">当前父节点</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetImageSource(System.Windows.FrameworkElement,System.Nullable{System.Windows.Rect})">
            <summary>
            根据控件获取图片
            </summary>
            <param name="element">控件</param>
            <param name="imgRect">截取的范围</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetPartElements">
            <summary>
            获取当前所需的所有控件元素。
            注：此方法为了优化视觉树查找及逻辑树的效率，尽量在更少的树遍历次数中获取到所有元素
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetPropertyInfo(System.Collections.IEnumerable,System.String)">
            <summary>
            反射获取当前属性信息
            </summary>
            <param name="itemsSource">数据源</param>
            <param name="path">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetPropertyInfos(System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            反射获取当前属性信息集合
            </summary>
            <param name="itemsSource">数据源</param>
            <param name="paths">字段名称集合</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.GetScrollViewer">
            <summary>
            获取当前的滚动容器
            </summary>
            <returns>滚动容器</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.EnableExport(System.Boolean)">
            <summary>
            UI线程中处理
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.MetroDataGrid_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            加载事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.Match(System.Object,System.Object)">
            <summary>
            检查2个对象相等
            <para>注：此方法只适用于值类型及文本型对象</para>
            </summary>
            <param name="A">对象A</param>
            <param name="B">对象B</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnColumnsDisplayChanged(System.Windows.RoutedEventArgs)">
            <summary>
            响应ColumnsDisplayChanged事件
            </summary>
            <param name="args">参数<see cref="T:System.Windows.RoutedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnFilterCommitting(LdNet.MetroControls.FilterCommittingEventArgs)">
            <summary>
            响应FilterCommitting事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.FilterCommittingEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnFilterToolDiscerning(LdNet.MetroControls.FilterToolDiscerningEventArgs)">
            <summary>
            响应FilterToolDiscerning事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.FilterToolDiscerningEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            重写基类OnItemsSourceChanged事件方法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnRowReplaced(LdNet.MetroControls.RowReplacedEventArgs)">
            <summary>
            响应RowReplaced事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.RowReplacedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnRowReplacing(LdNet.MetroControls.RowReplacingEventArgs)">
            <summary>
            响应RowReplacing事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.RowReplacingEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.OnToolIconClick(LdNet.MetroControls.ToolIconClickEventArgs)">
            <summary>
            响应ToolIconClick事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.FilterCommittingEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.ResetFilterConditions">
            <summary>
            重置筛选条件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.SetCanReplaceRow(System.Boolean)">
            <summary>
            CanReplaceRow属性的设置逻辑
            </summary>
            <param name="canReplaceRow"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGrid.SetToolIconLocation(System.Windows.Point)">
            <summary>
            ToolIconLocation属性的设置逻辑
            </summary>
            <param name="point"></param>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.ColumnsDisplayChanged">
            <summary>
            列选择变化事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.FilterCommitting">
            <summary>
            列筛选提交开始事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.FilterToolDiscerning">
            <summary>
            列筛选面板打开后去重开始事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.RowReplaced">
            <summary>
            行置换结束事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.RowReplacing">
            <summary>
            行置换开始事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDataGrid.ToolIconClick">
            <summary>
            列筛选图标点击事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.GenerateReport(System.Int32)">
            <summary>
            生成报表，和其他功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.SaveExcel(System.Int32)">
            <summary>
            展示 Excel 程序
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.FillSheet">
            <summary>
            填充 Excel sheet
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.GenerateExportData">
            <summary>
            UI线程生成数据
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.WriteData(System.Windows.Data.Binding[])">
            <summary>
            将数据写入 Excel sheet(已废弃)
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.AutoFitColumns(System.String,System.Int32,System.Int32)">
            <summary>
            根据数据拟合 列
            </summary>  .
            <param name="startRange"></param>
            <param name="rowCount"></param>
            <param name="colCount"></param>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.CreateHeader">
            <summary>
            根据属性名创建列标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.SetHeaderStyle">
            <summary>
            列标题设置为加粗字体
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.AddExcelRows(System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            添加行
            </summary>
            <param name="startRange"></param>
            <param name="rowCount"></param>
            <param name="colCount"></param>
            <param name="values"></param>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.CreateExcelRef">
            <summary>
            创建 Excel 传递的参数实例
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ExportToExcel.ReleaseObject(System.Object)">
            <summary>
            释放未使用的对象
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:LdNet.MetroControls.DataGridHelper.GetCell(System.Windows.Controls.DataGrid,System.Int32,System.Int32)">
            <summary>
            获取DataGrid控件单元格
            </summary>
            <param name="dataGrid">DataGrid控件</param>
            <param name="rowIndex">单元格所在的行号</param>
            <param name="columnIndex">单元格所在的列号</param>
            <returns>指定的单元格</returns>
        </member>
        <member name="M:LdNet.MetroControls.DataGridHelper.GetRow(System.Windows.Controls.DataGrid,System.Int32)">
            <summary>
            获取DataGrid的行
            </summary>
            <param name="dataGrid">DataGrid控件</param>
            <param name="rowIndex">DataGrid行号</param>
            <returns>指定的行号</returns>
        </member>
        <member name="M:LdNet.MetroControls.DataGridHelper.GetVisualChild``1(System.Windows.Media.Visual)">
            <summary>
            获取父可视对象中第一个指定类型的子可视对象
            </summary>
            <typeparam name="T">可视对象类型</typeparam>
            <param name="parent">父可视对象</param>
            <returns>第一个指定类型的子可视对象</returns>
        </member>
        <member name="P:LdNet.MetroControls.SingleColumn.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SingleColumn.IsVisiblity">
            <summary>
            IsVisiblity
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SingleColumn.isTotalRow">
            <summary>
            列统计模式,0 不统计 1 求和 2 求平均
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SingleColumn.Width">
            <summary>
            实际列宽
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SingleColumn.displayIndex">
            <summary>
            列顺序
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroDataGridColumnService">
            <summary>
            MetroDataGrid中涉及到Column所用到的一些服务
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.EnableFilterProperty">
            <summary>
            DataGridColumn是否开启筛选。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.FilterPathProperty">
            <summary>
            DataGridColumn筛选的实体字段，默认为DataGridColumn中绑定的字段，比如DataGridTextColumn中的Binding，如果模版列需指定此字段方可使用列筛选功能
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.FilterDisplayConverterProperty">
            <summary>
            DataGridColumn筛选下拉中显示的字符串转换器
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.FilterDisplayConverterParamterProperty">
            <summary>
            DataGridColumn筛选下拉中显示的字符串转换器参数
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.HasFilterConditionsProperty">
            <summary>
            DataGridColumn是否存在筛选条件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDataGridColumnService.EnableSearchFilterProperty">
            <summary>
            DataGridColumn是否开启搜索筛选。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetEnableFilter(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示DataGridColumn是否开启筛选
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetEnableSearchFilter(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示DataGridColumn是否开启搜索筛选
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetFilterDisplayConverter(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示DataGridColumn筛选下拉中显示的字符串转换器
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetFilterDisplayConverterParamter(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示DataGridColumn筛选下拉中显示的字符串转换器参数
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetFilterPath(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示DataGridColumn筛选的实体字段
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.GetHasFilterConditions(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示 DataGridColumn是否存在筛选条件
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetEnableFilter(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置一个值指示DataGridColumn是否开启筛选
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetEnableSearchFilter(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置一个值指示DataGridColumn是否开启搜索筛选
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetFilterDisplayConverter(System.Windows.DependencyObject,System.Windows.Data.IValueConverter)">
            <summary>
            设置一个值指示DataGridColumn筛选下拉中显示的字符串转换器
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetFilterDisplayConverterParamter(System.Windows.DependencyObject,System.Object)">
            <summary>
            设置一个值指示DataGridColumn筛选下拉中显示的字符串转换器参数
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetFilterPath(System.Windows.DependencyObject,System.String)">
            <summary>
            设置一个值指示DataGridColumn筛选的实体字段，默认为DataGridColumn中绑定的字段，比如DataGridTextColumn中的Binding，如果模版列需指定此字段方可使用列筛选功能
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDataGridColumnService.SetHasFilterConditions(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置一个值指示 DataGridColumn是否存在筛选条件
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="T:LdNet.MetroControls.MetroDatePicker">
            <summary>
            日期控件，支持自定义时间格式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker._textBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker._blockManager">
            <summary>
            格式化管理类
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker._defaultFormat">
            <summary>
            默认自定义格式化字符串
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker._doubleClick">
            <summary>
            鼠标双击
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.hasValidationErrorDescriptor">
            <summary>
            MetroDatePicker HasValidationError监听器
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker._baseBorder">
            <summary>
            边框（来自模板）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.BorderMouseOverBrushProperty">
            <summary>
            鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IsLockProperty">
            <summary>
            是否锁定文本的输入框。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LockButtonVisibilityProperty">
            <summary>
            是否显示锁按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ButtonsAlignmentProperty">
            <summary>
            锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.WatermarkProperty">
            <summary>
            文本框的水印。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.WatermarkBrushProperty">
            <summary>
            文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValidationRulesProperty">
            <summary>
            验证规则的集合。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValidationTriggerProperty">
            <summary>
            验证触发的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IsStartValidationProperty">
            <summary>
            是否立即触发验证。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValidationRegularProperty">
            <summary>
            内置的验证规则。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.HasValidationErrorProperty">
            <summary>
            是否验证失败。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.CaretBrushProperty">
            <summary>
            用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ShowValidationBorderProperty">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.HostWidthProperty">
            <summary>
            输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.HostHeightProperty">
            <summary>
            输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelVerticalAlignmentProperty">
            <summary>
            标签纵向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LabelContentMarginProperty">
            <summary>
            标签元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValueProperty">
            <summary>
            此元素的值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.FormatProperty">
            <summary>
            时间显示的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.CustomFormatProperty">
            <summary>
            自定义格式的字符串。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.MaxValueProperty">
            <summary>
            元素最大值的约束。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.MinValueProperty">
            <summary>
            元素最小值的约束。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.TwoNumberMaxIntervalProperty">
            <summary>
            输入连续两个数字的最大间隔。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconBackgroundNormalBrushProperty">
            <summary>
            图标背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconBrushProperty">
            <summary>
            图标的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconMouseOverBrushProperty">
            <summary>
            鼠标悬停时图标的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconPressedBrushProperty">
            <summary>
            鼠标按下时图标的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconBackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时图标背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.UpDownBtnVisibilityProperty">
            <summary>
            上下按钮是否显示。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconKeyProperty">
            <summary>
            图标资源的Key值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.IconMarginProperty">
            <summary>
            图标的Margin。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.LockChangedEvent">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValidationResultChangedEvent">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.TextChangedEvent">
            <summary>
            当此元素的Text属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroDatePicker.ValueChangedEvent">
            <summary>
            当此元素的Value属性值改变时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IsForbiddenDates">
            <summary>
            是否禁用某些特定日期
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.ButtonsAlignment">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.CaretBrush">
            <summary>
            获取或设置用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.CustomFormat">
            <summary>
            获取或设置自定义格式的字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.Format">
            <summary>
            获取或设置时间显示的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.FormatString">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.HasValidationError">
            <summary>
            获取一个值指示是否验证失败。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.HostHeight">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.HostWidth">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconBackgroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时图标背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconBackgroundNormalBrush">
            <summary>
            获取或设置图标背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconBrush">
            <summary>
            获取或设置图标的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconKey">
            <summary>
             获取或设置一个值，指示图标资源的Key值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconMargin">
            <summary>
             获取或设置一个值，指示图标的Margin。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时图标的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IconPressedBrush">
            <summary>
            获取或设置鼠标按下时图标的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.InternalValue">
            <summary>
            内部值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IsLock">
            <summary>
            获取或设置是否锁定文本的输入框。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.IsStartValidation">
            <summary>
            设置是否立即触发验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelContentMargin">
            <summary>
            获取或设置标签元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LabelVerticalAlignment">
            <summary>
            获取或设置标签纵向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.LockButtonVisibility">
            <summary>
            获取或设置是否显示锁按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.MaxValue">
            <summary>
            获取或设置元素最大值的约束。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.MinValue">
            <summary>
            获取或设置元素最小值的约束。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.ShowValidationBorder">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.TwoNumberMaxInterval">
            <summary>
            输入连续两个数字的最大间隔。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.UpDownBtnVisibility">
            <summary>
             获取或设置一个值，指示上下按钮是否显示。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.ValidationRegular">
            <summary>
            获取或设置内置的验证规则。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.ValidationRules">
            <summary>
            获取或设置验证规则的集合。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.ValidationTrigger">
            <summary>
             获取或设置验证触发的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.Value">
            <summary>
            获取或设置一个指示此元素的值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.Watermark">
            <summary>
            获取或设置文本框的水印。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroDatePicker.WatermarkBrush">
            <summary>
            获取或设置文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker._downIconBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            按下-按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker._textBox_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            文本框GotFocus事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker._textBox_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            文本框PreviewKeyDown事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker._textBox_PreviewMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            文本框PreviewMouseUp事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker._upIconBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            按下+按钮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.calendar_SelectedDatesChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            日历控件SelectedDatesChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.ChangeInputLanguage">
            <summary>
            改变输入法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.DateConvert(System.DateTime,System.DateTime)">
            <summary>
            比较
            </summary>
            <param name="value"></param>
            <param name="MaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate方法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.OnMaxValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            最大值改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.OnMinValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            最小值改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            MouseWheel事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            值改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.StartValidation">
            <summary>
            手动触发验证。
            <para>如使用MVVM模式开发，使用IsStartValidation=True来手动触发验证</para>
            <para>注：如果用户设置了Binding方式，如InnerText={Binding }，需要在XAML的Binding标签中设置NotifyOnValidationError=True，否则无法反馈及触发相关验证路由事件</para>
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.ToString">
            <summary>
            重写ToString方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroDatePicker.ValidateValue(System.Nullable{System.DateTime},System.Nullable{System.DateTime}@)">
            <summary>
            验证Value
            </summary>
            <param name="value"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="E:LdNet.MetroControls.MetroDatePicker.LockChanged">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDatePicker.TextChanged">
            <summary>
            当此元素的Text属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDatePicker.ValidationResultChanged">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroDatePicker.ValueChanged">
            <summary>
            当此元素的Value属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroGroupBox.HeaderFontWeightProperty">
            <summary>
            字体权重
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroGroupBox.CornerRadiusProperty">
            <summary>
            该值表示将MetroGroupBox的角倒圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroGroupBox.HeaderHeightProperty">
            <summary>
            标题高度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroGroupBox.HeaderMarginProperty">
            <summary>
            标题外边距
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.CornerRadius">
            <summary>
            获取或设置一个值，该值表示将MetroGroupBox的角倒圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderFontSize">
            <summary>
            表头字体大小
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderFontStretch">
            <summary>
            表头字体平铺模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderFontWeight">
            <summary>
            表头权重
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderForeground">
            <summary>
            表头前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderHeight">
            <summary>
            获取或设置标题高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroGroupBox.HeaderMargin">
            <summary>
            获取或设置标题外边距。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroGroupBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroListBox">
            <summary>
            ListBox控件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroListBox.ItemSelectedBackgroundBrushProperty">
            <summary>
            选中项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroListBox.ItemMouseOverBackgroundBrushProperty">
            <summary>
            鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroListBox.ItemSelectedForegroundBrushProperty">
            <summary>
            项选中前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroListBox.ItemMouseOverForegroundBrushProperty">
            <summary>
            项鼠标进入时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroListBox.ItemMarginProperty">
            <summary>
            项内容的边距
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroListBox.ItemSelectedBackgroundBrush">
            <summary>
            获取或设置选中项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroListBox.ItemMouseOverBackgroundBrush">
            <summary>
            获取或设置鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroListBox.ItemSelectedForegroundBrush">
            <summary>
            获取或设置 项选中前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroListBox.ItemMouseOverForegroundBrush">
            <summary>
            获取或设置项鼠标进入时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroListBox.ItemMargin">
            <summary>
            获取或设置项内容的边距
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroMarquee">
            <summary>
            跑马灯控件，支持设置滚动方向（上，下，左，右），设置滚动时间。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMarquee.DirectionProperty">
            <summary>
            滚动方向
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMarquee.DurationProperty">
            <summary>
            滚动一次的时间
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMarquee.IsStopInCenterProperty">
            <summary>
            滚动到中间是否停留
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMarquee.StopDurationProperty">
            <summary>
            滚动到中间停留的时间
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMarquee.AnimationEndEvent">
            <summary>
            当单次滚动动画结束时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMarquee.Direction">
            <summary>
            获取或设置滚动方向。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMarquee.Duration">
            <summary>
            获取或设置滚动一次的时间。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMarquee.IsStopInCenter">
            <summary>
            获取或设置一个值，指示滚动到中间是否停留。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMarquee.StopDuration">
            <summary>
            获取或设置滚动到中间停留的时间。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.AnimationAction">
            <summary>
            滚动动画
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.DirectionPropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Direction属性改变时触发
            </summary>
            <param name="dobj"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.DurationPropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Direction属性改变时触发
            </summary>
            <param name="dobj"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.IsStopInCenterValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsStopInCenter属性改变时触发
            </summary>
            <param name="dobj"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code or internal processes call
                <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMarquee.StopDurationPropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StopDuration属性改变时触发
            </summary>
            <param name="dobj"></param>
            <param name="e"></param>
        </member>
        <member name="E:LdNet.MetroControls.MetroMarquee.AnimationEnd">
            <summary>
            当单次滚动动画结束时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroMessageBox.IsExceptionModeProperty">
            <summary>
             获取或设置是否是异常类型提示框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.ErrorMessage">
            <summary>
            获取或设置异常详细信息
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.IsExceptionMode">
            <summary>
            获取或设置是否是异常类型提示框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.MessageBoxIcon">
            <summary>
            提示图标
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.RowExpanderBtnCommand">
            <summary>
            展开详细信息命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroMessageBox.TitleForeground">
            <summary>
            标题前景色
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ApplyButtonVisible">
            <summary>
            隐藏按钮
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ApplyClickEvent">
            <summary>
            注册按钮事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ApplyIcon">
            <summary>
            设计Icon图标
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.CreateHsMessageBox">
            <summary>
            创建提示框
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.EnforceInstance``1(System.String)">
            <summary>
            找到模板子元素
            </summary>
            <typeparam name="T">子元素的类型</typeparam>
            <param name="partName">子元素的Name</param>
            <returns>返回子元素对象</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.GetActiveWindow">
            <summary>
            获取当前激活窗口句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.GetWindowOwner">
            <summary>
            通过句柄获得窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.IsWindow(System.IntPtr)">
            <summary>
            判断窗口句柄是否是Window
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Mbox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            调整高度
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.OnApplyTemplate">
            <summary>
            在模板中查找资源
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Enter键关闭
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            标题栏拖动消息框
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.SetFocusButton">
            <summary>
            设置焦点按钮
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题</param>
            <param name="button">按钮</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题</param>
            <param name="button">按钮</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题信息</param>
            <param name="button">按钮</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="caption">标题信息</param>
            <param name="button">按钮</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">消息文本</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标类型</param>
            <param name="defaultResult">默认返回值</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="messageBoxText">消息文本</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标类型</param>
            <param name="defaultResult">默认返回值</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">消息文本</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标</param>
            <param name="defaultResult">默认返回值</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Boolean)">
            <summary>
            弹出消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">消息文本</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标</param>
            <param name="defaultResult">默认返回值</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题</param>
            <param name="button">按钮</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题</param>
            <param name="button">按钮</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题信息</param>
            <param name="button">按钮</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">提示文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">标题信息</param>
            <param name="button">按钮</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">消息文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标类型</param>
            <param name="defaultResult">默认返回值</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="messageBoxText">消息文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标类型</param>
            <param name="defaultResult">默认返回值</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">消息文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标</param>
            <param name="defaultResult">默认返回值</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroMessageBox.ShowException(System.Windows.Window,System.String,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Boolean)">
            <summary>
            弹出异常消息提示框
            </summary>
            <param name="owner">拥有者</param>
            <param name="messageBoxText">消息文本</param>
            <param name="errormessage">异常详细信息</param>
            <param name="caption">消息窗体标题</param>
            <param name="button">显示按钮</param>
            <param name="icon">显示图标</param>
            <param name="defaultResult">默认返回值</param>
            <param name="topMost">是否置顶显示消息框</param>
            <returns>返回值</returns>
        </member>
        <member name="T:LdNet.MetroControls.MetroNumericUpDown">
            <summary>
            自定义数值控件，支持按键、滚轮递增递减数字，支持显示中文数值标签，支持文本框获取焦点时全选文本，支持按钮不释放不继续递增递减数字功能
            <para>按键递增递减数字 - 设置HideUpDownButtons属性False</para>
            <para>滚轮递增递减数字 - 设置SupportMouseWheel属性True</para>
            <para>显示中文数值标签 - 设置ChineseNumberVisibility属性True；设置ChineseNumberVisibility属性True且ChineseNumberVisibilityOnGotFocus属性True，文本框获得焦点时显示中文数值标签</para>
            <para>文本框获取焦点时全选文本 - 设置SelectAllOnFocus属性True，文本框获取焦点时全选文本</para>
            <para>按钮不释放不继续递增递减数字 - 设置HoldUp属性True，按钮不释放不继续递增递减数字</para>
            <para>HorizontalContentAlignment：文本水平位置</para>
            <para>ContentHostWidth:文本宽度</para>
            <para>详情参考帮助文档</para>
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DefaultInterval">
            <summary>
            默认指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DefaultDelay">
            <summary>
            the amount of time, in milliseconds, the NumericUpDown waits while the up/down button is pressed
                before it starts increasing/decreasing the
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ElementNumericDown">
            <summary>
            PART_NumericDown元素名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ElementNumericUp">
            <summary>
            PART_NumericUp元素名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ElementTextBox">
            <summary>
            PART_TextBox元素名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ElementLabelContent">
            <summary>
            PART_LabelContent
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ScientificNotationChar">
            <summary>
            科学计数法标识
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.StrComp">
            <summary>
            排序规则
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._removeFromText">
            <summary>
            remove special string formattings in order to be able to parse it to double e.g. StringFormat = "{0:N2} pcs." then remove pcs. from text
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._handlesMouseWheelScrolling">
            <summary>
            反射TextBox中的ScrollViewer的HandlesMouseWheelScrolling属性
            Whether or not the ScrollViewer should handle mouse wheel events.  This property was 
            specifically introduced for TextBoxBase, to prevent mouse wheel scrolling from "breaking"
            if the mouse pointer happens to land on a TextBoxBase with no more content in the direction
            of the scroll, as with a single-line TextBox.  In that scenario, ScrollViewer would
            try to scroll the TextBoxBase and not allow the scroll event to bubble up to an outer 
            control even though the TextBoxBase doesn't scroll.
            This property defaults to true.  TextBoxBase sets it to false. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._internalIntervalMultiplierForCalculation">
            <summary>
            指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._internalLargeChange">
            <summary>
            指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._intervalValueSinceReset">
            <summary>
            指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._manualChange">
            <summary>
            复数改变标识
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._repeatDown">
            <summary>
            -按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._repeatUp">
            <summary>
            +按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._valueTextBox">
            <summary>
            文本输入框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._scrollViewer">
            <summary>
            文本输入框的ScrollViewer
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._baseBorder">
            <summary>
            边框（来自模板）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._hold">
            <summary>
            hold按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.hasValidationErrorDescriptor">
            <summary>
            MetroTextBox HasValidationError监听器
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._loaded">
            <summary>
            执行过Loaded事件。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpDownKeyModeProperty">
            <summary>
            按键模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.BorderMouseOverBrushProperty">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ShowValidationBorderProperty">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.IsLockProperty">
            <summary>
            是否锁定文本的输入框。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LockButtonVisibilityProperty">
            <summary>
            是否显示锁按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ButtonsAlignmentProperty">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.WatermarkProperty">
            <summary>
            文本框的水印。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.WatermarkBrushProperty">
            <summary>
            文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValidationRulesProperty">
            <summary>
            验证规则的集合。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValidationTriggerProperty">
            <summary>
            验证触发的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.IsStartValidationProperty">
            <summary>
            是否立即触发验证。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.HasValidationErrorProperty">
            <summary>
            指示是否验证失败。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.CaretBrushProperty">
            <summary>
            用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelContentMarginProperty">
            <summary>
            标签元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelVerticalAlignmentProperty">
            <summary>
            标签纵向的对齐方式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.HostWidthProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.HostHeightProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DelayProperty">
            <summary>
            鼠标点击按钮不放开时，在第一次改变值后延迟多少毫秒数，再改变后面的值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.TextAlignmentProperty">
            <summary>
            输入框文本水平对齐方式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.SpeedupProperty">
            <summary>
            是否支持，鼠标点击+ -按钮不放开时，不断加速改变值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.IsReadOnlyProperty">
            <summary>
            是否只读（只允许使用+-按钮改变文本）。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.StringFormatProperty">
            <summary>
            文本格式化字符串。（详情请见http://msdn.microsoft.com/en-us/library/dwhawy9k.aspx）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.InterceptArrowKeysProperty">
            <summary>
            是否支持使用键盘上下按键改变值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValueProperty">
            <summary>
            此元素的值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.MinimumProperty">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.MaximumProperty">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.IntervalProperty">
            <summary>
            指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.SupportMouseWheelProperty">
            <summary>
            是否支持鼠标滚轮改变值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.TrackMouseWheelWhenMouseOverProperty">
            <summary>
            是否支持鼠标悬停时(不获取焦点)滚动滚轮改变值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.HideUpDownButtonsProperty">
            <summary>
            + -按钮显示的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ShowUpDownBtnsBorderProperty">
            <summary>
            是否显示+-按钮边框。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown._DefaultUpDownButtonsWidth">
            <summary>
            UpDownButtonsWidth默认值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpDownButtonsWidthProperty">
            <summary>
            获取或设置加减按钮宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.SupportManualInputProperty">
            <summary>
            是否支持手工输入。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.CultureProperty">
            <summary>
            StringFormat属性的语言文化。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.SelectAllOnFocusProperty">
            <summary>
            文本框获取焦点时全选文本。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DisableDecimalsProperty">
            <summary>
            是否不显示小数。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ChineseNumberVisibilityProperty">
            <summary>
            显示中文数字标签
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ChineseNumberVisibilityOnGotFocusProperty">
            <summary>
            获取焦点时是否显示中文数值标签。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.HoldUpProperty">
            <summary>
            上下按键，鼠标按下不释放时，连续执行上下按键点击事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpDownBtnBackgroundBrushProperty">
            <summary>
            +-按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundBrushProperty">
            <summary>
            +按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundBrushProperty">
            <summary>
            -按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpBtnBackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时+按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DownBtnBackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时-按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时+按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时-按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpBtnBackgroundPressedBrushProperty">
            <summary>
            鼠标按下时+按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DownBtnBackgroundPressedBrushProperty">
            <summary>
            鼠标按下时-按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundPressedBrushProperty">
            <summary>
            鼠标按下时+按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundPressedBrushProperty">
            <summary>
            鼠标按下时-按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.SupportFormatWithInputtingProperty">
            <summary>
            是否支持输入过程中格式化。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.MaxLengthProperty">
            <summary>
            获取或设置可在文本框中手动输入的最大字符数。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.LockChangedEvent">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValueIncrementedEvent">
            <summary>
            当此元素的Value属性值增加时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValueDecrementedEvent">
            <summary>
            当此元素的Value属性值减少时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.DelayChangedEvent">
            <summary>
            当此元素的Delay属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.MaximumReachedEvent">
            <summary>
             当此元素的Value属性值等于Maxmum属性值时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.MinimumReachedEvent">
            <summary>
            当此元素的Value属性值等于Minmum属性值时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValueChangedEvent">
            <summary>
            当此元素的Value属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroNumericUpDown.ValidationResultChangedEvent">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpDownKeyMode">
            <summary>
            NumericUpDown按键模式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ButtonsAlignment">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.CaretBrush">
            <summary>
            获取或设置用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ChineseNumberVisibility">
            <summary>
            显示中文数字标签
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ChineseNumberVisibilityOnGotFocus">
            <summary>
            获取或设置一个值，指示获取焦点时是否显示中文数值标签。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Culture">
            <summary>
            获取或设置一个值，指示StringFormat属性的语言文化。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Delay">
            <summary>
            获取或设置鼠标点击按钮不放开时，在第一次改变值后延迟多少毫秒数，再改变后面的值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DisableDecimals">
            <summary>
            获取或设置一个值，指示是否不显示小数。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DownBtnBackgroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时-按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DownBtnBackgroundPressedBrush">
            <summary>
            获取或设置鼠标按下时-按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundBrush">
            <summary>
            获取或设置-按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时-按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.DownBtnForegroundPressedBrush">
            <summary>
            获取或设置鼠标按下时-按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.HasValidationError">
            <summary>
            获取一个值指示是否验证失败。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.HideUpDownButtons">
            <summary>
            获取或设置一个值，指示+ -按钮显示的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.HoldUp">
            <summary>
            上下按键，鼠标按下不释放时，连续执行上下按键点击事件
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.HostHeight">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.HostWidth">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.InterceptArrowKeys">
            <summary>
            获取或设置一个值，指示是否支持使用键盘上下按键改变值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Interval">
            <summary>
            指示每单击一下按钮时增加或减少的数量。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.IsLock">
            <summary>
            获取或设置是否锁定文本的输入框。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.IsReadOnly">
            <summary>
            获取或设置一个值，指示是否只读（只允许使用+-按钮改变文本）。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.IsStartValidation">
            <summary>
            设置是否立即触发验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelContentBounds">
            <summary>
            标签内容边界
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelContentMargin">
            <summary>
            获取或设置标签元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LabelVerticalAlignment">
            <summary>
            获取或设置标签纵向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.LockButtonVisibility">
            <summary>
            获取或设置是否显示锁按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Maximum">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.MaxLength">
            <summary>
            获取或设置可在文本框中手动输入的最大字符数。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Minimum">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.SelectAllOnFocus">
            <summary>
            获取或设置一个值，指示是否支持文本框获取焦点时全选文本。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ShowUpDownBtnsBorder">
            <summary>
            获取或设置是否显示+-按钮边框。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ShowValidationBorder">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.SpecificCultureInfo">
            <summary>
            CultureInfo
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Speedup">
            <summary>
            获取和设置一个值，指示是否支持，鼠标点击+ -按钮不放开时，不断加速改变值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.StringFormat">
            <summary>
            获取或设置文本格式化字符串。（详情请见http://msdn.microsoft.com/en-us/library/dwhawy9k.aspx）
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.SupportFormatWithInputting">
            <summary>
            获取或设置一个值，指示是否支持输入过程中格式化。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.SupportManualInput">
            <summary>
            获取或设置一个值，指示是否支持手工输入。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.SupportMouseWheel">
            <summary>
            获取或设置一个值，指示是否支持鼠标滚轮改变值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.TextAlignment">
            <summary>
            获取和设置输入框文本水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.TextBinding">
            <summary>
            文本绑定
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.TrackMouseWheelWhenMouseOver">
            <summary>
            获取或设置一个值，指示否支持鼠标悬停时(不获取焦点)滚动滚轮改变值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpBtnBackgroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时+按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpBtnBackgroundPressedBrush">
            <summary>
            获取或设置鼠标按下时+按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundBrush">
            <summary>
            获取或设置+按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时+按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpBtnForegroundPressedBrush">
            <summary>
            获取或设置鼠标按下时+按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpDownBtnBackgroundBrush">
            <summary>
            获取或设置+-按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.UpDownButtonsWidth">
            <summary>
            获取或设置加减按钮宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ValidationRegular">
            <summary>
            获取或设置内置的验证规则。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ValidationRules">
            <summary>
            获取或设置验证规则的集合。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.ValidationTrigger">
            <summary>
             获取或设置验证触发的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Value">
            <summary>
            获取或设置一个指示此元素的值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.Watermark">
            <summary>
            获取或设置文本框的水印。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNumericUpDown.WatermarkBrush">
            <summary>
            获取或设置文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ChangeValueBy(System.Decimal)">
            <summary>
            改变Value
            </summary>
            <param name="difference"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ChangeValueInternal(System.Boolean)">
            <summary>
            递增减数值
            </summary>
            <param name="addInterval"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ChangeValueInternal(System.Decimal)">
            <summary>
            递增减数值
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ChangeValueWithSpeedUp(System.Boolean)">
            <summary>
            SpeedUp时改变Value
            </summary>
            <param name="toPositive"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.CoerceMaximum(System.Windows.DependencyObject,System.Object)">
            <summary>
            Maximum属性验证事件
            </summary>
            <param name="d"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.CoerceStringFormat(System.Windows.DependencyObject,System.Object)">
            <summary>
            StringFormat属性验证事件
            </summary>
            <param name="d"></param>
            <param name="basevalue"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.CoerceUpDownButtonsWidth(System.Windows.DependencyObject,System.Object)">
            <summary>
            验证UpDownButtonsWidth属性值。
            </summary>
            <param name="d"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.CoerceValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            值校验事件
            </summary>
            <param name="d"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.EnableDisableDown">
            <summary>
            _repeatDown自动改变可用状态
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.EnableDisableUp">
            <summary>
            _repeatUp自动改变可用状态
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.EnableDisableUpDown">
            <summary>
            按钮自动改变可用状态
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.MetroNumericUpDown_IsKeyboardFocusWithinChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsKeyboardFocusWithinChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.MetroNumericUpDown_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Loaded事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.MetroNumericUpDown_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            PreviewMouseDown事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.MetroNumericUpDown_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Nullable{System.Decimal}})">
            <summary>
            值改变时，处理输入过程中格式化逻辑。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.InterceptManualEnterChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SupportManualInput属性改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.InternalSetText(System.Nullable{System.Decimal})">
            <summary>
            设置_valueTextBox.Text
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.IntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Interval属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.IsReadOnlyPropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly属性改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code or internal processes call
                <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnDelayChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Delay属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnDelayChanged(System.Int32,System.Int32)">
            <summary>
            OnDelayChanged
            </summary>
            <param name="oldDelay"></param>
            <param name="newDelay"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            获取焦点
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            GotFocusEvent事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnHasDecimalsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisableDecimals属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            LostFocusEvent事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Maximum属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnMaximumChanged(System.Decimal,System.Decimal)">
            <summary>
            OnMaximumChanged
            </summary>
            <param name="oldMaximum"></param>
            <param name="newMaximum"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Minimum属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnMinimumChanged(System.Decimal,System.Decimal)">
            <summary>
            OnMinimumChanged
            </summary>
            <param name="oldMinimum"></param>
            <param name="newMinimum"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            OnPreviewKeyDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            OnPreviewKeyUp
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            OnPreviewMouseWheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnPreviewTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            _valueTextBox.PreviewTextInput
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnShowChineseNumberChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ChineseNumberVisibility和ChineseNumberVisibilityOnGotFocus属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnSpeedupChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Speedup属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnSpeedupChanged(System.Boolean,System.Boolean)">
            <summary>
            OnSpeedupChanged
            </summary>
            <param name="oldSpeedup"></param>
            <param name="newSpeedup"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnStringFormatChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StringFormat属性改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnTextBoxKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            _valueTextBox.PreviewKeyDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnTextBoxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            _valueTextBox.LostFocus
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
             _valueTextBox.TextChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            值改变事件
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnValueChanged(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            OnValueChanged
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.OnValueTextBoxPaste(System.Object,System.Windows.DataObjectPastingEventArgs)">
            <summary>
            _valueTextBox.PastingHandler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.RaiseChangeDelay">
            <summary>
            执行DelayChangedEvent事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.RemoveStringFormatFromText(System.String)">
            <summary>
            remove special string formattings in order to be able to parse it to double e.g. StringFormat = "{0:N2} pcs." then remove pcs. from text
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ResetInternal">
            <summary>
            重置每单击一下按钮时增加或减少的数量
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.SelectAll">
            <summary>
            全选文本框
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.SetRemoveStringFormatFromText(System.String)">
            <summary>
            设置_removeFromText
            </summary>
            <param name="stringFormat"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ShowChineseNumerLabelForSpeical">
            <summary>
            中标标签自动显示
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.StartValidation">
            <summary>
            手动触发验证。
            <para>如使用MVVM模式开发，使用IsStartValidation=True来手动触发验证</para>
            <para>注：如果用户设置了Binding方式，如Text={Binding }，需要在XAML的Binding标签中设置NotifyOnValidationError=True，否则无法反馈及触发相关验证路由事件</para>
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ToggleReadOnlyMode(System.Boolean)">
            <summary>
            ReadOnly状态改变时相关操作
            </summary>
            <param name="isReadOnly"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.TryFindScrollViewer">
            <summary>
            找到_valueTextBox的滚动条
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ValidateDelay(System.Object)">
            <summary>
            Delay属性验证事件
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroNumericUpDown.ValidateText(System.String,System.Decimal@)">
            <summary>
            验证文本
            </summary>
            <param name="text"></param>
            <param name="convertedValue"></param>
            <returns></returns>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.DelayChanged">
            <summary>
            当此元素的Delay属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.LockChanged">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.MaximumReached">
            <summary>
            当此元素的Value属性值等于Maxmum属性值时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.MinimumReached">
            <summary>
            当此元素的Value属性值等于Minmum属性值时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.ValidationResultChanged">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.ValueChanged">
            <summary>
            当此元素的Value属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.ValueDecremented">
            <summary>
            当此元素的Value属性值减少时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroNumericUpDown.ValueIncremented">
            <summary>
            当此元素的Value属性值增加时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroPagination">
            <summary>
            HS分页控件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageIndexChangedEvent">
            <summary>
             页码和每页条数改变事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.MaxPageCountProperty">
            <summary>
            最大显示页码数属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.IsFirstPageProperty">
            <summary>
            是否是第一页属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.IsLastPageProperty">
            <summary>
            是否是最后一页属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageCountProperty">
            <summary>
            总页数属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageSizeProperty">
            <summary>
            每页条数属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.CurrentPageIndexProperty">
            <summary>
            当前选中页码属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.RecordCountProperty">
            <summary>
            总记录数属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageSizeCollectionProperty">
            <summary>
            PageSizeCollection属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageSizeVisibilityProperty">
            <summary>
            是否显示每页条数
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageIndexBoxMaxWidthProperty">
            <summary>
            当前页面输入框最大宽度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.PageSizeBoxMaxWidthProperty">
            <summary>
            每页条数输入框最大宽度属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.DisplayModeProperty">
            <summary>
            分页控件显示模式属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.RefreshButtonClickEvent">
            <summary>
            导航按钮点击事件定义
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroPagination.Tolerance">
            <summary>
            精度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.CurrentPageIndex">
            <summary>
            当前选中页码
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.DisplayMode">
            <summary>
            分页控件显示模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.IsFirstPage">
            <summary>
            是否是第一页
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.IsLastPage">
            <summary>
            是否是最后一页
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.MaxPageCount">
            <summary>
            最大显示页码数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageIndexBoxMaxWidth">
            <summary>
            当前页面输入框最大宽度属性
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageSizeBoxMaxWidth">
            <summary>
            每页条数输入框最大宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageSizeCollection">
            <summary>
            PageSize集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.PageSizeVisibility">
            <summary>
            是否显示每页条数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroPagination.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.EnforceInstance``1(System.String)">
            <summary>
            找到模板子元素
            </summary>
            <typeparam name="T">子元素的类型</typeparam>
            <param name="partName">子元素的Name</param>
            <returns>返回子元素对象</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.GoFirst">
            <summary>
            跳转到第一页,如果当前已经是第一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.GoLast">
            <summary>
            跳转到最后一页,如果当前已经是最后一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.GoNext">
            <summary>
            跳转到后一页,如果当前已经是最后一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.GoPage(System.Int32)">
            <summary>
            跳转到特定页码, 如果页码小于 1 或大于PageCount或当前页码就是该页码则不会触发PageIndexChanged事件
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.GoPrev">
            <summary>
            跳转到前一页,如果当前已经是第一页,将不触发PageIndexChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.OnApplyTemplate">
            <summary>
            在派生类中重写后，每当应用程序代码或内部进程调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，都将调用此方法。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroPagination.OnPageIndexChanged(LdNet.MetroControls.PageIndexChangedEventArgs)">
            <summary>
            触发PageIndexChanged事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:LdNet.MetroControls.MetroPagination.PageIndexChanged">
            <summary>
            PageIndexChanged事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroPagination.RefreshButtonClick">
            <summary>
            导航按钮点击事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroPagination.PageIndexChangedEventHandler">
            <summary>
            PageIndexChangedEventHandler
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="T:LdNet.MetroControls.MetroRadioButton">
            <summary>
            自定义标准单选按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.CheckedBrushProperty">
            <summary>
            选中时圆心的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.CheckedBackgroundBrushProperty">
            <summary>
            选中时圆心的背景画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.BorderMouseOverBrushProperty">
            <summary>
            鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.ContentDirectionProperty">
            <summary>
            内容水平的对齐方向。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.ToggleWidthProperty">
            <summary>
            勾选框的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.ToggleHeightProperty">
            <summary>
            勾选框的高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.CheckedToggleWidthProperty">
            <summary>
            选中时圆心宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroRadioButton.CheckedToggleHeightProperty">
            <summary>
            选中时圆心高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.CheckedBackgroundBrush">
            <summary>
            获取或设置选中时圆心的背景画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.CheckedBrush">
            <summary>
            获取或设置选中时圆心的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.CheckedToggleHeight">
            <summary>
            获取或设置选中时圆心高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.CheckedToggleWidth">
            <summary>
            获取或设置选中时圆心宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.ContentDirection">
            <summary>
            获取或设置内容水平的对齐方向。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.ToggleHeight">
            <summary>
            获取或设置勾选框的高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroRadioButton.ToggleWidth">
            <summary>
            获取或设置勾选框的宽度。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroRadioButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.RandomDESCryptoService">
            <summary>
            DES加密解密
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RandomDESCryptoService.IV">
            <summary>
            初始化向量
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RandomDESCryptoService.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.RandomDESCryptoService.Decode(System.String)">
            <summary>
            解密
            </summary>
            <param name="data">待解密数据</param>
            <returns>解密后数据</returns>
        </member>
        <member name="M:LdNet.MetroControls.RandomDESCryptoService.Encode(System.String)">
            <summary>
            加密
            </summary>
            <param name="data">待加密数据</param>
            <returns>加密后数据</returns>
        </member>
        <member name="T:LdNet.MetroControls.DesSecureTextBoxEncoder">
            <summary>
            SecureTextBox控件默认加密器
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.DesSecureTextBoxEncoder.Encode(System.String)">
            <summary>
            使用DES加密输入字符串,返回加密后的字符串
            </summary>
            <param name="text">明文</param>
            <returns>密文</returns>
        </member>
        <member name="T:LdNet.MetroControls.ISecureTextBoxValidation">
            <summary>
            自定义验证接口
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ISecureTextBoxValidation.Validate(System.String)">
            <summary>
            自定义验证
            </summary>
            <param name="text">输入文本</param>
            <returns>验证结果</returns>
        </member>
        <member name="T:LdNet.MetroControls.ISecureTextBoxEncoder">
            <summary>
            加密接口
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ISecureTextBoxEncoder.Encode(System.String)">
            <summary>
            加密
            </summary>
            <param name="text">输入文本</param>
            <returns>输出已加密的文本</returns>
        </member>
        <member name="T:LdNet.MetroControls.MetroSecureTextBox">
            <summary>
            密码控件
            <para>自定义验证 - 使用接口Validation，需要手动触发验证，IsStartTextValidation设置为True,或者调用StartTextValidation()方法</para>
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._syncRoot">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._lastCaptionHitTime">
            <summary>
            上次点击标题栏的时间
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._secureText">
            <summary>
            安全字符串,用于保存输入内容
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._maskText">
            <summary>
            实际显示字符串
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._sendKeyTimer">
            <summary>
            发送随机按键线程
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._lastRndChar">
            <summary>
            上一个随机字符
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox._pauseThread">
            <summary>
            指示是否暂停定时器和发送按键线程
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox.randomGen">
            <summary>
            获取随机数
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSecureTextBox.IsStartTextValidationProperty">
            <summary>
            是否立即触发自定义验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSecureTextBox.CapsLockStatus">
            <summary>
            是否按下大写键
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSecureTextBox.IsStartTextValidation">
            <summary>
            设置是否立即触发自定义验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSecureTextBox.SecureText">
            <summary>
            安全字符串
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSecureTextBox.SupportEncoder">
            <summary>
            是否使用加密器将Text加密
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSecureTextBox.TextLength">
            <summary>
            字符长度
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.Clear">
            <summary>
            清空密码框密码
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.ConvertStringToChar(System.String)">
            <summary>
            String转Char
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.Decode(System.String)">
            <summary>
            DES解密
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.GetPasswordValue">
            <summary>
            获取密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.GetRandomChar">
            <summary>
            随机按键值
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            禁用右键菜单
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            键盘获取焦点
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            键盘失去焦点
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标拖动
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            屏蔽按键
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            字符输入
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnSelectionChanged(System.Windows.RoutedEventArgs)">
            <summary>
            取消选中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.OnTextChanged(System.Object,System.EventArgs)">
            <summary>
            Text改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.PassKeyMsg(System.Windows.Input.KeyEventArgs)">
            <summary>
            过滤按键消息  有些按键消息不需要处理
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.sendKeyTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            发送随机按键  混淆按键消息
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.SetPasswordValue(System.String)">
            <summary>
            设置密码
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.StartTextValidation">
            <summary>
            触发验证
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.StartTimer">
            <summary>
            开始混淆消息
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSecureTextBox.StopTimer">
            <summary>
            停止混淆消息
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroSecureTextBox.TextChanged">
            <summary>
            Text改变事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroSlider">
            <summary>
            刻度条
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSlider.CalMouseDownValue(System.Windows.Point)">
            <summary>
            计算鼠标点下的值
            </summary>
            <param name="mousePos">鼠标点下的坐标(该坐标是相对坐标)</param>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.MetroSplitButton">
            <summary>
            下拉按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ItemSelectedBackgroundBrushProperty">
            <summary>
            选中项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ItemMouseOverBackgroundBrushProperty">
            <summary>
            鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IsExpandedProperty">
            ▲---IItemsControl接口实现---
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.SelectedIndexProperty">
            <summary>
            选中项索引
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.SelectedItemProperty">
            <summary>
            选中项
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ExtraTagProperty">
            <summary>
            附加标签
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.OrientationProperty">
            <summary>
            图标和下拉对齐方式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconProperty">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconTemplateProperty">
            <summary>
            图标模板
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.CommandProperty">
            <summary>
            命令
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.CommandTargetProperty">
            <summary>
            命令对象
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.CommandParameterProperty">
            <summary>
            命令参数
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ButtonStyleProperty">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ButtonArrowStyleProperty">
            <summary>
            按钮箭头样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ListBoxStyleProperty">
            <summary>
            listbox样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ArrowBrushProperty">
            <summary>
            箭头画刷
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ListBoxBorderBrushProperty">
            <summary>
            下拉框边框色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ListBoxBackgroundBrushProperty">
            <summary>
            下拉框背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ListBoxMaxHeightProperty">
            <summary>
            下拉框的最大高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.BackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时按钮背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.BackgroundPressedBrushProperty">
            <summary>
            鼠标按下时按钮背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconResourceKeyProperty">
            <summary>
            图标资源的键值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconHeightProperty">
            <summary>
            图标元素的高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconWidthProperty">
            <summary>
            图标元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IconMarginProperty">
            <summary>
            图标元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.IsShowSelectedItemProperty">
            <summary>
            是否显示选择项
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ExpanderWidthProperty">
            <summary>
            展开按钮的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ExpanderHeightProperty">
            <summary>
            展开按钮的高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.ClickEvent">
            <summary>
            在单击此元素时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroSplitButton.SelectionChangedEvent">
            <summary>
            当此元素的选项更改时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ArrowBrush">
            <summary>
            获取和设置箭头画刷
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.BackgroundMouseOverBrush">
            <summary>
            获取和设置鼠标悬停时按钮背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.BackgroundPressedBrush">
            <summary>
            获取和设置鼠标按下时按钮背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ButtonArrowStyle">
            <summary>
            按钮箭头样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ButtonStyle">
            <summary>
            按钮样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.Command">
            <summary>
            命令
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.CommandParameter">
            <summary>
            命令参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.CommandTarget">
            <summary>
            命令对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ExpanderHeight">
            <summary>
            获取或设置展开按钮的高度。
            <para>Orientation设置为Vertical时，设置展开按钮的高度。</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ExpanderWidth">
            <summary>
            获取或设置展开按钮的宽度。
            <para>Orientation设置为Horizontal时，设置展开按钮的宽度。</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ExtraTag">
            <summary>
            附加标签
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.Icon">
            <summary>
             图标
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IconHeight">
            <summary>
            获取或设置图标元素的高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IconMargin">
            <summary>
            获取或设置图标元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IconResourceKey">
            <summary>
            获取或设置图标资源的键值。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IconTemplate">
            <summary> 
            图标模板
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IconWidth">
            <summary>
            获取或设置图标元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IsExpanded">
            <summary> 
            展开下拉菜单 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.IsShowSelectedItem">
            <summary>
            获取或设置是否显示选择项
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ItemMouseOverBackgroundBrush">
            <summary>
            获取或设置鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ItemSelectedBackgroundBrush">
            <summary>
            获取或设置选中项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ListBoxBackgroundBrush">
            <summary>
            获取和设置下拉框背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ListBoxBorderBrush">
            <summary>
            获取和设置下拉框边框色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ListBoxMaxHeight">
            <summary>
            获取或设置下拉框的最大高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.ListBoxStyle">
            <summary>
            listbox样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.Orientation">
            <summary>
            获取和设置图标和下拉对齐方式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.Placement">
            <summary> 
            展开下拉菜单方向
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.SelectedIndex">
            <summary> 
             选中项索引
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroSplitButton.SelectedItem">
            <summary>
             选中项 
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSplitButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroSplitButton.RefreshClip">
            <summary>
            更新剪切区域
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroSplitButton.Click">
            <summary>
            在单击此元素时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroSplitButton.SelectionChanged">
            <summary>
            当此元素的选项更改时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroToggleButton">
            <summary>
             开关按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelVerticalAlignmentProperty">
            <summary>
            标签纵向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.LabelContentMarginProperty">
            <summary>
            标签元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.OnLabelContentProperty">
            <summary>
            开状态时标签的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.OffLabelContentProperty">
            <summary>
            关状态时标签的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.OnSwitchBrushProperty">
            <summary>
            开状态时按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.OffSwitchBrushProperty">
            <summary>
            关状态时按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.ThumbBrushProperty">
            <summary>
            滑块背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.DisableThumbBrushProperty">
            <summary>
            禁用时滑块背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.ThumbWidthProperty">
            <summary>
            滑块的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroToggleButton.CornerRadiusProperty">
            <summary>
            按钮的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.CornerRadius">
            <summary>
            获取或设置按钮的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.DisableThumbBrush">
            <summary>
            获取或设置禁用时滑块背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelContentMargin">
            <summary>
            获取或设置标签元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.LabelVerticalAlignment">
            <summary>
            获取或设置标签纵向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.OffLabelContent">
            <summary>
            获取或设置关状态时标签的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.OffSwitchBrush">
            <summary>
            获取或设置关状态时按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.OnLabelContent">
            <summary>
            获取或设置开状态时标签的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.OnSwitchBrush">
            <summary>
            获取或设置开状态时按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.ThumbBrush">
            <summary>
            获取或设置滑块背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroToggleButton.ThumbWidth">
            <summary>
            获取或设置滑块的宽度。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton._DraggingThumb_DragCompleted(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            拖拽滑块结束
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton._DraggingThumb_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            拖拽滑块时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton._DraggingThumb_DragStarted(System.Object,System.Windows.Controls.Primitives.DragStartedEventArgs)">
            <summary>
            拖拽滑块开始
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton.OnToggle">
            <summary>
            状态改变
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroToggleButton.UpdateLabelContent">
            <summary>
            更新标签文字
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroTreeView">
            <summary>
            TreeView树视图控件，支持选中多列模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.gradeNodeName">
            <summary>
            分级节点名称
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckedItemsProperty">
            <summary>
            选中项集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.IsExpandAllProperty">
            <summary>
            是否展开所有节点。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.EnableCheckLinkageProperty">
            <summary>
            是否勾选联动
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckBoxVisibilityProperty">
            <summary>
            是否显示勾选框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckBoxIsEnabledProperty">
            <summary>
            获取或设置勾选框是否启用
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckBoxSizeProperty">
            <summary>
            勾选框尺寸
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckBoxStyleProperty">
            <summary>
            获取或设置复选框样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.ToggleButtonStyleProperty">
            <summary>
            获取或设置树开关样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.IsUseLineTemplateProperty">
            <summary>
            是否使用带线的模板。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeView.CheckedStatusChangedEvent">
            <summary>
            节点选中状态改变时触发。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.CheckBoxIsEnabled">
            <summary>
            获取或设置勾选框是否启用
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.CheckBoxSize">
            <summary>
            获取或设置 勾选框尺寸
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.CheckBoxStyle">
            <summary>
            获取或设置复选框样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.CheckBoxVisibility">
            <summary>
            获取或设置 是否显示勾选框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.CheckedItems">
            <summary>
            获取或设置 选中项集合；获取时可获取所有勾选的项，包括父子项
            <para>注意：此属性支持赋值选中，但只支持最顶层项的选中</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.EnableCheckLinkage">
            <summary>
            获取或设置 是否勾选联动
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.IsExpandAll">
            <summary>
            获取或设置是否展开所有节点。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.IsUseLineTemplate">
            <summary>
            获取或设置是否使用带线的模板
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeView.ToggleButtonStyle">
            <summary>
            获取或设置树开关样式
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.menuExpandAll_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            全部展开菜单事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.menuSelectAll_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            全部选中事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.menuSelectAllChild_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            选中所有子项菜单事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.menuUnExpandAll_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            全部折叠菜单事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.menuUnSelectAll_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            全部取消选中
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.SetCheckedItems(System.Collections.IList)">
            <summary>
            设置选中项集合
            </summary>
            <param name="chdItems">选中项集合</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.SetCheckedStatus(System.Collections.IList,System.Boolean)">
            <summary>
            设置节点的勾选状态,并返回已成功操作的数据集合
            </summary>
            <param name="items">数据集合</param>
            <param name="isChecked">是否选中</param>
            <returns>返回已成功操作的数据集合</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.SetIsExpandAll(System.Boolean,System.Windows.Controls.ItemsControl)">
            <summary>
            设置是否展开全部
            </summary>
            <param name="isExpandAll">是否展开全部</param>
            <param name="itemsControl"><see cref="T:System.Windows.Controls.ItemsControl" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.SetVisibility(System.Collections.IList,System.Boolean)">
            <summary>
            设置节点的显示隐藏
            </summary>
            <param name="items">数据集合</param>
            <param name="isVisible">是否显示</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.TreeViewItem_PreviewMouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标右键事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeView.UncheckAll">
            <summary>
            全部取消选中
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroTreeView.CheckedStatusChanged">
            <summary>
            CheckedStatusChanged路由事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroTreeViewItem">
            <summary>
            用于HsTreeView的项类型
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.Id">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.Parent">
            <summary>
            父项
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.CheckedStatusChangedEvent">
            <summary>
            CheckedStatusChanged路由事件注册
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.IsCheckedProperty">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.CheckBoxVisibilityProperty">
            <summary>
            是否显示勾选框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.CheckBoxIsEnabledProperty">
            <summary>
            获取或设置勾选框是否启用
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.CheckBoxSizeProperty">
            <summary>
            勾选框尺寸
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTreeViewItem.EnableCheckLinkageProperty">
            <summary>
            是否勾选联动
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.CheckBoxIsEnabled">
            <summary>
            获取或设置勾选框是否启用
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.CheckBoxSize">
            <summary>
            获取或设置 勾选框尺寸
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.CheckBoxVisibility">
            <summary>
            获取或设置 是否显示勾选框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.EnableCheckLinkage">
            <summary>
            获取或设置 是否勾选联动
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTreeViewItem.IsChecked">
            <summary>
            获取或设置 是否选中
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.GetContainerForItemOverride">
            <summary>
            重写GetContainerForItemOverride方法，为了适应MetroTreeViewItem作为其子项
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.GetDataContext">
            <summary>
            获取数据上下文，如果不存在DataContext则返回自身
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.GetParentItem">
            <summary>
            获取父元素
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.GetSubItems(System.Boolean)">
            <summary>
             获取所有子元素
            </summary>
            <param name="isRecursive">是否递归获取所有,默认false</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            重写IsItemItsOwnContainerOverride方法，为了适应MetroTreeViewItem作为其子项
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate方法，为了在第一次应用模板时能够根据父子项选中当前项
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.OnCheckedStatusChanged(LdNet.MetroControls.CheckedStatusChangedEventArgs)">
            <summary>
            响应CheckedStatusChanged事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.CheckedStatusChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.SetIsChecked(System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            设置选中
            </summary>
            <param name="isChecked">是否选中</param>
            <param name="notNotifyOnIsCheckedChangedForUp">当前项选中状态改变后不往父级通知</param>
            <param name="notNotifyOnIsCheckedChangedForDown">当前项选中状态改变后不往子集通知</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTreeViewItem.VisibleSubItems(System.Boolean)">
            <summary>
            显示隐藏所有子项
            </summary>
            <param name="isVisible">是否显示</param>
        </member>
        <member name="E:LdNet.MetroControls.MetroTreeViewItem.CheckedStatusChanged">
            <summary>
            CheckedStatusChanged路由事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroWindow">
            <summary>
            自定义标准窗体
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowTitleBrushProperty">
            <summary>
            标题背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.UseNoneWindowStyleProperty">
            <summary>
            使用无窗口的样式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowMinButtonProperty">
            <summary>
            显示最小化按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowMaxRestoreButtonProperty">
            <summary>
            显示最大化按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowCloseButtonProperty">
            <summary>
            显示关闭按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.TitlebarHeightProperty">
            <summary>
            标题栏高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.TitleTemplateProperty">
            <summary>
            标题栏内容的模板。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.TitleAlignmentProperty">
            <summary>
            标题栏内容的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowTitleBarProperty">
            <summary>
            显示标题栏。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IsWindowDraggableProperty">
            <summary>
            窗体可拖拽。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowSystemMenuOnRightClickProperty">
            <summary>
            右击标题栏显示系统右键菜单。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.BackgroundImageSourceProperty">
            <summary>
            背景图片。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.BackgroundImageWidthProperty">
            <summary>
            背景图片的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.BackgroundImageHeightProperty">
            <summary>
            背景图片的高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.BackgroundImageTileModeProperty">
            <summary>
            背景图片的绘制方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.ShowIconOnTitleBarProperty">
            <summary>
            显示标题栏图标。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IconTemplateProperty">
            <summary>
            标题栏图标的模板。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IconEdgeModeProperty">
            <summary>
            标题栏图标渲染的模式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IconBitmapScalingModeProperty">
            <summary>
            标题栏图标缩放的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.LeftWindowCommandsProperty">
            <summary>
            标题栏的左侧命令。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.NonActiveBorderBrushProperty">
            <summary>
            非激活状态下边框颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.NonActiveWindowTitleBrushProperty">
            <summary>
            非激活状态下标题栏背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.RightWindowCommandsProperty">
            <summary>
            标题栏的右侧命令。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IsMinButtonEnabledProperty">
            <summary>
            禁用最小化按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IsMaxRestoreButtonEnabledProperty">
            <summary>
            禁用最大化按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.IsCloseButtonEnabledProperty">
            <summary>
            禁用关闭按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.FlyoutsProperty">
            <summary>
            导航栏控件。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowButtonBrushProperty">
            <summary>
            标题栏按钮前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowButtonBackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时标题栏按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowButtonBackgroundPressedBrushProperty">
            <summary>
            鼠标按下时标题栏按钮背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowTitleEffectProperty">
            <summary>
            标题栏阴影效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.LeftPaddingWidthProperty">
            <summary>
            左侧内边距的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.LeftPaddingContentProperty">
            <summary>
            左侧边距中空内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.GlowBrushProperty">
            <summary>
            边框发光阴影的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.NonActiveGlowBrushProperty">
            <summary>
            未激活状态下边框发光阴影画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.TitleIconMarginProperty">
            <summary>
            标题Icon的Margin。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowButtonMarginProperty">
            <summary>
            窗口按钮图标元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.TitleCapsProperty">
            <summary>
            显示标题栏内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.WindowTransitionsEnabledProperty">
            <summary>
            是否允许窗口显示动画属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.EnableScreenDockHideProperty">
            <summary>
            是否启用窗体屏幕贴边停靠隐藏
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.DockShowWidthProperty">
            <summary>
            窗口贴边隐藏后预留宽度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroWindow.FlyoutsStatusChangedEvent">
            <summary>
            导航栏控件状态改变时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.AdornerLayer">
            <summary>
            获取当前装饰器图层
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.BackgroundImageHeight">
            <summary>
            获取或设置背景图片的高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.BackgroundImageSource">
            <summary>
            获取或设置背景图片。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.BackgroundImageTileMode">
            <summary>
            获取或设置背景图片的绘制方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.BackgroundImageWidth">
            <summary>
            获取或设置背景图片的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.DockShowWidth">
            <summary>
            窗口贴边隐藏后预留宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.EnableScreenDockHide">
            <summary>
            是否启用窗体屏幕贴边停靠隐藏
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.Flyouts">
            <summary>
            获取或设置导航栏控件。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.GlowBrush">
            <summary>
            获取或设置边框发光阴影的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IconBitmapScalingMode">
            <summary>
            获取或设置标题栏图标缩放的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IconEdgeMode">
            <summary>
            获取或设置标题栏图标渲染的模式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IconTemplate">
            <summary>
            获取或设置标题栏图标的模板。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IsCloseButtonEnabled">
            <summary>
            获取或设置一个值指示是否禁用关闭按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IsMaxRestoreButtonEnabled">
            <summary>
            获取或设置一个值指示是否禁用最大化按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IsMinButtonEnabled">
            <summary>
            获取或设置一个值指示是否禁用最小化按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.IsWindowDraggable">
            <summary>
            获取或设置一个值指示是否窗体可拖拽。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.LeftPaddingContent">
            <summary>
            获取或设置左侧边距中空内容
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.LeftPaddingWidth">
            <summary>
            获取或设置左侧内边距的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.LeftWindowCommands">
            <summary>
            获取或设置标题栏的左侧命令。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.NonActiveBorderBrush">
            <summary>
            获取或设置非激活状态下边框颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.NonActiveGlowBrush">
            <summary>
            获取或设置未激活状态下边框发光阴影画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.NonActiveWindowTitleBrush">
            <summary>
            获取或设置非激活状态下标题栏背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.RightWindowCommands">
            <summary>
            获取或设置标题栏的右侧命令。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowCloseButton">
            <summary>
            获取或设置一个值指示是否显示关闭按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowIconOnTitleBar">
            <summary>
            获取或设置一个值指示是否显示标题栏图标。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowMaxRestoreButton">
            <summary>
            获取或设置一个值指示是否显示最大化按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowMinButton">
            <summary>
            获取或设置一个值指示是否显示最小化按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowSystemMenuOnRightClick">
            <summary>
            获取或设置一个值指示是否右击标题栏显示系统右键菜单。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.ShowTitleBar">
            <summary>
            获取或设置一个值指示是否显示标题栏。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.TitleAlignment">
            <summary>
            获取或设置标题栏内容的水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.TitlebarHeight">
            <summary>
            获取或设置标题栏高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.TitleCaps">
            <summary>
            获取或设置一个值指示是否显示标题栏内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.TitleIconMargin">
            <summary>
            获取或设置标题Icon的Margin。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.TitleTemplate">
            <summary>
            获取或设置标题栏内容的模板。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.UseNoneWindowStyle">
            <summary>
            获取或设置使用无窗口的样式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowButtonBackgroundMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时标题栏按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowButtonBackgroundPressedBrush">
            <summary>
            获取或设置鼠标按下时标题栏按钮背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowButtonBrush">
            <summary>
            获取或设置标题栏按钮前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowButtonMargin">
            <summary>
            获取或设置窗口按钮图标元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowTitleBrush">
            <summary>
            获取或设置标题背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowTitleEffect">
            <summary>
            获取或设置标题栏阴影效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WindowTransitionsEnabled">
            <summary>
            是否允许窗口显示动画
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroWindow.WndAdornerRoot">
            <summary>
            获得装饰层根容器
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.CurrentScreen(System.Windows.Point)">
            <summary>
            获取当前屏幕
            </summary>
            <param name="mousePostion"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.DoMove(System.Double,System.Double,System.String)">
            <summary>
            窗体平移动画
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="property"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.IsHaveExtendScreen(System.Windows.Point,LdNet.MetroControls.DockOrientation)">
            <summary>
            是否有扩展屏
            </summary>
            <param name="mousePostion"></param>
            <param name="orien"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroWindow.MoveToHide(LdNet.MetroControls.DockOrientation)">
            <summary>
            设置EnableScreenDockHide=true的情况下窗体贴边隐藏
            </summary>
            <param name="orientation">贴边方向</param>
        </member>
        <member name="E:LdNet.MetroControls.MetroWindow.FlyoutsStatusChanged">
            <summary>
            导航栏控件状态改变时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroWindow.FlyoutStatusChangedRoutedEventArgs">
            <summary>
            导航栏控件状态改变路由事件参数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.PageItem">
            <summary>
            分页控件页码模型类
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.Button">
            <summary>
            Button对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.ClickCommand">
            <summary>
            ClickCommand
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.IsSelected">
            <summary>
            是否被选中
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.Position">
            <summary>
            页码位置
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PageItem.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.PageItem.#ctor(System.Int32,LdNet.MetroControls.PageItemPosition)">
            <summary>
            构造函数
            </summary>
            <param name="index"></param>
            <param name="pos"></param>
        </member>
        <member name="M:LdNet.MetroControls.PageItem.OnSelectIndexChanged(System.Int32)">
            <summary>
            触发SelectIndexChanged事件
            </summary>
            <param name="index"></param>
        </member>
        <member name="E:LdNet.MetroControls.PageItem.SelectIndexChanged">
            <summary>
            SelectIndexChanged事件
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ScrollBarService">
            <summary>
            滚动条的附加属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollBarService.VerticalScrollBarOnLeftSideProperty">
            <summary>
            垂直滚动条是否能放置到tabpanel的左侧。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollBarService.ThumbBrushProperty">
            <summary>
            滚动条背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollBarService.ScrollBarRootBackgroundProperty">
            <summary>
            ScrollBar背景色。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollBarService.ThumbMouseOverBrushProperty">
            <summary>
            滚动条鼠标覆盖时背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollBarService.ThumbPressedBrushProperty">
            <summary>
            滚动条鼠标按下时背景的画刷。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.GetScrollBarRootBackground(System.Windows.DependencyObject)">
            <summary>
            ScrollBar背景色
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.GetThumbBrush(System.Windows.DependencyObject)">
            <summary>
            获取滚动条背景的画刷。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.GetThumbMouseOverBrush(System.Windows.DependencyObject)">
            <summary>
            获取滚动条鼠标覆盖时背景的画刷。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.GetThumbPressedBrush(System.Windows.DependencyObject)">
            <summary>
            获取滚动条鼠标按下时背景的画刷。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.GetVerticalScrollBarOnLeftSide(System.Windows.DependencyObject)">
            <summary>
            获取一个值指示垂直滚动条是否能放置到tabpanel的左侧。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.SetScrollBarRootBackground(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
            <summary>
            ScrollBar背景色
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.SetThumbBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
            <summary>
            设置滚动条背景的画刷。
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.SetThumbMouseOverBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
            <summary>
            滚动条鼠标覆盖时背景的画刷。
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.SetThumbPressedBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
            <summary>
            设置滚动条鼠标按下时背景的画刷。
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:LdNet.MetroControls.ScrollBarService.SetVerticalScrollBarOnLeftSide(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置一个值指示垂直滚动条是否能放置到tabpanel的左侧。
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="T:LdNet.MetroControls.SelectionSequence">
            <summary>
            Determines the order in which visual states are set.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.SelectionSequence.CollapseBeforeExpand">
            <summary>
            Collapses are set before expansions.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.SelectionSequence.Simultaneous">
            <summary>
            No delays, all states are set immediately.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.UnifyValidationService">
            <summary>
            统一校验附加属性
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.UnifyValidationService.ControlNamesProperty">
            <summary>
            需统一校验的控件Name集合，中间以","隔开
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.UnifyValidationService.IsStartValidationProperty">
            <summary>
            是否立即触发验证。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.UnifyValidationService.HasErrorsProperty">
            <summary>
            统一验证的结果
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.UnifyValidationService.ValidationResultChangedEvent">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.AddValidationResultChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.GetChildObjects``1(System.Windows.DependencyObject,System.String[])">
            <summary>
            从一个可视化对象中找到其子对象集合
            </summary>
            <typeparam name="T">子对象类型</typeparam>
            <param name="obj">父对象</param>
            <param name="ctrlNames">控件名称集合</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.GetChildObjectsFromLogic``1(System.Windows.DependencyObject,System.String[])">
            <summary>
            从逻辑树中找到控件
            </summary>
            <typeparam name="T">子对象类型</typeparam>
            <param name="obj">父对象</param>
            <param name="ctrlNames">控件名称集合</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.GetControlNames(System.Windows.DependencyObject)">
            <summary>
            获取控件名称集合
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.GetHasErrors(System.Windows.DependencyObject)">
            <summary>
            获取 统一验证的结果
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.GetIsStartValidation(System.Windows.DependencyObject)">
            <summary>
            获取是否立即触发验证。
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.InputCtrl_ValidationResultChanged(System.Object,LdNet.MetroControls.ValidationResultArgs)">
            <summary>
            input相关控件的验证结果反馈
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            附加属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.SetControlNames(System.Windows.DependencyObject,System.String)">
            <summary>
            设置控件名称集合，中间以","隔开
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <param name="value">集合</param>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.SetHasErrors(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置 是否立即触发验证(私有)
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <param name="value">结果</param>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.SetIsStartValidation(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置是否立即触发验证。
            </summary>
            <param name="obj">控件<see cref="T:System.Windows.DependencyObject" /></param>
            <param name="value">是否立即触发</param>
        </member>
        <member name="M:LdNet.MetroControls.UnifyValidationService.StartValidations(System.Windows.DependencyObject)">
            <summary>
            开始统一验证
            </summary>
            <param name="obj">触发验证所在的控件，如Button</param>
        </member>
        <member name="T:LdNet.MetroControls.NumericUpDownKeyMode">
            <summary>
            NumericUpDown按键模式
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ColorMode">
            <summary>
            颜色模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColorMode.ColorPalette">
            <summary>
            ColorPalette
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColorMode.ColorCanvas">
            <summary>
            ColorCanvas
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ColorSortingMode">
            <summary>
            颜色排序模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColorSortingMode.Alphabetical">
            <summary>
            Alphabetical
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColorSortingMode.HueSaturationBrightness">
            <summary>
            HueSaturationBrightness
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ButtonsAlignment">
            <summary>
            锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ButtonsAlignment.Left">
            <summary>
            靠左布局
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ButtonsAlignment.Right">
            <summary>
            靠右布局
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.AccordionSelectionMode">
            <summary>
            Defines the minimum and maximum number of selected items allowed in an Accordion control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.AccordionSelectionMode.One">
            <summary>
            Exactly one item must be selected in the Accordion.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionSelectionMode.OneOrMore">
            <summary>
            At least one item must be selected in the Accordion. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionSelectionMode.ZeroOrOne">
            <summary>
            No more than one item can be selected in the accordion.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionSelectionMode.ZeroOrMore">
            <summary>
            Any number of  items can be selected in the Accordion. 
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.AccordionAction">
            <summary>
            Determines the action the AccordionItem will perform.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.AccordionAction.None">
            <summary>
            No action will be performed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionAction.Collapse">
            <summary>
            A collapse will be performed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionAction.Expand">
            <summary>
            An expand will be performed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.AccordionAction.Resize">
            <summary>
            A resize will be performed.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.DockOrientation">
            <summary>
            窗口贴边方向
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockOrientation.Left">
            <summary>
            屏幕左边
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockOrientation.Top">
            <summary>
            屏幕上边
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockOrientation.Right">
            <summary>
            屏幕右边
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockOrientation.Bottom">
            <summary>
            屏幕底边
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.DockState">
            <summary>
            窗口贴边隐藏状态
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.None">
            <summary>
            正常显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockLeftHide">
            <summary>
            屏幕左边隐藏
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockLeftShow">
            <summary>
            屏幕左边显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockTopHide">
            <summary>
            屏幕上边隐藏
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockTopShow">
            <summary>
            屏幕上边显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockRightHide">
            <summary>
            屏幕右边隐藏
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DockState.DockRightShow">
            <summary>
            屏幕右边显示
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.PaginationDiaplayMode">
            <summary>
            分页控件显示模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PaginationDiaplayMode.Full">
            <summary>
            全部
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PaginationDiaplayMode.WithoutToolbar">
            <summary>
            去除右侧工具栏
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.PageItemPosition">
            <summary>
            页码位置
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PageItemPosition.Left">
            <summary>
            左边隐藏
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PageItemPosition.Middle">
            <summary>
            中间显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PageItemPosition.Right">
            <summary>
            右边隐藏
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ScrollDirection">
            <summary>
            跑马灯控件滚动方向
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollDirection.Left">
            <summary>
            向左滚动
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollDirection.Right">
            <summary>
            向右滚动
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollDirection.Up">
            <summary>
            向上滚动
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ScrollDirection.Down">
            <summary>
            向下滚动
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.DateTimePickerFormat">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DateTimePickerFormat.Long">
            <summary>
            日期+时间
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DateTimePickerFormat.Short">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DateTimePickerFormat.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DateTimePickerFormat.Custom">
            <summary>
            自定义
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.DataGridExpandMode">
            <summary>
            数据列表展开模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DataGridExpandMode.ZeroOrOne">
            <summary>
            允许最多展开一行。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DataGridExpandMode.ZeroOrMore">
            <summary>
            允许展开多行。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.DetailDisplayModel">
            <summary>
            MetroDataGrid的Detail模版显示模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DetailDisplayModel.AllCollapsed">
            <summary>
            全部隐藏，需用户自行显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DetailDisplayModel.AllVisible">
            <summary>
            全部显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DetailDisplayModel.SelectedVisible">
            <summary>
            选中行时显示
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ColumnFilterModel">
            <summary>
            列筛选模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColumnFilterModel.And">
            <summary>
            多列条件全部满足
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.ColumnFilterModel.Or">
            <summary>
            多列条件分别满足
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.GestureDirection">
            <summary>
            鼠标手势移动方向枚举
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.GestureDirection.Up">
            <summary>
            上
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.GestureDirection.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.GestureDirection.Down">
            <summary>
            下
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.GestureDirection.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.GestureDirection.None">
            <summary>
            无效
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.EnumValidationRegular">
            <summary>
            验证规则
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.None">
            <summary>
            默认为空
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.NotNull">
            <summary>
            非空
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.URL">
            <summary>
            url
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.IPv4">
            <summary>
            IPv4 地址
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.IPv6">
            <summary>
            IPv6 地址
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.ZipCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.Phone">
            <summary>
            手机
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.Tel">
            <summary>
            座机电话
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.IdCard">
            <summary>
            身份标示号码
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.ChineseChars">
            <summary>
            中文
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.EnglishChars">
            <summary>
            英文字符
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.ChineseOrEnglishChars">
            <summary>
            中英文字符
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.NumberChars">
            <summary>
            数字字符
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.IsNumber">
            <summary>
            是否是效数字
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumValidationRegular.IsNumberEx">
            <summary>
            是否是效数字,不管正负
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.EnumTextSearchModel">
            <summary>
            文本搜索模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumTextSearchModel.None">
            <summary>
            文本不搜索
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumTextSearchModel.Mix">
            <summary>
            混合模式，即有匹配时筛选并勾选，无匹配时在不会在失去焦点或关闭浮动框时重置
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumTextSearchModel.Strict">
            <summary>
            严格，文本框中的值与数据源项相互匹配
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.EnumSelectionModel">
            <summary>
            下拉选中模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumSelectionModel.Single">
            <summary>
            单选
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.EnumSelectionModel.Multiple">
            <summary>
            多选
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.HideUpDownButtons">
            <summary>
            隐藏按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.HideUpDownButtons.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.HideUpDownButtons.HideUpButton">
            <summary>
            隐藏加按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.HideUpDownButtons.HideDownButton">
            <summary>
            隐藏减按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.HideUpDownButtons.HideUpDownButtons">
            <summary>
            隐藏加减按钮
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Extensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            An implementation of the Contains member of string that takes in a 
            string comparison. The traditional .NET string Contains member uses 
            StringComparison.Ordinal.
            </summary>
            <param name="s">The string.</param>
            <param name="value">The string value to search for.</param>
            <param name="comparison">The string comparison type.</param>
            <returns>Returns true when the substring is found.</returns>
        </member>
        <member name="M:LdNet.MetroControls.Extensions.Invert(System.Windows.Media.Matrix,System.Windows.Media.Matrix@)">
            <summary>
            Inverts a Matrix. The Invert functionality on the Matrix type is 
            internal to the framework only. Since Matrix is a struct, an out 
            parameter must be presented.
            </summary>
            <param name="m">The Matrix object.</param>
            <param name="outputMatrix">The matrix to return by an output 
            parameter.</param>
            <returns>Returns a value indicating whether the type was 
            successfully inverted. If the determinant is 0.0, then it cannot 
            be inverted and the original instance will remain untouched.</returns>
        </member>
        <member name="F:LdNet.MetroControls.ContentControlEx.ContentCharacterCasingProperty">
            <summary>
            The DependencyProperty for the CharacterCasing property.
            Controls whether or not content is converted to upper or lower case
            Default Value: CharacterCasing.Normal
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ContentControlEx.ContentCharacterCasing">
            <summary> 
            Character casing of the Content
            </summary> 
        </member>
        <member name="F:LdNet.MetroControls.ContentControlEx.RecognizesAccessKeyProperty">
            <summary>
            The DependencyProperty for the RecognizesAccessKey property. 
            Default Value: false 
            </summary> 
        </member>
        <member name="P:LdNet.MetroControls.ContentControlEx.RecognizesAccessKey">
            <summary> 
            Determine if the inner ContentPresenter should use AccessText in its style
            </summary> 
        </member>
        <member name="T:LdNet.MetroControls.CustomValidationPopup">
            <summary>
            自定义验证弹出窗
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DropDownButton.ContentTemplateProperty">
            <summary>
            The DependencyProperty for the ContentTemplate property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DropDownButton.ContentTemplateSelectorProperty">
            <summary>
            The DependencyProperty for the ContentTemplateSelector property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.DropDownButton.ContentStringFormatProperty">
            <summary>
            The DependencyProperty for the ContentStringFormat property. 
            </summary> 
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.Content">
            <summary>
            Gets or sets the Content of this control..
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ContentTemplate">
            <summary> 
            ContentTemplate is the template used to display the content of the control. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ContentTemplateSelector">
            <summary>
            ContentTemplateSelector allows to provide custom logic for choosing the template used to display the content of the control.
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:LdNet.MetroControls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ContentStringFormat">
            <summary>
            ContentStringFormat is the format used to display the content of the control as a string
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:LdNet.MetroControls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.CommandTarget">
            <summary>
            Gets or sets the target element on which to fire the command.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.Command">
            <summary>
            Get or sets the Command property. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.IsExpanded">
            <summary> 
            Indicates whether the Menu is visible. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ExtraTag">
            <summary>
            Gets or sets an extra tag.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.Orientation">
            <summary>
            Gets or sets the dimension of children stacking.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.Icon">
            <summary>
             Gets or sets the Content used to generate the icon part.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.IconTemplate">
            <summary> 
            Gets or sets the ContentTemplate used to display the content of the icon part. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ButtonStyle">
            <summary>
            Gets/sets the button style.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.MenuStyle">
            <summary>
            Gets/sets the menu style.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ArrowBrush">
            <summary>
            Gets/sets the brush of the button arrow icon.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ArrowMouseOverBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the mouse is over the drop down button.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ArrowPressedBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.DropDownButton.ArrowVisibility">
            <summary>
            Gets/sets the visibility of the button arrow icon.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.DropDownButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="T:LdNet.MetroControls.MetroFlyout">
            <summary>
            导航栏控件
            <see cref="T:LdNet.MetroControls.MetroWindow" />
            <seealso cref="T:LdNet.MetroControls.FlyoutsControl" />
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.HeaderProperty">
            <summary>
            标题的内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.PositionProperty">
            <summary>
            此元素相对于父容器MetroWindow的位置。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsOpenProperty">
            <summary>
            此元素可见。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.AnimateOnPositionChangeProperty">
            <summary>
            此元素相对于父容器MetroWindow的位置改变时使用动画效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.HeaderTemplateProperty">
            <summary>
            标题的数据模板。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.CloseCommandProperty">
            <summary>
            关闭按钮被点击时的命令。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.ExternalCloseButtonProperty">
            <summary>
            关闭此元素时使用的鼠标点击键。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.CloseButtonVisibilityProperty">
            <summary>
            关闭按钮显示的状态。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.TitleVisibilityProperty">
            <summary>
            标题显示的状态。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.AreAnimationsEnabledProperty">
            <summary>
            此元素打开时启用动画效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.FocusedElementProperty">
            <summary>
            获取焦点的元素。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.AllowFocusElementProperty">
            <summary>
            允许元素获取焦点。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsTopmostProperty">
            <summary>
            此元素在FlyoutsControl中的ZIndex最大。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsAnimatingProperty">
            <summary>
            是否正在动画。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsPinnedProperty">
            <summary>
            Gets/sets whether this flyout stays open when the user clicks outside of it.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.AnimateOpacityProperty">
            <summary>
            Gets/sets whether this flyout animates the opacity of the flyout when opening/closing.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsModalProperty">
            <summary>
            Gets/sets whether this flyout is modal.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsOpenChangedEvent">
            <summary>
            当IsOpen属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.ClosingFinishedEvent">
            <summary>
            关闭动画结束时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroFlyout.IsAnimatingChangedEvent">
            <summary>
            IsAnimating属性值改变时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.AllowFocusElement">
            <summary>
            获取或设置一个值指示是否允许元素获取焦点。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.AnimateOnPositionChange">
            <summary>
            获取或设置一个值指示此元素相对于父容器MetroWindow的位置改变时是否使用动画效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.AnimateOpacity">
            <summary>
            Gets/sets whether this flyout animates the opacity of the flyout when opening/closing.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.AreAnimationsEnabled">
            <summary>
            获取或设置一个值指示此元素打开时是否启用动画效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.CloseButtonVisibility">
            <summary>
            获取或设置关闭按钮显示的状态。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.CloseCommand">
            <summary>
            获取或设置关闭按钮被点击时的命令。(当IsOpen设置为False时，不生效。)
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.ExternalCloseButton">
            <summary>
            获取或设置关闭此元素时使用的鼠标点击键。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.FocusedElement">
            <summary>
            获取或设置获取焦点的元素。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.Header">
            <summary>
            获取或设置标题的内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.HeaderTemplate">
            <summary>
            获取或设置标题的数据模板。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.IsAnimating">
            <summary>
            获取一个值指示是否正在动画。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.IsModal">
            <summary>
            Gets/sets whether this flyout is modal.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.IsOpen">
            <summary>
            获取或设置一个值指示此元素是否可见。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.IsPinned">
            <summary>
            Gets/sets whether this flyout stays open when the user clicks outside of it.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.IsTopmost">
            <summary>
            获取或设置一个值指示此元素在FlyoutsControl中的ZIndex是否最大。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.Position">
            <summary>
            获取或设置此元素相对于父容器MetroWindow的位置。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroFlyout.TitleVisibility">
            <summary>
            获取或设置标题显示的状态。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroFlyout.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroFlyout.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroFlyout.ClosingFinished">
            <summary>
            关闭动画结束时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroFlyout.IsAnimatingChanged">
            <summary>
            IsAnimating属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroFlyout.IsOpenChanged">
            <summary>
            当IsOpen属性值改变时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.FlyoutsControl">
            <summary>
            A FlyoutsControl is for displaying flyouts in a HsWindow.
            <see cref="T:LdNet.PlugIn.Controls.MetroWindow" />
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FlyoutsControl.OverrideExternalCloseButton">
            <summary>
            Gets/sets whether <see cref="!:LdNet.MetroControls.Flyout.ExternalCloseButton" /> is ignored and all flyouts behave as if it was set to the value of this property.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.FlyoutsControl.OverrideIsPinned">
            <summary>
            Gets/sets whether <see cref="!:LdNet.MetroControls.Flyout.IsPinned" /> is ignored and all flyouts behave as if it was set false.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.FlyoutTheme.Adapt">
            <summary>
            Adapts the Flyout's theme to the theme of its host window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.FlyoutTheme.Inverse">
            <summary>
            Adapts the Flyout's theme to the theme of its host window, but inverted.
            This theme can only be applied if the host window's theme abides the "Dark" and "Light" affix convention.
            (see <see cref="M:LdNet.MetroControls.ThemeManager.GetInverseAppTheme(LdNet.MetroControls.AppTheme)"/> for more infos.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.FlyoutTheme.Dark">
            <summary>
            The dark theme. This is the default theme.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.FlyoutTheme.Accent">
            <summary>
            The flyouts theme will match the host window's accent color.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.GlowWindow">
            <summary>
            GlowWindow
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.GlowWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroAnimatedSingleRowTabControl">
            <summary>
            A MetroTabControl (Pivot) that wraps TabItem/MetroTabItem headers on a single row.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAnimatedSingleRowTabControl.#ctor">
            <summary>
            Initializes a new instance of the LdNet.MetroControls.MetroAnimatedSingleRowTabControl class.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroAnimatedTabControl">
            <summary>
            A MetroTabControl (Pivot) that uses a TransitioningContentControl to animate the contents of a TabItem/MetroTabItem.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroAnimatedTabControl.#ctor">
            <summary>
            Initializes a new instance of the LdNet.MetroControls.MetroAnimatedTabControl class.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroButton">
            <summary>
            自定义标准按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.ContentMarginProperty">
            <summary>
            内容元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BorderMouseOverBrushProperty">
            <summary>
            鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BorderPressedBrushProperty">
            <summary>
            鼠标按下时边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BorderDisabledBrushProperty">
            <summary>
            禁用时边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BackgroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BackgroundDisabledBrushProperty">
            <summary>
            禁用时背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BackgroundPressedBrushProperty">
            <summary>
            鼠标按下时背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.ForegroundMouseOverBrushProperty">
            <summary>
            鼠标悬停时前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.ForegroundPressedBrushProperty">
            <summary>
            鼠标按下时前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.ForegroundDisabledBrushProperty">
            <summary>
            禁用时前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconResourceKeyProperty">
            <summary>
            图标资源的键值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconTemplateProperty">
            <summary>
            图标的模板。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconDataProperty">
            <summary>
            图标的数据。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconHeightProperty">
            <summary>
            图标元素的高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconWidthProperty">
            <summary>
            图标元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.IconMarginProperty">
            <summary>
            图标元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BorderShadowVisibilityProperty">
            <summary>
            鼠标悬停时是否启用光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.BorderDropShadowColorProperty">
            <summary>
            边框光晕的颜色。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroButton.EnableMixPaddingrProperty">
            <summary>
            是否开启混合适应边距，即当内容被Padding遮挡时自动将Padding设置为0
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroButton.ContentMargin">
            <summary>
            获取或设置内容元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroButton.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.CaledarDayButtonModel">
            <summary>
            用于设置天按钮的相关状态，如画刷颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.CaledarDayButtonModel.Date">
            <summary>
            日期，只需到日期即可
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.CaledarDayButtonModel.Foreground">
            <summary>
            前景色
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.IToggleButton">
            <summary>
            选择性按钮控件接口
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.IToggleButton.ContentDirection">
            <summary>
            获取或设置内容水平的对齐方向。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroCheckBox">
            <summary>
            自定义标准输入框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.CheckedBrushProperty">
            <summary>
            选中时勾的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.CheckedBackgroundBrushProperty">
            <summary>
            选中时勾的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.BorderMouseOverBrushProperty">
            <summary>
            鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.CheckBoxSizeProperty">
            <summary>
            勾选框的尺寸。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroCheckBox.ContentDirectionProperty">
            <summary>
            内容水平的对齐方向。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.CheckedBrush">
            <summary>
            获取或设置选中时勾的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.CheckedBackgroundBrush">
            <summary>
            获取或设置选中时勾的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.CheckBoxSize">
            <summary>
            获取或设置勾选框的尺寸。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroCheckBox.ContentDirection">
            <summary>
            获取或设置内容水平的对齐方向。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroCheckBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroComboBox">
            <summary>
            自定义下拉框控件，支持多列模式，并实现单选/多选，支持多列模式下的搜索匹配及自动勾选功能
            <para>多列模式 - 开启EnableCheckLabelModel属性，否则为传统模式</para>
            <para>单选/多选 - 设置SelectionModel属性来确定，默认单选</para>
            <para>搜索匹配 - 前提需要设置IsEditable属性，可以在输入中自动搜索匹配并自动勾选该项</para>
            <para>获取文本框内容 - 如果是多列下啦模式，使用InnerText属性</para>
             <para>获取已选中的项集合 - 使用CheckedItems属性</para>
            <para>详情参考帮助文档</para>
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.InternalItemTemName">
            <summary>
            内部使用的多列ItemTemplate名称，用于ItemTemplate与用户自定义模板之间的比较
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.collectionView">
            <summary>
            数据源的默认视图
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.DataSource">
            <summary>
            本地数据源
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.checkLabelModelFty">
            <summary>
            CheckLabel模式时模板创建工厂
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.dropDownPopup">
            <summary>
            下拉浮动框（来自模版）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.dropDownBtn">
            <summary>
            下拉按钮（来自模版）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.editableTxb">
            <summary>
            多列文本框（来自模版）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.dropDownPopupc">
            <summary>
            传统下拉浮动框（来自模版）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.editableTxt">
            <summary>
            传统文本框（来自模版）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.checkBoxSeletedAll">
            <summary>
            全选复选框（来自模板）
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.checkedLabelItems">
            <summary>
            当前已选中的多列项，为了提高检索速度缓存一个已选中项的本地集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.isCheckLabelTemplateApplied">
            <summary>
            多列模式模板是否已加载过
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.checkedItemUpdated">
            <summary>
            默认设置此属性为true，为了避免CheckedItems和CheckedItem的时序问题
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.hasValidationErrorDescriptor">
            <summary>
            MetroTextBox HasValidationError监听器
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ShowValidationBorderProperty">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.BorderMouseOverBrushProperty">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsLockProperty">
            <summary>
            是否锁定文本的输入框。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsStartValidationProperty">
            <summary>
            是否立即触发验证。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LockButtonVisibilityProperty">
            <summary>
            是否显示锁按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ButtonsAlignmentProperty">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.WatermarkProperty">
            <summary>
            文本框的水印。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.WatermarkBrushProperty">
            <summary>
            文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ValidationRulesProperty">
            <summary>
            验证规则的集合。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ValidationTriggerProperty">
            <summary>
            验证触发的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ValidationRegularProperty">
            <summary>
            内置的验证规则。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.HasValidationErrorProperty">
            <summary>
            指示是否验证失败。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CaretBrushProperty">
            <summary>
            用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.HostWidthProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.HostHeightProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelVerticalAlignmentProperty">
            <summary>
            标签纵向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LabelContentMarginProperty">
            <summary>
            标签元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemSelectedBackgroundBrushProperty">
            <summary>
            选中项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemMouseOverBackgroundBrushProperty">
            <summary>
            鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.EnableCheckLabelModelProperty">
            <summary>
             是否启动 单选/多选 多列模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemsSourceProperty">
            <summary>
            获取或设置用于生成 System.Windows.Controls.ItemsControl 的内容的集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.SelectionModelProperty">
            <summary>
             下拉选中模式，默认单选
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.DisplayColumnNamesProperty">
            <summary>
             获取或设置需要显示的列，以","隔开，为空时全部显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.KeyProperty">
            <summary>
             选中后在文本框中显示的列名，为空时为第一列字段(单选模式，若为空，文本框显示下拉框内所有显示列的信息)
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.SplitMarkProperty">
            <summary>
             用于分隔选中项字符串集合的字符，默认是","
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.EditableTextBoxStyleProperty">
            <summary>
            获取或设置 可编辑输入框样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.TextSearchModelProperty">
            <summary>
            文本搜索模式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.InnerTextProperty">
            <summary>
            文本框中的内容
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CheckedItemsProperty">
            <summary>
            选中项集合
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CheckedItemProperty">
            <summary>
            当前选中的第一项
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnBackgroundProperty">
            <summary>
            下拉按钮背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnMouseOverBackgroundProperty">
            <summary>
            下拉按钮鼠标覆盖时背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnPressedBackgroundProperty">
            <summary>
            下拉按钮鼠标按下时背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnForegroundProperty">
            <summary>
            下拉按钮前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnMouseOverForegroundProperty">
            <summary>
            下拉按钮鼠标移入时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleBtnPressedForegroundProperty">
            <summary>
            下拉按钮鼠标按下时前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemSelectedForegroundProperty">
            <summary>
            项选中前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemMouseOverForegroundProperty">
            <summary>
            项鼠标覆盖前景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.DropBackgroundProperty">
            <summary>
            下拉窗口背景色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ToggleButtonVisibilityProperty">
            <summary>
            是否显示右侧下拉按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IconResourceKeyProperty">
            <summary>
            左侧图标资源Key值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IconMarginProperty">
            <summary>
            左侧图标边距 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IconBrushProperty">
            <summary>
            左侧图标颜色 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IconWidthProperty">
            <summary>
            左侧图标宽度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IconHeightProperty">
            <summary>
            左侧图标高度 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ColumnWidthsProperty">
            <summary>
            多列模式下手动设置各列的宽度 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsVirtualizationedProperty">
            <summary>
            获取或设置是否开启虚拟化 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsEnterDropDownOpenProperty">
            <summary>
            获取或设置多列模式是否按回车打开下拉框 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ItemMarginProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.EnableInputMethodProperty">
            <summary>
            是否支持输入法切换 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CanSelectAllProperty">
            <summary>
            是否支持全选 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IDProperty">
            <summary>
            控件标识
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CheckBoxStyleProperty">
            <summary>
            获取或设置多列多选样式复选框样式
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsShowToolTipProperty">
            <summary>
            是否显示ToolTip 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsCaretLeftProperty">
            <summary>
            是否选中后将光标居左
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.TextMaxLenthProperty">
            <summary>
            获取或设置文本框可输入的的最大字符数
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.IsDropDownWidthAutoProperty">
            <summary>
            是否下拉部分宽度自适应
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.CheckedEvent">
            <summary>
            当下拉选项选中状态改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.LockChangedEvent">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.ValidationResultChangedEvent">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.TextChangedEvent">
            <summary>
            输入框字符发生改变事件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroComboBox.TemporaryInput">
            <summary>
            临时输入法
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ButtonsAlignment">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CanSelectAll">
            <summary>
            是否支持全选
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ID">
            <summary>
            控件标识
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CaretBrush">
            <summary>
            获取或设置用于绘制文本框的插入符号的画笔。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CheckBoxStyle">
            <summary>
            获取或设置多列多选样式复选框样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.checkBoxVisible">
            <summary>
            获取是否显示CheckBox
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CheckedItem">
            <summary>
            获取或设置 当前选中的第一项
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CheckedItems">
            <summary>
            获取或设置 选中项集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CheckedLabels">
            <summary>
            获取已选中的项的Key的字符串集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ColumnWidths">
            <summary>
            多列模式下手动设置各列的宽度
            <para>注：需在ItemsSource赋值之前赋值有效；此属性不包含多选模式时前面勾选框的空间</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.DisplayColumnNames">
            <summary>
            获取或设置需要显示的列，以","隔开，为空时全部显示
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.DropBackground">
            <summary>
            获取或设置 下拉窗口背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.EditableTextBoxStyle">
            <summary>
            获取或设置 可编辑输入框样式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.EnableCheckLabelModel">
            <summary>
            获取或设置 是否启动 单选/多选 多列模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.EnableInputMethod">
            <summary>
            是否支持输入法切换
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.HasValidationError">
            <summary>
            获取一个值指示是否验证失败。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.HostHeight">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.HostWidth">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IconBrush">
            <summary>
            获取或设置左侧图标颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IconHeight">
            <summary>
            获取或设置左侧图标高度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IconMargin">
            <summary>
            获取或设置左侧图标边距 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IconResourceKey">
            <summary>
            获取或设置 左侧图标资源Key值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IconWidth">
            <summary>
            获取或设置左侧图标宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.InnerText">
            <summary>
            获取或设置 文本框中的内容
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsCaretLeft">
            <summary>
            获取或设置是否选中后将光标居左
            <para>IsCaretLeft默认值是false, 选中后光标居右</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsDropDownOpen">
            <summary>
            获取或设置 下拉部分是否展开
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsDropDownWidthAuto">
            <summary>
            获取或设置是否下拉部分宽度自适应
            <para>IsDropDownWidthAuto默认值是false, 下拉部分宽度不自适应</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsEnterDropDownOpen">
            <summary>
            获取或设置多列模式是否按回车打开下拉框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsLock">
            <summary>
            获取或设置是否锁定文本的输入框。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsShowToolTip">
            <summary>
            是否显示ToolTip
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsStartValidation">
            <summary>
            设置是否立即触发验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.IsVirtualizationed">
            <summary>
            获取或设置是否开启虚拟化 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemMargin">
            <summary>
            获取或设置下拉选项区域内容边距
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemMouseOverBackgroundBrush">
            <summary>
            获取或设置鼠标悬停时项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemMouseOverForeground">
            <summary>
            获取或设置 项鼠标覆盖前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemSelectedBackgroundBrush">
            <summary>
            获取或设置选中项背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemSelectedForeground">
            <summary>
            获取或设置 项选中前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ItemsSource">
            <summary>
            获取或设置用于生成 System.Windows.Controls.ItemsControl 的内容的集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.Key">
            <summary>
            获取或设置 选中后在文本框中显示的列名，为空时为第一列字段(单选模式，若为空，文本框显示下拉框内所有显示列的信息)
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelContentMargin">
            <summary>
            获取或设置标签元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LabelVerticalAlignment">
            <summary>
            获取或设置标签纵向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.LockButtonVisibility">
            <summary>
            获取或设置是否显示锁按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.SelectionModel">
            <summary>
            获取或设置 下拉选中模式，默认单选
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.SetItemCheckStateCommand">
            <summary>
            多选模式下，全选
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ShowValidationBorder">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.SplitMark">
            <summary>
            获取或设置 用于分隔选中项字符串集合的字符，默认是","
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.TextMaxLenth">
            <summary>
            获取或设置文本框可输入的的最大字符数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.TextSearchModel">
            <summary>
            获取或设置 文本搜索模式
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnBackground">
            <summary>
            获取或设置 下拉按钮背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnForeground">
            <summary>
            获取或设置 下拉按钮前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnMouseOverBackground">
            <summary>
            获取或设置 下拉按钮鼠标覆盖时背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnMouseOverForeground">
            <summary>
            获取或设置 下拉按钮鼠标移入时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnPressedBackground">
            <summary>
            获取或设置 下拉按钮鼠标按下时背景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleBtnPressedForeground">
            <summary>
            获取或设置 下拉按钮鼠标按下时前景色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ToggleButtonVisibility">
            <summary>
            获取或设置 是否显示右侧下拉按钮
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ValidationRegular">
            <summary>
            获取或设置内置的验证规则。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ValidationRules">
            <summary>
            获取或设置验证规则的集合。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.ValidationTrigger">
            <summary>
             获取或设置验证触发的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.Watermark">
            <summary>
            获取或设置文本框的水印。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroComboBox.WatermarkBrush">
            <summary>
            获取或设置文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.#cctor">
            <summary>
            自定义控件重写元数据
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.AddCheckedItemCache(System.String,LdNet.MetroControls.MultiColumnsItem)">
            <summary>
            添加选中项到缓存
            </summary>
            <param name="key">选中项Key</param>
            <param name="item">项<see cref="T:LdNet.PlugIn.Controls.MultiColumnsItem" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.AnyEx(System.String[],System.String[])">
            <summary>
            2个集合判断是否存在交集
            </summary>
            <param name="values1">集合1</param>
            <param name="values2">集合2</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.ClearCheckedItemCache">
            <summary>
            清除选中项缓存
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.Collection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            源数据的项改变事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.CreateCheckLabelItemTemplate">
            <summary>
            创建多列下拉内容模板
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.DropDownBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            下拉按钮ToggleButton的Checked事件 ，实现手动下拉
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.DropDownPopup_Closed(System.Object,System.EventArgs)">
            <summary>
            下拉浮动框关闭事件，为了实现关闭时回归视图及刷新文本框
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.EditableTxb_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            输入框文本改变事件，实现响应搜索逻辑
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.EnforceInstance``1(System.String)">
            <summary>
            找到模板子元素
            </summary>
            <typeparam name="T">子元素的类型</typeparam>
            <param name="partName">子元素的Name</param>
            <returns>返回子元素对象</returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.GetColumnMembers">
            <summary>
            获得列名称集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.Grid_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            项内容(grid)的鼠标点击事件，为了手工实现点击项选中功能
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.MetroComboBox_IsKeyboardFocusWithinChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsKeyboardFocusWithinChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.Item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            项元素属性改变事件,主要做选中状态后的逻辑处理
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate，此事件是在模板应用第一次时触发，为了实现在控件应用模版后第一次呈现之后的相应逻辑
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroComboBox.myPopupClosed">
            <summary>
            下拉框关闭事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnChecked(LdNet.MetroControls.CheckedEventArgs)">
            <summary>
            响应IsChecked事件
            </summary>
            <param name="args">参数<see cref="T:LdNet.PlugIn.Controls.CheckedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            重写OnGotFocus，为了在焦点触发之后能够将光标移到最后
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnInitialized(System.EventArgs)">
            <summary>
            重写OnInitialized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            重写OnItemsSourceChanged，为了适应赋值不同的数据源时改变相关成员变量
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            重写OnItemTemplateChanged，为了实现当不同的ItemTemplate改变之后是否为多列模式
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            重写OnLostFocus，为了在失去焦点之后能够时文本框中的内容刷新
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            重写OnPreviewKeyDown,为了可以在键盘按下时弹出下拉框
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.RefreshCheckLabelModel">
            <summary>
            刷新CheckLabel模式，当在EnableCheckLabelModel=true或数据源改变时刷新
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.RefreshInput">
            <summary>
            刷新输入法,解决下拉选项遮挡输入法问题
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.RemoveCheckedItemCache(System.String,LdNet.MetroControls.MultiColumnsItem)">
            <summary>
            从缓存中移除选中项
            </summary>
            <param name="key">选中项Key</param>
            <param name="item">项<see cref="T:LdNet.PlugIn.Controls.MultiColumnsItem" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetCheckedChangeByInputting(LdNet.MetroControls.MultiColumnsItem,System.Boolean)">
            <summary>
            设置输入状态下时的选中项改变
            </summary>
            <param name="item"></param>
            <param name="isChecked"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetCheckedItem(System.Object)">
            <summary>
            设置选中项
            </summary>
            <param name="checkedItem">选中项</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetCheckedItems(System.Collections.IList)">
            <summary>
            设置选中项集合
            </summary>
            <param name="chdItems">选中项集合</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetCheckStatesByAll(System.Boolean)">
            <summary>
            设置每一项选中状态为全选或者全不选
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetCheckStatusByCheckedItems">
            <summary>
            根据当前选中项集合设置项的选中状态
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetEnableCheckLabelModel(System.Boolean)">
            <summary>
            设置是否启用多列模式
            </summary>
            <param name="enableCheckLabelModel">是否启用多列模式</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetInnerText(System.String)">
            <summary>
            设置InnerText属性
            </summary>
            <param name="innerText">文本</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetItemsSource(System.Collections.IEnumerable)">
            <summary>
            设置ItemsSource属性
            </summary>
            <param name="source">源数据</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetTextWhenLostFocus">
            <summary>
            当失去焦点时刷新文本框内容并将过滤器清除
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.SetTextWithoutTextChange(System.String)">
            <summary>
            设置文本框中内容而不触发文本改变事件
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:LdNet.MetroControls.MetroComboBox.StartValidation">
            <summary>
            手动触发验证。
            <para>如使用MVVM模式开发，使用IsStartValidation=True来手动触发验证</para>
            <para>注：如果用户设置了Binding方式，如InnerText={Binding }，需要在XAML的Binding标签中设置NotifyOnValidationError=True，否则无法反馈及触发相关验证路由事件</para>
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroComboBox.Checked">
            <summary>
            当下拉选项选中状态改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroComboBox.LockChanged">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroComboBox.TextChanged">
            <summary>
            输入框字符发生改变事件
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroComboBox.ValidationResultChanged">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroIconButton">
            <summary>
            icon矢量元素按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroIconButton.ResourceKeyProperty">
            <summary>
            Icon资源的key值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroIconButton.MouseOverForegroundProperty">
            <summary>
            鼠标悬停时前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroIconButton.IconContentProperty">
            <summary>
            icon内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroIconButton.PressedForegroundBrushProperty">
            <summary>
            鼠标按下时前景前景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroIconButton.ForegroundDisabledBrushProperty">
            <summary>
            禁用时前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroIconButton.ForegroundDisabledBrush">
            <summary>
            获取或设置禁用时前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroIconButton.IconContent">
            <summary>
            获取或设置icon内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroIconButton.MouseOverForeground">
            <summary>
            获取或设置鼠标悬停时前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroIconButton.PressedForegroundBrush">
            <summary>
            获取或设置鼠标按下时前景前景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroIconButton.ResourceKey">
            <summary>
            获取或设置Icon资源的key值。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroIconButton.EnforceInstance``1(System.String)">
            <summary>
            查找模板方法
            </summary>
            <typeparam name="T">目标控件类型</typeparam>
            <param name="partName">部件名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroIconButton.GetSharp(System.String)">
            <summary>
            获取图形
            </summary>
            <param name="resourceKey">资源Key</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroIconButton.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate，此事件是在模板应用第一次时触发，为了实现在控件应用模版后第一次呈现之后的相应逻辑
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroIconButton.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroIconButton.ResourceKeyValueChange(System.String)">
            <summary>
            资源Key改变
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroNavigationWindow">
            <summary>
            A reimplementation of NavigationWindow based on MetroWindow.
            </summary>
            <see cref="T:System.Windows.Navigation.NavigationWindow"/>
            <summary>
            MetroNavigationWindow
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.ForwardStack">
            <summary>
            Gets an IEnumerable that you use to enumerate the entries in back navigation history for a NavigationWindow.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.BackStack">
            <summary>
            Gets an IEnumerable that you use to enumerate the entries in back navigation history for a NavigationWindow.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.NavigationService">
            <summary>
            Gets the NavigationService that is used by this MetroNavigationWindow to provide navigation services to its content.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.NavigationService"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one entry in back navigation history.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.CanGoForward">
            <summary>
            Gets a value that indicates whether there is at least one entry in forward navigation history.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
            <summary>
            Gets or sets the base uniform resource identifier (URI) of the current context.
            </summary>
            <see cref="P:System.Windows.Markup.IUriContext.BaseUri"/>
        </member>
        <member name="P:LdNet.MetroControls.MetroNavigationWindow.Source">
            <summary>
            Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.  
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.Source"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
            <summary>
            Adds an entry to back navigation history that contains a CustomContentState object.
            </summary>
            <param name="state">A CustomContentState object that represents application-defined state that is associated with a specific piece of content.</param>
            <see cref="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.RemoveBackEntry">
            <summary>
            Removes the most recent journal entry from back history.
            </summary>
            <returns>The most recent JournalEntry in back navigation history, if there is one.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.GoBack">
            <summary>
            Navigates to the most recent item in back navigation history.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.GoForward">
            <summary>
            Navigates to the most recent item in forward navigation history.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.Navigate(System.Object)">
            <summary>
            Navigates asynchronously to content that is contained by an object.
            </summary>
            <param name="content">An Object that contains the content to navigate to.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.Navigate(System.Uri)">
            <summary>
            Navigates asynchronously to content that is specified by a uniform resource identifier (URI).
            </summary>
            <param name="source">A Uri object initialized with the URI for the desired content.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.Navigate(System.Object,System.Object)">
            <summary>
            Navigates asynchronously to content that is contained by an object, and passes an object that contains data to be used for processing during navigation.
            </summary>
            <param name="content">An Object that contains the content to navigate to.</param>
            <param name="extraData">A Object that contains data to be used for processing during navigation.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.Navigate(System.Uri,System.Object)">
            <summary>
            Navigates asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.
            </summary>
            <param name="source">A Uri object initialized with the URI for the desired content.</param>
            <param name="extraData">A Object that contains data to be used for processing during navigation.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.StopLoading">
            <summary>
            Stops further downloading of content for the current navigation request.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.FragmentNavigation">
            <summary>
            Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.Navigating">
            <summary>
            Occurs when a new navigation is requested.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.Navigating"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.NavigationFailed">
            <summary>
            Occurs when an error is raised while navigating to the requested content.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.NavigationProgress">
            <summary>
            Occurs periodically during a download to provide navigation progress information.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.NavigationStopped">
            <summary>
            Occurs when the StopLoading method is called, or when a new navigation is requested while a current navigation is in progre
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.Navigated">
            <summary>
            Occurs when the content that is being navigated to has been found, and is available from the PageContent property, although it may not have completed loading
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.Navigated"/>
        </member>
        <member name="E:LdNet.MetroControls.MetroNavigationWindow.LoadCompleted">
            <summary>
            Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted"/>
        </member>
        <member name="M:LdNet.MetroControls.MetroNavigationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroProgressBar">
            <summary>
            A metrofied ProgressBar.
            <see cref="T:System.Windows.Controls.ProgressBar" />
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressBar.BorderCornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressBar.EllipseDiameterProperty">
            <summary>
            椭圆直径
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressBar.EllipseOffsetProperty">
            <summary>
            Gets/sets the offset of the ellipses used in the indeterminate animation.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressBar.BorderCornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressBar.EllipseDiameter">
            <summary>
            Gets/sets the diameter of the ellipses used in the indeterminate animation.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressBar.EllipseOffset">
            <summary>
            Gets/sets the offset of the ellipses used in the indeterminate animation.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.GetIndeterminate">
            <summary>
            获取Indeterminate
            </summary>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.LoadedHandler(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Loaded事件
            </summary>
            <param name="sender"></param>
            <param name="routedEventArgs"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.OnIsIndeterminateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsIndeterminateProperty属性值改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.RefreshClip">
            <summary>
            更新剪切区域
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.ResetStoryboard(System.Double,System.Boolean)">
            <summary>
            重置Storyboard
            </summary>
            <param name="width"></param>
            <param name="removeOldStoryboard"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.SetEllipseDiameter(System.Double)">
            <summary>
            设置EllipseDiameter
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.SetEllipseOffset(System.Double)">
            <summary>
            设置SetEllipseOffset
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.SizeChangedHandler(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            SizeChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.ToggleIndeterminate(LdNet.MetroControls.MetroProgressBar,System.Boolean,System.Boolean)">
            <summary>
            IsIndeterminateProperty属性值改变事件
            </summary>
            <param name="bar"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressBar.VisibleChangedHandler(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsVisibleChanged事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LdNet.MetroControls.MetroTabControl">
            <summary>
            A standard MetroTabControl (Pivot).
            </summary>
            /// <summary>
            自定义标准TabControl
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabControl.AllowDragTabItemProperty">
            <summary>
            是否启动拖动TabItem。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabControl.HeaderBorderBrushProperty">
            <summary>
            标题边框颜色。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabControl.AllowDragTabItem">
            <summary>
             是否启动拖动TabItem。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabControl.HeaderBorderBrush">
            <summary>
            获取或设置标题边框颜色。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate方法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            重写OnItemsChanged方法 
            <para>拦截拖动排序引起的项改变事件</para>
            <para>实现下拉列表联动</para>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.TabPanel_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
             标题大小改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.MetroTabControl_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            改变选中item事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.SplitButton_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            下拉按钮选中Item改变事件。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.Tab_PreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            TabItem拖拽MouseMove事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.DragSource_GiveFeedback(System.Object,System.Windows.GiveFeedbackEventArgs)">
            <summary>
            设置鼠标样式
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.Tab_DragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            TabItem拖拽DragOver事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.IsItemBeyondDisplayRange(System.Windows.Controls.TabItem)">
            <summary>
            判断该项是否超出显示范围，超出返回true,否则为false。
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.MoveSelectItemToFirst(System.Windows.Controls.TabItem)">
            <summary>
            将选中项移到第一项。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.SetItemVisibility">
            <summary>
            设置Item显隐性
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.CreateDragDropWindow(System.Windows.Media.Visual)">
            <summary>
            创建拖拽窗口
            </summary>
            <param name="dragElement"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabControl.UpdateWindowLocation">
            <summary>
            更新拖拽窗口位置
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroTabItem">
            <summary>
            An extended TabItem with a metro style.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.HeaderFontSizeProperty">
            <summary>
            头部文字大小
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.HeaderFontStretchProperty">
            <summary>
            头部文字拉伸程度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.HeaderFontWeightProperty">
            <summary>
            头部文字粗细密度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.CloseButtonEnabledProperty">
            <summary>
            关闭按钮是否可用
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.CloseTabCommandProperty">
            <summary>
            关闭命令
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTabItem.CloseTabCommandParameterProperty">
            <summary>
            关闭Tab页命令参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.CloseButtonEnabled">
            <summary>
            Gets/sets whether the Close Button is visible.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.CloseTabCommand">
            <summary>
            获取和设置关闭Tab页命令参数
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.CloseTabCommandParameter">
            <summary>
            Gets/sets the command parameter which is passed to the close button command.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.HeaderFontSize">
            <summary>
            获取或设置 头部文字大小
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.HeaderFontStretch">
            <summary>
            获取或设置 头部文字拉伸程度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTabItem.HeaderFontWeight">
            <summary>
            获取或设置 头部文字粗细密度
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTabItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroTextBox">
            <summary>
            自定义输入框，支持带标签、验证、锁键、光晕等功能
            <para>自定义验证 - 使用ValidationRules属性传入ValidationRule的集合，ValidationRule是个抽象类，需派生重写</para>
            <para>自带验证 - 已集成非空验证、手机、邮箱等，详情参考帮助文档</para>
            <para>如用户设置了Binding方式，如Text={Binding }，则需要注意以下几点：</para>
            <para>1、更改验证触发模式 - 依赖属性ValiadationTrigger则失效，如设置会触发异常，这是由WPF机制所决定的。 解决方法： 请在XAML的Binding标签中设置UpdateSourceTrigger；</para>
            <para>2、验证结果HasValidationErro反馈 - 需要在XAML的Binding标签中设置NotifyOnValidationError=True，否则无法反馈及触发相关验证路由事件</para>
            <para>便利属性 - 当你们想使用MetroTextBox做一些复合控件的扩展时，可为ValidationHolderTarget属性赋值为自己的验证框包裹区域控件，详情可咨询开发人员</para>
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.dataContextInner">
            <summary>
            用于验证的内部实体
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.textBinding">
            <summary>
            文本绑定
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.BtnLock">
            <summary>
            锁按钮
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.partValidation">
            <summary>
            验证错误提示框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.isLockDescriptor">
            <summary>
            IsLock监听器
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.shown">
            <summary>
            是否已Load一次
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ModeProperty">
            <summary>
            用于提示信息
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.BorderFocusBrushProperty">
            <summary>
            获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.BorderDropShadowColorProperty">
            <summary>
            边框光晕的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.BorderMouseOverBrushProperty">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.BorderShadowVisibilityProperty">
            <summary>
            是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IsLockProperty">
            <summary>
            是否锁定文本的输入框。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LockButtonVisibilityProperty">
            <summary>
            是否显示锁按钮。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ButtonsAlignmentProperty">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.WatermarkProperty">
            <summary>
            文本框的水印。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.WatermarkBrushProperty">
            <summary>
            文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationRulesProperty">
            <summary>
            验证规则的集合。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationTriggerProperty">
            <summary>
            验证触发的方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IsStartValidationProperty">
            <summary>
            是否立即触发验证。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationRegularProperty">
            <summary>
            内置的验证规则。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.HasValidationErrorProperty">
            <summary>
            指示是否验证失败。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationErrorProperty">
            <summary>
            验证错误提示信息
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ShowValidationBorderProperty">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.HostWidthProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.HostHeightProperty">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelVerticalAlignmentProperty">
            <summary>
            标签纵向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LabelContentMarginProperty">
            <summary>
            标签元素的外边距。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationHolderTargetProperty">
            <summary>
            用于外部传入的验证浮出框所包裹的目标对象，如果不存在则使用TextBox自身的输入区域控件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.HasTextProperty">
            <summary>
            是否拥有文本
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IconResourceKeyProperty">
            <summary>
            左侧图标资源Key值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IconMarginProperty">
            <summary>
            左侧图标边距 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IconBrushProperty">
            <summary>
            左侧图标颜色
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IconWidthProperty">
            <summary>
            左侧图标宽度 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IconHeightProperty">
            <summary>
            左侧图标高度 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.IsTextTrimmingProperty">
            <summary>
            是否在只读模式下用省略号代替多余文本
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.MaxByteLengthProperty">
            <summary>
            获取或设置可在文本框中手动输入的最大字节数。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.CornerRadiusProperty">
            <summary>
            此元素的角到圆的程度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.LockChangedEvent">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTextBox.ValidationResultChangedEvent">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.BorderDropShadowColor">
            <summary>
            获取或设置边框光晕的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.BorderFocusBrush">
            <summary>
            获取或设置获得焦点时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ItemsSource">
            <summary>
            获取或设置用于生成 System.Windows.Controls.ItemsControl 的内容的集合
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.BorderMouseOverBrush">
            <summary>
            获取或设置鼠标悬停时控件的边框背景的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.BorderShadowVisibility">
            <summary>
             获取或设置是否启用获取焦点时的光晕效果。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ButtonsAlignment">
            <summary>
            获取或设置锁按钮的水平对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.CornerRadius">
            <summary>
            获取或设置此元素的角到圆的程度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.HasText">
            <summary>
            获取 是否拥有文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.HasValidationError">
            <summary>
            获取一个值指示是否验证失败。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.HostHeight">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）高度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.HostWidth">
            <summary>
            获取或设置输入框（即除标签外，右侧控件）宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IconBrush">
            <summary>
            获取或设置左侧图标颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IconHeight">
            <summary>
            获取或设置 左侧图标高度 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IconMargin">
            <summary>
            获取或设置左侧图标边距 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IconResourceKey">
            <summary>
            获取或设置 左侧图标资源Key值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IconWidth">
            <summary>
            获取或设置 左侧图标宽度 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IsLock">
            <summary>
            获取或设置是否锁定文本的输入框。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IsOpen">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IsStartValidation">
            <summary>
            设置是否立即触发验证。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.IsTextTrimming">
            <summary>
            获取或设置是否在只读模式下用省略号代替多余文本
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelContentMargin">
            <summary>
            获取或设置标签元素的外边距。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LabelVerticalAlignment">
            <summary>
            获取或设置标签纵向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.LockButtonVisibility">
            <summary>
            获取或设置是否显示锁按钮。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.MaxByteLength">
            <summary>
            获取或设置可在文本框中手动输入的最大字节数。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ShowValidationBorder">
            <summary>
            是否显示验证边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ShowHint">
            <summary>
            是否显示提示边框
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ValidationError">
            <summary>
            获取验证错误提示信息
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ValidationHolderTarget">
            <summary>
            获取或设置 验证浮出框所包裹的目标对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ValidationRegular">
            <summary>
            获取或设置内置的验证规则。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ValidationRules">
            <summary>
            获取或设置验证规则的集合。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.ValidationTrigger">
            <summary>
             获取或设置验证触发的方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.Watermark">
            <summary>
            获取或设置文本框的水印。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTextBox.WatermarkBrush">
            <summary>
            获取或设置文本框水印的字体颜色的画刷。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.AddTextBindingValidationRules(System.Windows.Controls.ValidationRule)">
            <summary>
            添加绑定验证规则
            </summary>
            <param name="item">项<see cref="T:System.Windows.Controls.ValidationRule" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.EnforceInstance``1(System.String)">
            <summary>
            查找模板方法
            </summary>
            <typeparam name="T">目标控件类型</typeparam>
            <param name="partName">部件名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnApplyTemplate">
            <summary>
            重写OnApplyTemplate方法，为了相关模板控件及验证绑定
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnErrorEvent(System.Object,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            验证错误发生
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnLockChanged">
            <summary>
            响应LockChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            重写OnPreviewKeyDown方法，为了实现锁的功能
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            重写OnTextChanged方法，为了获得HasText值
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.OnValidationResultChanged(LdNet.MetroControls.ValidationResultArgs)">
            <summary>
            响应ValidationResultChanged事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.PropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖项属性值改变回调
            </summary>
            <param name="dobj"><see cref="T:System.Windows.DependencyObject" /></param>
            <param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.RefreshCustomBinding">
            <summary>
            刷新绑定
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.RefreshValidationRules">
            <summary>
            刷新验证规则集合
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.StartValidation">
            <summary>
            手动触发验证。
            <para>如使用MVVM模式开发，使用IsStartValidation=True来手动触发验证</para>
            <para>注：如果用户设置了Binding方式，如Text={Binding }，需要在XAML的Binding标签中设置NotifyOnValidationError=True，否则无法反馈及触发相关验证路由事件</para>
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.ValidationRegularValueChange(LdNet.MetroControls.EnumValidationRegular)">
            <summary>
            内置验证规则改变
            </summary>
            <param name="validationRegular">内置验证规则<see cref="T:LdNet.PlugIn.Controls.EnumValidationRegular" /></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.ValidationRulesValueChange(LdNet.MetroControls.ValidationRuleCollection)">
            <summary>
            验证规则集合改变
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroTextBox.ValidationTriggerValueChange(System.Windows.Data.UpdateSourceTrigger)">
            <summary>
            验证触发模式改变
            </summary>
            <param name="valiadationTrigger">验证触发模式<see cref="T:System.Windows.Data.UpdateSourceTrigger" /></param>
        </member>
        <member name="E:LdNet.MetroControls.MetroTextBox.LockChanged">
            <summary>
            当此元素的IsLock属性值改变时发生。
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroTextBox.ValidationResultChanged">
            <summary>
            当此元素的HasValidationError属性值改变时发生。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ValidationRuleCollection">
            <summary>
            验证规则集合
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.NotNullValidationRule">
            <summary>
            非空验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.EmailValidationRule">
            <summary>
            邮箱验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.URLValidationRule">
            <summary>
            URL验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.IPv4ValidationRule">
            <summary>
            IPv4验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.IPv6ValidationRule">
            <summary>
            IPv6验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ZipCodeValidationRule">
            <summary>
            邮编验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.PhoneValidationRule">
            <summary>
            手机电话验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.TelValidationRule">
            <summary>
            固定电话验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.IDCardValidationRule">
            <summary>
            身份证验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ChineseCharsValidationRule">
            <summary>
            中文字符验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.EnglishCharsValidationRule">
            <summary>
            英文字符验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ChineseOrEnglishCharsValidationRule">
            <summary>
            中英文字符验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.NumberCharsValidationRule">
            <summary>
            数字文字符验证
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Position">
            <summary>
            An Enum representing different positions, such as Left or Right.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.PropertyChangeNotifier">
            <summary>
            AddValueChanged of dependency property descriptor results in memory leak as you already know.
            So, as described here, you can create custom class PropertyChangeNotifier to listen
            to any dependency property changes.
            
            This class takes advantage of the fact that bindings use weak references to manage associations
            so the class will not root the object who property changes it is watching. It also uses a WeakReference
            to maintain a reference to the object whose property it is watching without rooting that object.
            In this way, you can maintain a collection of these objects so that you can unhook the property
            change later without worrying about that collection rooting the object whose values you are watching.
            
            Complete implementation can be found here: http://agsmith.wordpress.com/2008/04/07/propertydescriptor-addvaluechanged-alternative/
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.PropertyChangeNotifier.ValueProperty">
            <summary>
            Identifies the <see cref="P:LdNet.MetroControls.PropertyChangeNotifier.Value"/> dependency property
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.PropertyChangeNotifier.Value">
            <summary>
            Returns/sets the value of the property
            </summary>
            <seealso cref="F:LdNet.MetroControls.PropertyChangeNotifier.ValueProperty"/>
        </member>
        <member name="P:LdNet.MetroControls.SplitButton.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SplitButton.CommandTarget">
            <summary>
            Gets or sets the target element on which to fire the command.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SplitButton.Command">
            <summary>
            Get or sets the Command property. 
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SplitButton.ArrowMouseOverBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the mouse is over the split button.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.SplitButton.ArrowPressedBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.SplitButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Updates the current selection when an item in the <see cref="T:System.Windows.Controls.Primitives.Selector" /> has changed</summary>
            <param name="e">The event data.</param>
        </member>
        <member name="T:LdNet.MetroControls.Theme">
            <summary>
            An Enum representing different themes for window commands.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ViewModelBase">
            <summary>
            视图模型基类。主要为了简化写法，主要用于WPF界面模型实体，如列表实体或ViewModel
            <para>
            <example> 下面为使用例子
            <code>
            public class TestClass 
            {
                public string Name 
                {
                   get { return GetValue(() =&gt; Name); }
                   set { SetValue(() =&gt; Name, value); }
                }
            }
            </code>
            </example>
            </para>
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ViewModelBase.GetPropertyName(System.Linq.Expressions.LambdaExpression)">
            <summary>
            获得属性名称
            </summary>
            <param name="lambda">lambda表达式</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ViewModelBase.GetValue``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获得值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property">属性（当前属性）</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            私有称谓[属性更改时]
            </summary>
            <param name="propertyName">属性名称</param>
        </member>
        <member name="M:LdNet.MetroControls.ViewModelBase.SetValue``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            赋值（泛型）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property">属性（当前属性）</param>
            <param name="value">值</param>
        </member>
        <member name="E:LdNet.MetroControls.ViewModelBase.PropertyChanged">
            <summary>
            当属性值更改时发生
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.VisualObjOper">
            <summary>
            视觉对象操作类
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.VisualObjOper.FindFirstVisualChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            从一个可视化对象中找到符合名称的第一个子对象
            </summary>
            <typeparam name="T">子对象的类型</typeparam>
            <param name="obj">父对象</param>
            <param name="childName">子对象名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.VisualObjOper.GetChildObjects``1(System.Windows.DependencyObject,System.String)">
            <summary>
            从一个可视化对象中找到其子对象集合
            </summary>
            <typeparam name="T">子对象类型</typeparam>
            <param name="obj">父对象</param>
            <param name="name">子对象名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.VisualObjOper.FindVisualParent``1(System.Windows.DependencyObject)">
            <summary>
            找到该可视化对象的父对象
            </summary>
            <typeparam name="T">父对象类型</typeparam>
            <param name="obj">当前可视化对象</param>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.Converters.BackgroundImageSourceToDrawingBrushConverter">
            <summary>
            ImageSource转换为DrawingBrush转换器
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Converters.ColorToSolidColorBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Color to a SolidColorBrush.
            </summary>
            <param name="value">The Color produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted SolidColorBrush. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Converters.ColorToSolidColorBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a SolidColorBrush to a Color.
            </summary>
            <remarks>Currently not used in toolkit, but provided for developer use in their own projects</remarks>
            <param name="value">The SolidColorBrush that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:LdNet.MetroControls.Converters.NumericChineseValueConvert">
            <summary>
            中文数值转换
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Converters.RadioButtonCheckConverter">
            <summary>
            单选框内圆直径转换
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Converters.TimeSpanToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value. </summary>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:LdNet.MetroControls.Converters.TimeSpanToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value. </summary>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:LdNet.MetroControls.Converters.BackgroundToForegroundConverter">
            <summary>
            转换器
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Converters.BackgroundToForegroundConverter.Instance">
            <summary>
            创建对象
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Converters.BackgroundToForegroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换器
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.Converters.BackgroundToForegroundConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换器
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.Converters.BackgroundToForegroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换器
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.Converters.BackgroundToForegroundConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换器
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.Converters.ClockDegreeConverter">
            <summary>
            Converts a double representing either hour/minute/second to the corresponding angle.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Converters.ThicknessBindingConverter">
            <summary>
            Converts a Thickness to a new Thickness. It's possible to ignore a side With the IgnoreThicknessSide property.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Converters.IgnoreThicknessSideType.None">
            <summary>
            Use all sides.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Converters.IgnoreThicknessSideType.Left">
            <summary>
            Ignore the left side.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Converters.IgnoreThicknessSideType.Top">
            <summary>
            Ignore the top side.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Converters.IgnoreThicknessSideType.Right">
            <summary>
            Ignore the right side.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Converters.IgnoreThicknessSideType.Bottom">
            <summary>
            Ignore the bottom side.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Converters.IsNullConverter">
            <summary>
            Converts the value from true to false and false to true.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Converters.StringToVisibilityConverter">
            <summary>
                Converts a String into a Visibility enumeration (and back)
                The FalseEquivalent can be declared with the "FalseEquivalent" property
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Converters.StringToVisibilityConverter.#ctor">
            <summary>
                Initialize the properties with standard values
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Converters.StringToVisibilityConverter.FalseEquivalent">
            <summary>
                FalseEquivalent (default : Visibility.Collapsed => see Constructor)
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Converters.StringToVisibilityConverter.OppositeStringValue">
            <summary>
                Define whether the opposite boolean value is crucial (default : false)
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Converters.VisibilitytoBooleanConverter">
            <summary>
            Visibility转换Boolean
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroThumbContentControl">
            <summary>
            The MetroThumbContentControl control can be used for titles or something else and enables basic drag movement functionality.
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroThumbContentControl.DragStarted">
            <summary>
            Adds or remove a DragStartedEvent handler
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroThumbContentControl.DragDelta">
            <summary>
            Adds or remove a DragDeltaEvent handler
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.MetroThumbContentControl.DragCompleted">
            <summary>
            Adds or remove a DragCompletedEvent handler
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroThumbContentControl.IsDraggingProperty">
            <summary>
            DependencyProperty for the IsDragging property.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroThumbContentControl.IsDragging">
            <summary>
            Indicates that the left mouse button is pressed and is over the MetroThumbContentControl.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.WindowButtonCommands">
            <summary>
            窗体按钮（最小化、最大化、关闭）
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommandsItem.IsSeparatorVisible">
            <summary>
            Gets or sets the value indicating whether to show the separator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.DarkTemplate">
            <summary>
            Gets or sets the value indicating light theme template.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.LightTemplate">
            <summary>
            Gets or sets the value indicating light theme template.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.SeparatorHeight">
            <summary>
            Gets or sets the value indicating separator height.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.ShowLastSeparator">
            <summary>
            Gets or sets the value indicating whether to show the last separator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.ShowSeparators">
            <summary>
            Gets or sets the value indicating whether to show the separators.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowCommands.Theme">
            <summary>
            Gets or sets the value indicating current theme.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.WindowCommandsOverlayBehavior.Never">
            <summary>
            Doesn't overlay flyouts nor a hidden TitleBar.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.WindowCommandsOverlayBehavior.Flyouts">
            <summary>
            Overlays opened <see cref="T:LdNet.MetroControls.MetroFlyout"/> controls.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.WindowCommandsOverlayBehavior.HiddenTitleBar">
            <summary>
            Overlays a hidden TitleBar.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Planerator">
            <summary>
              Based on Greg Schechter's Planerator
              http://blogs.msdn.com/b/greg_schechter/archive/2007/10/26/enter-the-planerator-dead-simple-3d-in-wpf-with-a-stupid-name.aspx
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroProgressRing">
            <summary>
            等待滚动环
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.LabelContentProperty">
            <summary>
            标签元素的文本内容。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.LabelFontBrushProperty">
            <summary>
            标签字体颜色的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.LabelHorizontalAlignmentProperty">
            <summary>
            标签横向的对齐方式。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.LabelFontSizeProperty">
            <summary>
            标签元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.LabelContainerWidthProperty">
            <summary>
            标签元素的宽度。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.IsActiveProperty">
            <summary>
            此元素是否处于激活状态。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.ValueProperty">
            <summary>
            此元素的值。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.BindableWidthProperty">
            <summary>
            滚动环宽度
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroProgressRing.MaxSideLengthProperty">
            <summary>
            最大滚动环宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.BindableWidth">
            <summary>
            滚动环宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.IsActive">
            <summary>
            获取或设置一个值指示此元素是否处于激活状态。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.LabelContainerWidth">
            <summary>
            获取或设置标签元素的宽度。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.LabelContent">
            <summary>
            获取或设置标签元素的文本内容。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.LabelFontBrush">
            <summary>
            获取或设置标签字体颜色的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.LabelFontSize">
            <summary>
            获取或设置标签元素的字号。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.LabelHorizontalAlignment">
            <summary>
            获取或设置标签横向的对齐方式。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.MaxSideLength">
            <summary>
            最大滚动环宽度
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroProgressRing.Value">
            <summary>
            获取或设置一个指示此元素的值。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressRing.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressRing.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressRing.BindableWidthCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            BindableWidth值改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="dependencyPropertyChangedEventArgs"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressRing.IsActiveChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsActive值改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="dependencyPropertyChangedEventArgs"></param>
        </member>
        <member name="M:LdNet.MetroControls.MetroProgressRing.ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Value值改变事件
            </summary>
            <param name="dependencyObject"></param>
            <param name="dependencyPropertyChangedEventArgs"></param>
        </member>
        <member name="T:LdNet.MetroControls.RangeSelectionChangedEventArgs">
            <summary>
            Event arguments created for the RangeSlider's SelectionChanged event.
            <see cref="T:LdNet.MetroControls.RangeSlider"/>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSelectionChangedEventArgs.NewLowerValue">
            <summary>
            The value of the new range's beginning.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSelectionChangedEventArgs.NewUpperValue">
            <summary>
            The value of the new range's ending.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.RangeSlider">
            <summary>
            A slider control with the ability to select a range between two values.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.Interval">
            <summary>
            Get/sets value how fast thumbs will move when user press on left/right/central with left mouse button (IsMoveToPoint must be set to FALSE)
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.AutoToolTipPrecision">
            <summary>
            Get/sets precision of the value, which displaying inside AutotToolTip
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.AutoToolTipTextConverter">
            <summary>
            Get/sets the converter for the tooltip text
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.AutoToolTipPlacement">
            <summary>
            Get/sets tooltip, which will show while dragging thumbs and display currect value
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.TickPlacement">
            <summary>
            Get/sets tick placement position
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.IsMoveToPointEnabled">
            <summary>
            Get/sets IsMoveToPoint feature which will enable/disable moving to exact point inside control when user clicked on it
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.TickFrequency">
            <summary>
            Get/sets tickFrequency
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.Orientation">
            <summary>
            Get/sets orientation of range slider
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.IsSnapToTickEnabled">
            <summary>
            Get/sets whether possibility to make manipulations inside range with left/right mouse buttons + cotrol button
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.ExtendedMode">
            <summary>
            Get/sets whether possibility to make manipulations inside range with left/right mouse buttons + cotrol button
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.MoveWholeRange">
            <summary>
            Get/sets whether whole range will be moved when press on right/left/central part of control
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.MinRangeWidth">
            <summary>
            Get/sets the minimal distance between two thumbs.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.LowerValue">
            <summary>
            Get/sets the beginning of the range selection.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.UpperValue">
            <summary>
            Get/sets the end of the range selection.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.RangeSlider.MinRange">
            <summary>
            Get/sets the minimum range that can be selected.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.RangeSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.
            </summary>
            <param name="oldMinimum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param><param name="newMinimum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:LdNet.MetroControls.RangeSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.
            </summary>
            <param name="oldMaximum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param><param name="newMaximum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="T:LdNet.MetroControls.ToggleSwitchButton">
            <summary>
            A Button that allows the user to toggle between two states.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.SwitchForeground">
            <summary>
            Gets/sets the brush used for the control's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.OnSwitchBrush">
            <summary>
            Gets/sets the brush used for the on-switch's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.OffSwitchBrush">
            <summary>
            Gets/sets the brush used for the off-switch's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.ThumbIndicatorBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.ThumbIndicatorDisabledBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitchButton.ThumbIndicatorWidth">
            <summary>
            Gets/sets the width of the thumb indicator.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.TransitionType">
            <summary>
            enumeration for the different transition types
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Default">
            <summary>
            Use the VisualState DefaultTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Normal">
            <summary>
            Use the VisualState Normal
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Up">
            <summary>
            Use the VisualState UpTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Down">
            <summary>
            Use the VisualState DownTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Right">
            <summary>
            Use the VisualState RightTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.RightReplace">
            <summary>
            Use the VisualState RightReplaceTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Left">
            <summary>
            Use the VisualState LeftTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.LeftReplace">
            <summary>
            Use the VisualState LeftReplaceTransition
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.TransitionType.Custom">
            <summary>
            Use a custom VisualState, the name must be set using CustomVisualStatesName property
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.TransitioningContentControl">
            <summary>
            A ContentControl that animates content as it loads and unloads.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.TransitioningContentControl.CustomVisualStatesName">
            <summary>
            Gets or sets the name of the custom transition visual state.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.TransitioningContentControl.IsTransitioning">
            <summary>
            Gets/sets if the content is transitioning.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.TransitioningContentControl.ReloadTransition">
            <summary>
            Reload the current transition if the content is the same.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.TreeHelper">
            <summary>
            Helper methods for UI-related tasks.
            This class was obtained from Philip Sumi (a fellow WPF Disciples blog)
            http://www.hardcodet.net/uploads/2009/06/UIHelper.cs
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.TryFindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds a parent of a given item on the visual tree.
            </summary>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="child">A direct or indirect child of the
            queried item.</param>
            <returns>The first parent item that matches the submitted
            type parameter. If not matching item can be found, a null
            reference is being returned.</returns>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a Child of a given item in the visual tree. 
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="childName">x:Name or Name of child. </param>
            <returns>The first parent item that matches the submitted type parameter. 
            If not matching item can be found, 
            a null parent is being returned.</returns>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.GetParentObject(System.Windows.DependencyObject)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)"/> method, which also
            supports content elements. Keep in mind that for content element,
            this method falls back to the logical tree of the element!
            </summary>
            <param name="child">The item to be processed.</param>
            <returns>The submitted item's parent, if available. Otherwise
            null.</returns>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.FindChildren``1(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Analyzes both visual and logical tree in order to find all elements of a given
            type that are descendants of the <paramref name="source"/> item.
            </summary>
            <typeparam name="T">The type of the queried items.</typeparam>
            <param name="source">The root element that marks the source of the search. If the
            source is already of the requested type, it will not be included in the result.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>All descendants of <paramref name="source"/> that match the requested type.</returns>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.GetChildObjects(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)"/> method, which also
            supports content elements. Keep in mind that for content elements,
            this method falls back to the logical tree of the element.
            </summary>
            <param name="parent">The item to be processed.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>The submitted item's child elements, if available.</returns>
        </member>
        <member name="M:LdNet.MetroControls.TreeHelper.TryFindFromPoint``1(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Tries to locate a given item within the visual tree,
            starting with the dependency object at a given position. 
            </summary>
            <typeparam name="T">The type of the element to be found
            on the visual tree of the element at the given location.</typeparam>
            <param name="reference">The main element which is used to perform
            hit testing.</param>
            <param name="point">The position to be evaluated on the origin.</param>
        </member>
        <member name="T:LdNet.MetroControls.Helper.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Helper.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Helper.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Helper.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:LdNet.MetroControls.Helper.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.Helper.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:LdNet.MetroControls.Helper.ItemsControlHelper">
            <summary>
            The ItemContainerGenerator provides useful utilities for ItemsControls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:LdNet.MetroControls.Helper.ItemsControlHelper._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Helper.ItemsControlHelper._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.ItemsControlHelper.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.ItemsControlHelper.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Helper.ItemsControlHelper.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.ItemsControlHelper.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.ItemsControlHelper.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.ItemsControlHelper.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.ItemsControlHelper.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.ItemsControlHelper.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="T:LdNet.MetroControls.Helper.MetroWindowHelpers">
            <summary>
            This class eats little children.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Helper.MetroWindowHelpers.HandleWindowCommandsForFlyouts(LdNet.MetroControls.MetroWindow,System.Collections.Generic.IEnumerable{LdNet.MetroControls.MetroFlyout},System.Windows.Media.Brush)">
            <summary>
            Adapts the WindowCommands to the theme of the first opened, topmost &amp;&amp; (top || right || left) flyout
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="flyouts">All the flyouts! Or flyouts that fall into the category described in the summary.</param>
            <param name="resetBrush">An optional brush to reset the window commands brush to.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.MetroWindowHelpers.SetIsHitTestVisibleInChromeProperty``1(LdNet.MetroControls.MetroWindow,System.String)">
            <summary>
            Sets the IsHitTestVisibleInChromeProperty to a MetroWindow template child
            </summary>
            <param name="window">The MetroWindow.</param>
            <param name="name">The name of the template child.</param>
        </member>
        <member name="M:LdNet.MetroControls.Helper.MetroWindowHelpers.SetWindowChromeResizeGripDirection(LdNet.MetroControls.MetroWindow,System.String,Microsoft.Windows.Shell.ResizeGripDirection)">
            <summary>
            Sets the WindowChrome ResizeGripDirection to a MetroWindow template child.
            </summary>
            <param name="window">The MetroWindow.</param>
            <param name="name">The name of the template child.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:LdNet.MetroControls.Models.Win32.NativeMethods.GetKeyboardState(System.Byte[])">
            <summary>
            获取键盘是否为大写模式
            </summary>
            <param name="pbKeyState"></param>
            <returns></returns>
        </member>
        <member name="T:LdNet.MetroControls.Models.Win32.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen. 
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application. 
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window. 
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed. 
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu, clicks the maximize button, minimize button, restore button, close button, or moves the form. You can stop the form from moving by filtering this out.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns. 
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette. 
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.MAXIMIZE">
            <summary>The window is initially maximized.</summary> 
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary> 
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.  
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WS.VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window. 
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE. 
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Models.Win32.WSEX.WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_HIDE">
            <summary>
                   Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWNORMAL">
            <summary>
                   Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_NORMAL">
            <summary>
                   Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWMINIMIZED">
            <summary>
                   Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWMAXIMIZED">
            <summary>
                   Activates the window and displays it as a maximized window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_MAXIMIZE">
            <summary>
                   Maximizes the specified window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWNOACTIVATE">
            <summary>
                   Displays a window in its most recent size and position. This value is similar to <see cref="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWNORMAL"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOW">
            <summary>
                   Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_MINIMIZE">
            <summary>
                   Minimizes the specified window and activates the next top-level window in the z-order.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWMINNOACTIVE">
            <summary>
                   Displays the window as a minimized window. This value is similar to <see cref="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWMINIMIZED"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOWNA">
            <summary>
                   Displays the window in its current size and position. This value is similar to <see cref="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_SHOW"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.ShowWindowCommands.SW_RESTORE">
            <summary>
                   Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.Invalidate">
            <summary>
            Invalidates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
            You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_INVALIDATE invalidates the entire window.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.InternalPaint">
            <summary>Causes the OS to post a WM_PAINT message to the window regardless of whether a portion of the window is invalid.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.Erase">
            <summary>
            Causes the window to receive a WM_ERASEBKGND message when the window is repainted.
            Specify this value in combination with the RDW_INVALIDATE value; otherwise, RDW_ERASE has no effect.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.Validate">
            <summary>
            Validates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
            You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_VALIDATE validates the entire window.
            This value does not affect internal WM_PAINT messages.
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.NoErase">
            <summary>Suppresses any pending WM_ERASEBKGND messages.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.NoChildren">
            <summary>Excludes child windows, if any, from the repainting operation.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.AllChildren">
            <summary>Includes child windows, if any, in the repainting operation.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.UpdateNow">
            <summary>Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND and WM_PAINT messages before the RedrawWindow returns, if necessary.</summary>
        </member>
        <member name="F:LdNet.MetroControls.Native.Constants.RedrawWindowFlags.EraseNow">
            <summary>
            Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND messages before RedrawWindow returns, if necessary.
            The affected windows receive WM_PAINT messages at the ordinary time.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.Native.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:LdNet.MetroControls.Native.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="T:LdNet.MetroControls.Native.UnsafeNativeMethods">
            <devdoc>http://msdn.microsoft.com/en-us/library/ms182161.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.DwmIsCompositionEnabled">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969518%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.DwmExtendFrameIntoClientArea(System.IntPtr,LdNet.MetroControls.Native.MARGINS@)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969512%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.DwmSetWindowAttribute(System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969524%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.DefWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633572%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.GetMonitorInfo(System.IntPtr,LdNet.MetroControls.Native.MONITORINFO)">
            <devdoc>http://msdn.microsoft.com/en-us/library/dd144901%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.MonitorFromWindow(System.IntPtr,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/dd145064%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633545(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.LoadString(LdNet.MetroControls.Native.SafeLibraryHandle,System.UInt32,System.Text.StringBuilder,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647486%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.IsWindow(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633528(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.GetSystemMenu(System.IntPtr,System.Boolean)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647985(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.TrackPopupMenuEx(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms648003(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods._PostMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms644944(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.GetCursorPos(LdNet.MetroControls.Native.POINT@)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms648390(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.GetDoubleClickTime">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms646258(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.LoadLibrary(System.String)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms684175%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.FreeLibrary(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms683152%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.SetWindowPlacement(System.IntPtr,LdNet.MetroControls.Native.WINDOWPLACEMENT@)">
            <summary>
            Sets the show state and the restored, minimized, and maximized positions of the specified window.
            </summary>
            <param name="hWnd">
            A handle to the window.
            </param>
            <param name="lpwndpl">
            A pointer to a WINDOWPLACEMENT structure that specifies the new show state and window positions.
            <para>
            Before calling SetWindowPlacement, set the length member of the WINDOWPLACEMENT structure to sizeof(WINDOWPLACEMENT). SetWindowPlacement fails if the length member is not set correctly.
            </para>
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            <para>
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </para>
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.GetWindowPlacement(System.IntPtr,LdNet.MetroControls.Native.WINDOWPLACEMENT@)">
            <summary>
            Retrieves the show state and the restored, minimized, and maximized positions of the specified window.
            </summary>
            <param name="hWnd">
            A handle to the window.
            </param>
            <param name="lpwndpl">
            A pointer to the WINDOWPLACEMENT structure that receives the show state and position information.
            <para>
            Before calling GetWindowPlacement, set the length member to sizeof(WINDOWPLACEMENT). GetWindowPlacement fails if lpwndpl-> length is not set correctly.
            </para>
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            <para>
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </para>
            </returns>
        </member>
        <member name="M:LdNet.MetroControls.Native.UnsafeNativeMethods.EnableMenuItem(System.IntPtr,System.UInt32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647636(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:LdNet.MetroControls.IWindowPlacementSettings.Reload">
            <summary>
            Refreshes the application settings property values from persistent storage.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.IWindowPlacementSettings.UpgradeSettings">
            <summary>
            Upgrades the application settings on loading.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.IWindowPlacementSettings.Upgrade">
            <summary>
            Updates application settings to reflect a more recent installation of the application.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.IWindowPlacementSettings.Save">
            <summary>
            Stores the current values of the settings properties.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.WindowApplicationSettings">
            <summary>
            this settings class is the default way to save the placement of the window
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.WindowApplicationSettings.UpgradeSettings">
            <summary>
            Upgrades the application settings on loading.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.LdContentControl">
            <summary>
            自定义内容控件
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.GestureChangedEvent">
            <summary>
            当此元素的鼠标手势改变时发生
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.GestureFinishedEvent">
            <summary>
            当此元素的鼠标手势触发时发生
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.LoadingMaskTemplateProperty">
            <summary>
             加载过程中的遮罩模版
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.LoadingMaskVisibilityProperty">
            <summary>
             是否显示加载遮罩
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.LoadingMaskValueProperty">
            <summary>
             加载遮罩中显示的进度值
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.IsMouseGestureEnabledProperty">
            <summary>
             鼠标手势功能是否启用
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.LdContentControl.LineForgroundProperty">
            <summary>
            鼠标手势线颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.IsMouseGestureEnabled">
            <summary>
            获取或设置 鼠标手势功能是否启用
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.LineForground">
            <summary>
            获取或设置 鼠标手势线颜色
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.LoadingMaskTemplate">
            <summary>
            获取或设置 加载过程中的遮罩模版
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.LoadingMaskValue">
            <summary>
            获取或设置 加载遮罩中显示的进度值
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.LoadingMaskVisibility">
            <summary>
            获取或设置 是否显示加载遮罩
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.ClearGesture">
            <summary>
            清理手势画布和对象
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.DrawLine(System.Windows.Point,System.Windows.Point)">
            <summary>
            画线
            </summary>
            <param name="prevPos">上一个点</param>
            <param name="pos">当前点</param>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.MouseDownEventHandler(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            MouseDown事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.MouseMoveEventHandler(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            MouseMove事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.MouseUpEventHandler(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            MouseUp事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.OnApplyTemplate">
            <summary>
            在派生类中重写后，每当应用程序代码或内部进程调用 System.Windows.FrameworkElement.ApplyTemplate，都将调用此方法。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.OnGestureChanged(LdNet.MetroControls.GestureDirection)">
            <summary>
            响应鼠标手势改变事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.OnGestureFinished">
            <summary>
            响应鼠标手势触发事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.ProcessGesture">
            <summary>
            鼠标手势操作完成
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.LdContentControl.GestureChanged">
            <summary>
            当此元素的鼠标手势改变时发生
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.LdContentControl.GestureFinished">
            <summary>
            当此元素的鼠标手势触发时发生
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.LdContentControl.GestureTranformAngle">
            <summary>
            鼠标手势旋转角度对象
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.LdContentControl.GestureTranformAngle.ArrowAngle">
            <summary>
            角度, 以正上方为零度
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.LdContentControl.GestureTranformAngle.#ctor(System.Double)">
            <summary>
            初始化一个 鼠标手势旋转角度对象
            </summary>
            <param name="arrowAngle">角度</param>
        </member>
        <member name="T:LdNet.MetroControls.RevealImage">
            <summary>
            RevealImage
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.RevealImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.MetroTile">
            <summary>
            磁贴控件，用于类似Win10瓷砖风格的控件
            <para>支持2张图片动画切换功能，需要同时设置DefaultTransImage和AttachTransImage才能看到滚动效果</para>
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.MouseOverBorderBrushProperty">
            <summary>
            鼠标悬停时边框的画刷。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.TitleProperty">
            <summary>
            标题。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.CountProperty">
            <summary>
            数字显示
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.TitleFontSizeProperty">
            <summary>
            标题元素的字号。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.DefaultTransImageProperty">
            <summary>
            滚动的默认图片。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.AttachTransImageProperty">
            <summary>
            滚动的附加图片。
            </summary>
        </member>
        <member name="F:LdNet.MetroControls.MetroTile.ImgTransDurationProperty">
            <summary>
            图片切换一次的动画持续时间。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.AttachTransImage">
            <summary>
            获取或设置滚动的附加图片。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.Count">
            <summary>
            获取或设置 数字显示
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.DefaultTransImage">
            <summary>
            获取或设置滚动的默认图片。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.EnableRandomTransInterval">
            <summary>
            获取或设置一个值指示是否启用图片切换的间隔。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.ImgTransDuration">
            <summary>
            获取或设置图片切换一次的动画持续时间。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.ImgTransInterval">
            <summary>
            获取或设置图片切换的时间间隔，默认5秒。
            <para>注：需设置enableRandomTransInterval=false，此参数才有效</para>
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.MouseOverBorderBrush">
            <summary>
            获取或设置鼠标悬停时边框的画刷。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.Title">
            <summary>
            获取或设置标题。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.MetroTile.TitleFontSize">
            <summary>
            获取或设置标题元素的字号。
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTile.EnforceInstance``1(System.String)">
            <summary>
            查找模板方法
            </summary>
            <typeparam name="T">目标控件类型</typeparam>
            <param name="partName">部件名称</param>
            <returns></returns>
        </member>
        <member name="M:LdNet.MetroControls.MetroTile.MetroTile_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载事件
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTile.OnApplyTemplate">
            <summary>
            重写基类OnApplyTemplate方法
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.MetroTile.TransitionImage(System.Boolean)">
            <summary>
            切换图片
            </summary>
            <param name="enableAnimation"></param>
        </member>
        <member name="T:LdNet.MetroControls.ToggleSwitch">
            <summary>
            A control that allows the user to toggle between two states: One represents true; The other represents false.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.HeaderFontFamily">
            <summary>
            Gets/sets the font family of the header.
            </summary> 
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.OnLabel">
            <summary>
            Gets/sets the text to display when the control is in it's On state.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.OffLabel">
            <summary>
            Gets/sets the text to display when the control is in it's Off state.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.SwitchForeground">
            <summary>
            Gets/sets the brush used for the switch's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.OnSwitchBrush">
            <summary>
            Gets/sets the brush used for the on-switch's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.OffSwitchBrush">
            <summary>
            Gets/sets the brush used for the off-switch's foreground.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.ThumbIndicatorBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.ThumbIndicatorDisabledBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.ThumbIndicatorWidth">
            <summary>
            Gets/sets the width of the thumb indicator.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.ContentDirection">
            <summary>
            Gets/sets the control's content flow direction.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.ToggleSwitchButtonStyle">
            <summary>
            Gets/sets the control's toggle switch button style.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.IsChecked">
            <summary>
            Gets/sets whether the control is Checked (On) or not (Off).
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.CheckChangedCommand">
            <summary>
            Gets/sets the command which will be executed if the IsChecked property was changed.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.CheckedCommand">
            <summary>
            Gets/sets the command which will be executed if the checked event of the control is fired.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.UnCheckedCommand">
            <summary>
            Gets/sets the command which will be executed if the checked event of the control is fired.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.CheckChangedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the CheckChangedCommand.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.CheckedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the CheckedCommand.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ToggleSwitch.UnCheckedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the UnCheckedCommand.
            </summary>
        </member>
        <member name="E:LdNet.MetroControls.ToggleSwitch.IsCheckedChanged">
            <summary>
            An event that is raised when the value of IsChecked changes.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.AppTheme">
            <summary>
            Represents the background theme of the application.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.AppTheme.Resources">
            <summary>
            The ResourceDictionary that represents this application theme.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.AppTheme.Name">
            <summary>
            Gets the name of the application theme.
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_InvalidManipulationOfSelectionCollections">
            <summary>
              查找类似 对导致无效的选择状态的集合所做的修改。请检查 SelectionMode 请检查 SelectionMode 是否允许零个或多个项。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnActionFinish_InvalidFinish">
            <summary>
              查找类似 当项预计不会执行的操作的时候，不应该发送成功信号。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              查找类似 ExpandDirection 值 &apos;{0}&apos;无效. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnSelectedIndicesChanged_InvalidWrite">
            <summary>
              查找类似 无法设置只读属性 SelectedIndices。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnSelectedItemsChanged_InvalidWrite">
            <summary>
              查找类似 无法设置只读属性 SelectedItems。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnSelectionModePropertyChanged_InvalidValue">
            <summary>
              查找类似 SelectionMode值 &apos;{0}&apos;无效. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_OnSelectionSequencepropertyChanged_InvalidValue">
            <summary>
              查找类似 SelectionSequence 值 &apos;{0}&apos;无效. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Accordion_UnsupportedCollectionAction">
            <summary>
              查找类似 不支持的集合行为 &apos;{0}&apos;. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.AccordionItem_InvalidWriteToContentTargetSize">
            <summary>
              查找类似 ContentTargetSize 是一个只读的值,是通过Accordion设置的。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.AccordionItem_InvalidWriteToExpandDirection">
            <summary>
              查找类似 ExpandDirection 是一个只读的值，是通过Accordion设置的。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.AccordionItem_OnIsSelectedPropertyChanged_InvalidChange">
            <summary>
              查找类似 当项被锁定时，不能修IsSelected属性值。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.AccordionItem_StartAction_InvalidAction">
            <summary>
              查找类似 无效行为 &apos;{0}&apos;. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.AccordionItem_StartAction_InvalidCall">
            <summary>
              查找类似 当没有行为计划时，不能开始行为。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              查找类似 无法执行操作。 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Common_Cancel">
            <summary>
              查找类似 取消 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Common_Confirm">
            <summary>
              查找类似 确定 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Common_No">
            <summary>
              查找类似 否 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Common_Reset">
            <summary>
              查找类似 重置 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Common_Yes">
            <summary>
              查找类似 是 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.DataGrid_ColumnManager">
            <summary>
              查找类似 列管理器 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.DataGrid_Confirm">
            <summary>
              查找类似 确定 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.DataGrid_SelectAll">
            <summary>
              查找类似 全选 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              查找类似 无效ExpandDirection值&apos;{0}&apos;. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_CellPhoneNumerError">
            <summary>
              查找类似 请输入正确的手机号码 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_ChineseCharactersError">
            <summary>
              查找类似 请输入正确的中文字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_ChinessEnglishCharactersError">
            <summary>
              查找类似 请输入正确的中文或英文字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_EmailError">
            <summary>
              查找类似 请输入正确的电子邮件 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_EnglishCharactersError">
            <summary>
              查找类似 请输入正确的英文字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_IDCardError">
            <summary>
              查找类似 请输入正确的身份证信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_IPv4Error">
            <summary>
              查找类似 请输入正确的IPv4地址 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_IPv6Error">
            <summary>
              查找类似 请输入正确的IPv6地址 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_NotNull">
            <summary>
              查找类似 不能为空！ 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_NumberCharsError">
            <summary>
              查找类似 请输入正确的数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_PhoneNumerError">
            <summary>
              查找类似 请输入正确的固定电话 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_URLError">
            <summary>
              查找类似 请输入正确的URL地址 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Message_Validation_ZipCodeError">
            <summary>
              查找类似 请输入正确的邮编 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_Item">
            <summary>
              查找类似 条 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_Items">
            <summary>
              查找类似 条数据 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_Page">
            <summary>
              查找类似 页 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_PageTotal">
            <summary>
              查找类似 页  总共 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_PerPage">
            <summary>
              查找类似 每页 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_To">
            <summary>
              查找类似 至 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.Pagination_Total">
            <summary>
              查找类似 共 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TransitioningContentControl_TransitionNotFound">
            <summary>
              查找类似 Transition &apos;{0}&apos; 没有被定义. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TransitiotioningContentControl_IsTransitioningReadOnly">
            <summary>
              查找类似 IsTransitioning属性是只读的. 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TreeView_ExpandAll">
            <summary>
              查找类似 全部展开 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TreeView_SelectAll">
            <summary>
              查找类似 全部选中 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TreeView_UnExpandAll">
            <summary>
              查找类似 全部折叠 的本地化字符串。
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.Properties.Resources.TreeView_UnSelectAll">
            <summary>
              查找类似 全部取消 的本地化字符串。
            </summary>
        </member>
        <member name="T:LdNet.MetroControls.ThemeManager">
            <summary>
            A class that allows for the detection and alteration of a MetroWindow's theme and accent.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ThemeManager.Accents">
            <summary>
            Gets a list of all of default themes.
            </summary>
        </member>
        <member name="P:LdNet.MetroControls.ThemeManager.AppThemes">
            <summary>
            Gets a list of all of default metro themes.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.AddAccent(System.String,System.Uri)">
            <summary>
            Adds an accent with the given name.
            </summary>
            <param name="name"></param>
            <param name="resourceAddress"></param>
            <returns>true if the accent does not exists and can be added.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.AddAppTheme(System.String,System.Uri)">
            <summary>
            Adds an app theme with the given name.
            </summary>
            <param name="name"></param>
            <param name="resourceAddress"></param>
            <returns>true if the app theme does not exists and can be added.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetAppTheme(System.Windows.ResourceDictionary)">
            <summary>
            Gets app theme with the given resource dictionary.
            </summary>
            <param name="resources"></param>
            <returns>AppTheme</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetAppTheme(System.String)">
            <summary>
            Gets app theme with the given name and theme type (light or dark).
            </summary>
            <param name="appThemeName"></param>
            <returns>AppTheme</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetInverseAppTheme(LdNet.MetroControls.AppTheme)">
            <summary>
            Gets the inverse <see cref="T:LdNet.MetroControls.AppTheme" /> of the given <see cref="T:LdNet.MetroControls.AppTheme"/>.
            This method relies on the "Dark" or "Light" affix to be present.
            </summary>
            <param name="appTheme">The app theme.</param>
            <returns>The inverse <see cref="T:LdNet.MetroControls.AppTheme"/> or <c>null</c> if it couldn't be found.</returns>
            <remarks>
            Returns BaseLight, if BaseDark is given or vice versa.
            Custom Themes must end with "Dark" or "Light" for this to work, for example "CustomDark" and "CustomLight".
            </remarks>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetAccent(System.String)">
            <summary>
            Gets the <see cref="T:LdNet.MetroControls.Accent"/> with the given name.
            </summary>
            <param name="accentName"></param>
            <returns>The <see cref="T:LdNet.MetroControls.Accent"/> or <c>null</c>, if the app theme wasn't found</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetAccent(System.Windows.ResourceDictionary)">
            <summary>
            Gets the <see cref="T:LdNet.MetroControls.Accent"/> with the given resource dictionary.
            </summary>
            <param name="resources"></param>
            <returns>The <see cref="T:LdNet.MetroControls.Accent"/> or <c>null</c>, if the accent wasn't found.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.IsAccentDictionary(System.Windows.ResourceDictionary)">
            <summary>
            Determines whether the specified resource dictionary represents an <see cref="T:LdNet.MetroControls.Accent"/>.
            <para />
            This might include runtime accents which do not have a resource uri.
            </summary>
            <param name="resources">The resources.</param>
            <returns><c>true</c> if the resource dictionary is an <see cref="T:LdNet.MetroControls.Accent"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">resources</exception>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.GetResourceFromAppStyle(System.Windows.Window,System.String)">
            <summary>
            Gets a resource from the detected AppStyle.
            </summary>
            <param name="window">The window to check. If this is null, the Application's sources will be checked.</param>
            <param name="key">The key to check against.</param>
            <returns>The resource object or null, if the resource wasn't found.</returns>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.ChangeAppTheme(System.Windows.Application,System.String)">
            <summary>
            Change the theme for the whole application.
            </summary>
            <param name="app"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.ChangeAppTheme(System.Windows.Window,System.String)">
            <summary>
            Change theme for the given window.
            </summary>
            <param name="window"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.ChangeAppStyle(System.Windows.Application,LdNet.MetroControls.Accent,LdNet.MetroControls.AppTheme)">
            <summary>
            Change accent and theme for the whole application.
            </summary>
            <param name="app">The instance of Application to change.</param>
            <param name="newAccent">The accent to apply.</param>
            <param name="newTheme">The theme to apply.</param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.ChangeAppStyle(System.Windows.Window,LdNet.MetroControls.Accent,LdNet.MetroControls.AppTheme)">
            <summary>
            Change accent and theme for the given window.
            </summary>
            <param name="window">The Window to change.</param>
            <param name="newAccent">The accent to apply.</param>
            <param name="newTheme">The theme to apply.</param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.ChangeAppStyle(System.Windows.ResourceDictionary,LdNet.MetroControls.Accent,LdNet.MetroControls.AppTheme)">
            <summary>
            Changes the accent and theme of a ResourceDictionary directly.
            </summary>
            <param name="resources">The ResourceDictionary to modify.</param>
            <param name="newAccent">The accent to apply to the ResourceDictionary.</param>
            <param name="newTheme">The theme to apply to the ResourceDictionary.</param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.CopyResource(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>
            Copies all resource keys from one resource to another.
            </summary>
            <param name="fromRD">The source resource dictionary.</param>
            <param name="toRD">The destination resource dictionary.</param>
            <exception cref="T:System.ArgumentNullException">
            fromRD
            or
            toRD
            </exception>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.DetectAppStyle">
            <summary>
            Scans the window resources and returns it's accent and theme.
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.DetectAppStyle(System.Windows.Window)">
            <summary>
            Scans the window resources and returns it's accent and theme.
            </summary>
            <param name="window">The Window to scan.</param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.DetectAppStyle(System.Windows.Application)">
            <summary>
            Scans the application resources and returns it's accent and theme.
            </summary>
            <param name="app">The Application instance to scan.</param>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.DetectAppStyle(System.Windows.ResourceDictionary)">
            <summary>
            Scans a resources and returns it's accent and theme.
            </summary>
            <param name="resources">The ResourceDictionary to check.</param>
        </member>
        <member name="E:LdNet.MetroControls.ThemeManager.IsThemeChanged">
            <summary>
            This event fires if accent color and theme was changed
            this should be using the weak event pattern, but for now it's enough
            </summary>
        </member>
        <member name="M:LdNet.MetroControls.ThemeManager.OnThemeChanged(LdNet.MetroControls.Accent,LdNet.MetroControls.AppTheme)">
            <summary>
            Invalidates global colors and resources.
            Sometimes the ContextMenu is not changing the colors, so this will fix it.
            </summary>
        </member>
        <member name="F:Standard.IID.ApplicationAssociationRegistration">
            <summary>IID_IApplicationAssociationRegistration</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPoint">
            <summary>IID_IConnectionPoint</summary>
        </member>
        <member name="F:Standard.IID.ConnectionPointContainer">
            <summary>IID_IConnectionPointContainer</summary>
        </member>
        <member name="F:Standard.IID.EnumConnectionPoints">
            <summary>IID_IEnumConnectionPoints</summary>
        </member>
        <member name="F:Standard.IID.EnumConnections">
            <summary>IID_IEnumConnections</summary>
        </member>
        <member name="F:Standard.IID.EnumIdList">
            <summary>IID_IEnumIDList</summary>
        </member>
        <member name="F:Standard.IID.EnumObjects">
            <summary>IID_IEnumObjects</summary>
        </member>
        <member name="F:Standard.IID.FileDialog">
            <summary>IID_IFileDialog</summary>
        </member>
        <member name="F:Standard.IID.FileDialogEvents">
            <summary>IID_IFileDialogEvents</summary>
        </member>
        <member name="F:Standard.IID.FileOpenDialog">
            <summary>IID_IFileOpenDialog</summary>
        </member>
        <member name="F:Standard.IID.FileSaveDialog">
            <summary>IID_IFileSaveDialog</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument">
            <summary>IID_IHTMLDocument</summary>
        </member>
        <member name="F:Standard.IID.HtmlDocument2">
            <summary>IID_IHTMLDocument2</summary>
        </member>
        <member name="F:Standard.IID.ModalWindow">
            <summary>IID_IModalWindow</summary>
        </member>
        <member name="F:Standard.IID.ObjectArray">
            <summary>IID_IObjectArray</summary>
        </member>
        <member name="F:Standard.IID.ObjectCollection">
            <summary>IID_IObjectCollection</summary>
        </member>
        <member name="F:Standard.IID.PropertyNotifySink">
            <summary>IID_IPropertyNotifySink</summary>
        </member>
        <member name="F:Standard.IID.PropertyStore">
            <summary>IID_IPropertyStore</summary>
        </member>
        <member name="F:Standard.IID.ServiceProvider">
            <summary>IID_IServiceProvider</summary>
        </member>
        <member name="F:Standard.IID.ShellFolder">
            <summary>IID_IShellFolder</summary>
        </member>
        <member name="F:Standard.IID.ShellLink">
            <summary>IID_IShellLink</summary>
        </member>
        <member name="F:Standard.IID.ShellItem">
            <summary>IID_IShellItem</summary>
        </member>
        <member name="F:Standard.IID.ShellItem2">
            <summary>IID_IShellItem2</summary>
        </member>
        <member name="F:Standard.IID.ShellItemArray">
            <summary>IID_IShellItemArray</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList">
            <summary>IID_ITaskbarList</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList2">
            <summary>IID_ITaskbarList2</summary>
        </member>
        <member name="F:Standard.IID.Unknown">
            <summary>IID_IUnknown</summary>
        </member>
        <member name="F:Standard.IID.WebBrowser2">
            <summary>IID_IWebBrowser2</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents">
            <summary>DIID_DWebBrowserEvents</summary>
        </member>
        <member name="F:Standard.IID.WebBrowserEvents2">
            <summary>IID_DWebBrowserEvents2</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapDecoder">
            <summary>IID_IWICBitmapDecoder</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFlipRotator">
            <summary>IID_IWICBitmapFlipRotator</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapFrameDecode">
            <summary>IID_IWICBitmapFrameDecode</summary>
        </member>
        <member name="F:Standard.IID.WICBitmap">
            <summary>IID_IWICBitmap</summary>
        </member>
        <member name="F:Standard.IID.WICBitmapSource">
            <summary>IID_IWICBitmapSource</summary>
        </member>
        <member name="F:Standard.IID.WICFormatConverter">
            <summary>IID_IWICFormatConverter</summary>
        </member>
        <member name="F:Standard.IID.WICImagingFactory">
            <summary>IID_IWICImagingFactory</summary>
        </member>
        <member name="F:Standard.IID.WICStream">
            <summary>IID_IWICStream</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDestinations">
            <summary>IID_IApplicationDestinations</summary>
        </member>
        <member name="F:Standard.IID.ApplicationDocumentLists">
            <summary>IID_IApplicationDocumentLists</summary>
        </member>
        <member name="F:Standard.IID.CustomDestinationList">
            <summary>IID_ICustomDestinationList</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithAppUserModelId">
            <summary>IID_IObjectWithAppUserModelID</summary>
        </member>
        <member name="F:Standard.IID.ObjectWithProgId">
            <summary>IID_IObjectWithProgID</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList3">
            <summary>IID_ITaskbarList3</summary>
        </member>
        <member name="F:Standard.IID.TaskbarList4">
            <summary>IID_ITaskbarList4</summary>
        </member>
        <member name="F:Standard.SID.SWebBrowserApp">
            <summary>SID_SWebBrowserApp</summary>
        </member>
        <member name="F:Standard.CLSID.ApplicationAssociationRegistration">
            <summary>CLSID_ApplicationAssociationRegistration</summary>
            <remarks>IID_IApplicationAssociationRegistration</remarks>
        </member>
        <member name="F:Standard.CLSID.DragDropHelper">
            <summary>CLSID_DragDropHelper</summary>
        </member>
        <member name="F:Standard.CLSID.FileOpenDialog">
            <summary>CLSID_FileOpenDialog</summary>
            <remarks>IID_IFileOpenDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.FileSaveDialog">
            <summary>CLSID_FileSaveDialog</summary>
            <remarks>IID_IFileSaveDialog</remarks>
        </member>
        <member name="F:Standard.CLSID.TaskbarList">
            <summary>CLSID_TaskbarList</summary>
            <remarks>IID_ITaskbarList</remarks>
        </member>
        <member name="F:Standard.CLSID.EnumerableObjectCollection">
            <summary>CLSID_EnumerableObjectCollection</summary>
            <remarks>IID_IEnumObjects.</remarks>
        </member>
        <member name="F:Standard.CLSID.ShellLink">
            <summary>CLSID_ShellLink</summary>
            <remarks>IID_IShellLink</remarks>
        </member>
        <member name="F:Standard.CLSID.WICImagingFactory">
            <summary>CLSID_WICImagingFactory</summary>
        </member>
        <member name="F:Standard.CLSID.DestinationList">
            <summary>CLSID_DestinationList</summary>
            <remarks>IID_ICustomDestinationList</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDestinations">
            <summary>CLSID_ApplicationDestinations</summary>
            <remarks>IID_IApplicationDestinations</remarks>
        </member>
        <member name="F:Standard.CLSID.ApplicationDocumentLists">
            <summary>CLSID_ApplicationDocumentLists</summary>
            <remarks>IID_IApplicationDocumentLists</remarks>
        </member>
        <member name="T:Standard.Assert">
            <summary>A static class for verifying assumptions.</summary>
        </member>
        <member name="T:Standard.Assert.EvaluateFunction">
            <summary>A function signature for Assert.Evaluate.</summary>
        </member>
        <member name="T:Standard.Assert.ImplicationFunction">
            <summary>A function signature for Assert.Implies.</summary>
            <returns>Returns the truth of a predicate.</returns>
        </member>
        <member name="M:Standard.Assert.Evaluate(Standard.Assert.EvaluateFunction)">
            <summary>
            Executes the specified argument.
            </summary>
            <param name="argument">The function to execute.</param>
        </member>
        <member name="M:Standard.Assert.Equals``1(``0,``0)">
            <summary>Obsolete: Use Standard.Assert.AreEqual instead of Assert.Equals</summary>
            <typeparam name="T">The generic type to compare for equality.</typeparam>
            <param name="expected">The first generic type data to compare.  This is is the expected value.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
        </member>
        <member name="M:Standard.Assert.AreEqual``1(``0,``0)">
            <summary>
            Verifies that two generic type data are equal.  The assertion fails if they are not.
            </summary>
            <typeparam name="T">The generic type to compare for equality.</typeparam>
            <param name="expected">The first generic type data to compare.  This is is the expected value.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.AreNotEqual``1(``0,``0)">
            <summary>
            Verifies that two generic type data are not equal.  The assertion fails if they are.
            </summary>
            <typeparam name="T">The generic type to compare for inequality.</typeparam>
            <param name="notExpected">The first generic type data to compare.  This is is the value that's not expected.</param>
            <param name="actual">The second generic type data to compare.  This is the actual value.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,System.Boolean)">
            <summary>
            Verifies that if the specified condition is true, then so is the result.
            The assertion fails if the condition is true but the result is false.
            </summary>
            <param name="condition">if set to <c>true</c> [condition].</param>
            <param name="result">
            A second Boolean statement.  If the first was true then so must this be.
            If the first statement was false then the value of this is ignored.
            </param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Implies(System.Boolean,Standard.Assert.ImplicationFunction)">
            <summary>
            Lazy evaluation overload.  Verifies that if a condition is true, then so is a secondary value.
            </summary>
            <param name="condition">The conditional value.</param>
            <param name="result">A function to be evaluated for truth if the condition argument is true.</param>
            <remarks>
            This overload only evaluates the result if the first condition is true.
            </remarks>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorEmpty(System.String)">
            <summary>
            Verifies that a string has content.  I.e. it is not null and it is not empty.
            </summary>
            <param name="value">The string to verify.</param>
        </member>
        <member name="M:Standard.Assert.IsNeitherNullNorWhitespace(System.String)">
            <summary>
            Verifies that a string has content.  I.e. it is not null and it is not purely whitespace.
            </summary>
            <param name="value">The string to verify.</param>
        </member>
        <member name="M:Standard.Assert.IsNotNull``1(``0)">
            <summary>
            Verifies the specified value is not null.  The assertion fails if it is.
            </summary>
            <typeparam name="T">The generic reference type.</typeparam>
            <param name="value">The value to check for nullness.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean)">
            <summary>
            Verifies that the specified condition is false.  The assertion fails if it is true.
            </summary>
            <param name="condition">The expression that should be <c>false</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsFalse(System.Boolean,System.String)">
            <summary>
            Verifies that the specified condition is false.  The assertion fails if it is true.
            </summary>
            <param name="condition">The expression that should be <c>false</c>.</param>
            <param name="message">The message to display if the condition is <c>true</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean)">
            <summary>
            Verifies that the specified condition is true.  The assertion fails if it is not.
            </summary>
            <param name="condition">A condition that is expected to be <c>true</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsTrue(System.Boolean,System.String)">
            <summary>
            Verifies that the specified condition is true.  The assertion fails if it is not.
            </summary>
            <param name="condition">A condition that is expected to be <c>true</c>.</param>
            <param name="message">The message to write in case the condition is <c>false</c>.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Fail">
            <summary>
            This line should never be executed.  The assertion always fails.
            </summary>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.Fail(System.String)">
            <summary>
            This line should never be executed.  The assertion always fails.
            </summary>
            <param name="message">The message to display if this function is executed.</param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="M:Standard.Assert.IsNull``1(``0)">
            <summary>
            Verifies that the specified object is null.  The assertion fails if it is not.
            </summary>
            <param name="item">The item to verify is null.</param>
        </member>
        <member name="M:Standard.Assert.BoundedDoubleInc(System.Double,System.Double,System.Double)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundInclusive">The upper bound inclusive value.</param>
        </member>
        <member name="M:Standard.Assert.BoundedInteger(System.Int32,System.Int32,System.Int32)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundExclusive">The upper bound exclusive value.</param>
        </member>
        <member name="M:Standard.Assert.IsApartmentState(System.Threading.ApartmentState)">
            <summary>
            Verify the current thread's apartment state is what's expected.  The assertion fails if it isn't
            </summary>
            <param name="expectedState">
            The expected apartment state for the current thread.
            </param>
            <remarks>This breaks into the debugger in the case of a failed assertion.</remarks>
        </member>
        <member name="T:Standard.DoubleUtilities">
            <summary>
            DoubleUtil uses fixed eps to provide fuzzy comparison functionality for doubles.
            Note that FP noise is a big problem and using any of these compare 
            methods is not a complete solution, but rather the way to reduce 
            the probability of repeating unnecessary work.
            </summary>
        </member>
        <member name="F:Standard.DoubleUtilities.Epsilon">
            <summary>
            Epsilon - more or less random, more or less small number.
            </summary>
        </member>
        <member name="M:Standard.DoubleUtilities.AreClose(System.Double,System.Double)">
            <summary>
            AreClose returns whether or not two doubles are "close".  That is, whether or 
            not they are within epsilon of each other.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false. 
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the AreClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyLessThan(System.Double,System.Double)">
            <summary>
            LessThan returns whether or not the first double is less than the second double.
            That is, whether or not the first is strictly less than *and* not within epsilon of
            the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the LessThan comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsStrictlyGreaterThan(System.Double,System.Double)">
            <summary>
            GreaterThan returns whether or not the first double is greater than the second double.
            That is, whether or not the first is strictly greater than *and* not within epsilon of
            the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the GreaterThan comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsLessThanOrCloseTo(System.Double,System.Double)">
            <summary>
            LessThanOrClose returns whether or not the first double is less than or close to
            the second double.  That is, whether or not the first is strictly less than or within
            epsilon of the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the LessThanOrClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsGreaterThanOrCloseTo(System.Double,System.Double)">
            <summary>
            GreaterThanOrClose returns whether or not the first double is greater than or close to
            the second double.  That is, whether or not the first is strictly greater than or within
            epsilon of the other number.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this 
            returns false.
            </summary>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
            <returns>The result of the GreaterThanOrClose comparision.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsFinite(System.Double)">
            <summary>
            Test to see if a double is a finite number (is not NaN or Infinity).
            </summary>
            <param name='value'>The value to test.</param>
            <returns>Whether or not the value is a finite number.</returns>
        </member>
        <member name="M:Standard.DoubleUtilities.IsValidSize(System.Double)">
            <summary>
            Test to see if a double a valid size value (is finite and > 0).
            </summary>
            <param name='value'>The value to test.</param>
            <returns>Whether or not the value is a valid size value.</returns>
        </member>
        <member name="M:Standard.DpiHelper.LogicalPixelsToDevice(System.Windows.Point)">
            <summary>
            Convert a point in device independent pixels (1/96") to a point in the system coordinates.
            </summary>
            <param name="logicalPoint">A point in the logical coordinate system.</param>
            <returns>Returns the parameter converted to the system's coordinates.</returns>
        </member>
        <member name="M:Standard.DpiHelper.DevicePixelsToLogical(System.Windows.Point)">
            <summary>
            Convert a point in system coordinates to a point in device independent pixels (1/96").
            </summary>
            <param name="devicePoint">A point in the physical coordinate system.</param>
            <returns>Returns the parameter converted to the device independent coordinate system.</returns>
        </member>
        <member name="T:Standard.Win32Error">
            <summary>
            Wrapper for common Win32 status codes.
            </summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SUCCESS">
            <summary>The operation completed successfully.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_FUNCTION">
            <summary>Incorrect function.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_FILE_NOT_FOUND">
            <summary>The system cannot find the file specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_PATH_NOT_FOUND">
            <summary>The system cannot find the path specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_TOO_MANY_OPEN_FILES">
            <summary>The system cannot open the file.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_ACCESS_DENIED">
            <summary>Access is denied.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_HANDLE">
            <summary>The handle is invalid.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_OUTOFMEMORY">
            <summary>Not enough storage is available to complete this operation.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MORE_FILES">
            <summary>There are no more files.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_SHARING_VIOLATION">
            <summary>The process cannot access the file because it is being used by another process.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_PARAMETER">
            <summary>The parameter is incorrect.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INSUFFICIENT_BUFFER">
            <summary>The data area passed to a system call is too small.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NESTING_NOT_ALLOWED">
            <summary>Cannot nest calls to LoadModule.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_KEY_DELETED">
            <summary>Illegal operation attempted on a registry key that has been marked for deletion.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NOT_FOUND">
            <summary>Element not found.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_NO_MATCH">
            <summary>There was no match for the specified key in the index.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_BAD_DEVICE">
            <summary>An invalid device was specified.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANCELLED">
            <summary>The operation was canceled by the user.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CANNOT_FIND_WND_CLASS">
            <summary>Cannot find window class.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_CLASS_ALREADY_EXISTS">
            <summary>The window class was already registered.</summary>
        </member>
        <member name="F:Standard.Win32Error.ERROR_INVALID_DATATYPE">
            <summary>The specified datatype is invalid.</summary>
        </member>
        <member name="M:Standard.Win32Error.#ctor(System.Int32)">
            <summary>
            Create a new Win32 error.
            </summary>
            <param name="i">The integer value of the error.</param>
        </member>
        <member name="M:Standard.Win32Error.op_Explicit(Standard.Win32Error)~Standard.HRESULT">
            <summary>Performs HRESULT_FROM_WIN32 conversion.</summary>
            <param name="error">The Win32 error being converted to an HRESULT.</param>
            <returns>The equivilent HRESULT value.</returns>
        </member>
        <member name="M:Standard.Win32Error.ToHRESULT">
            <summary>Performs HRESULT_FROM_WIN32 conversion.</summary>
            <returns>The equivilent HRESULT value.</returns>
        </member>
        <member name="M:Standard.Win32Error.GetLastError">
            <summary>Performs the equivalent of Win32's GetLastError()</summary>
            <returns>A Win32Error instance with the result of the native GetLastError</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Equality(Standard.Win32Error,Standard.Win32Error)">
            <summary>
            Compare two Win32 error codes for equality.
            </summary>
            <param name="errLeft">The first error code to compare.</param>
            <param name="errRight">The second error code to compare.</param>
            <returns>Whether the two error codes are the same.</returns>
        </member>
        <member name="M:Standard.Win32Error.op_Inequality(Standard.Win32Error,Standard.Win32Error)">
            <summary>
            Compare two Win32 error codes for inequality.
            </summary>
            <param name="errLeft">The first error code to compare.</param>
            <param name="errRight">The second error code to compare.</param>
            <returns>Whether the two error codes are not the same.</returns>
        </member>
        <member name="F:Standard.Facility.Null">
            <summary>FACILITY_NULL</summary>
        </member>
        <member name="F:Standard.Facility.Rpc">
            <summary>FACILITY_RPC</summary>
        </member>
        <member name="F:Standard.Facility.Dispatch">
            <summary>FACILITY_DISPATCH</summary>
        </member>
        <member name="F:Standard.Facility.Storage">
            <summary>FACILITY_STORAGE</summary>
        </member>
        <member name="F:Standard.Facility.Itf">
            <summary>FACILITY_ITF</summary>
        </member>
        <member name="F:Standard.Facility.Win32">
            <summary>FACILITY_WIN32</summary>
        </member>
        <member name="F:Standard.Facility.Windows">
            <summary>FACILITY_WINDOWS</summary>
        </member>
        <member name="F:Standard.Facility.Control">
            <summary>FACILITY_CONTROL</summary>
        </member>
        <member name="F:Standard.Facility.Ese">
            <summary>MSDN doced facility code for ESE errors.</summary>
        </member>
        <member name="F:Standard.Facility.WinCodec">
            <summary>FACILITY_WINCODEC (WIC)</summary>
        </member>
        <member name="T:Standard.HRESULT">
            <summary>Wrapper for HRESULT status codes.</summary>
        </member>
        <member name="F:Standard.HRESULT.S_OK">
            <summary>S_OK</summary>
        </member>
        <member name="F:Standard.HRESULT.S_FALSE">
            <summary>S_FALSE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_PENDING">
            <summary>E_PENDING</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOTIMPL">
            <summary>E_NOTIMPL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_NOINTERFACE">
            <summary>E_NOINTERFACE</summary>
        </member>
        <member name="F:Standard.HRESULT.E_POINTER">
            <summary>E_POINTER</summary>
        </member>
        <member name="F:Standard.HRESULT.E_ABORT">
            <summary>E_ABORT</summary>
        </member>
        <member name="F:Standard.HRESULT.E_FAIL">
            <summary>E_FAIL</summary>
        </member>
        <member name="F:Standard.HRESULT.E_UNEXPECTED">
            <summary>E_UNEXPECTED</summary>
        </member>
        <member name="F:Standard.HRESULT.STG_E_INVALIDFUNCTION">
            <summary>STG_E_INVALIDFUNCTION</summary>
        </member>
        <member name="F:Standard.HRESULT.REGDB_E_CLASSNOTREG">
            <summary>REGDB_E_CLASSNOTREG</summary>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NO_MATCHING_ASSOC_HANDLER">
            <summary>DESTS_E_NO_MATCHING_ASSOC_HANDLER.  Win7 internal error code for Jump Lists.</summary>
            <remarks>There is no Assoc Handler for the given item registered by the specified application.</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NORECDOCS">
            <summary>DESTS_E_NORECDOCS.  Win7 internal error code for Jump Lists.</summary>
            <remarks>The given item is excluded from the recent docs folder by the NoRecDocs bit on its registration.</remarks>
        </member>
        <member name="F:Standard.HRESULT.DESTS_E_NOTALLCLEARED">
            <summary>DESTS_E_NOTALLCLEARED.  Win7 internal error code for Jump Lists.</summary>
            <remarks>Not all of the items were successfully cleared</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_ACCESSDENIED">
            <summary>E_ACCESSDENIED</summary>
            <remarks>Win32Error ERROR_ACCESS_DENIED.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_OUTOFMEMORY">
            <summary>E_OUTOFMEMORY</summary>
            <remarks>Win32Error ERROR_OUTOFMEMORY.</remarks>
        </member>
        <member name="F:Standard.HRESULT.E_INVALIDARG">
            <summary>E_INVALIDARG</summary>
            <remarks>Win32Error ERROR_INVALID_PARAMETER.</remarks>
        </member>
        <member name="F:Standard.HRESULT.INTSAFE_E_ARITHMETIC_OVERFLOW">
            <summary>INTSAFE_E_ARITHMETIC_OVERFLOW</summary>
        </member>
        <member name="F:Standard.HRESULT.COR_E_OBJECTDISPOSED">
            <summary>COR_E_OBJECTDISPOSED</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_GREATERTHAN">
            <summary>WC_E_GREATERTHAN</summary>
        </member>
        <member name="F:Standard.HRESULT.WC_E_SYNTAX">
            <summary>WC_E_SYNTAX</summary>
        </member>
        <member name="M:Standard.HRESULT.#ctor(System.UInt32)">
            <summary>
            Create an HRESULT from an integer value.
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Standard.HRESULT.op_Explicit(Standard.HRESULT)~System.Int32">
            <summary>
            Convert an HRESULT to an int.  Used for COM interface declarations out of our control.
            </summary>
        </member>
        <member name="P:Standard.HRESULT.Facility">
            <summary>
            retrieve HRESULT_FACILITY
            </summary>
        </member>
        <member name="P:Standard.HRESULT.Code">
            <summary>
            retrieve HRESULT_CODE
            </summary>
        </member>
        <member name="M:Standard.HRESULT.ToString">
            <summary>
            Get a string representation of this HRESULT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Standard.HRESULT.ThrowLastError">
            <summary>
            Convert the result of Win32 GetLastError() into a raised exception.
            </summary>
        </member>
        <member name="T:Standard.HCF">
            <summary>
            HIGHCONTRAST flags
            </summary>
        </member>
        <member name="T:Standard.DROPIMAGETYPE">
            <summary>
            DROPIMAGE_*
            </summary>
        </member>
        <member name="T:Standard.BI">
            <summary>
            BITMAPINFOHEADER Compression type.  BI_*.
            </summary>
        </member>
        <member name="T:Standard.RGN">
            <summary>
            CombingRgn flags.  RGN_*
            </summary>
        </member>
        <member name="F:Standard.RGN.AND">
            <summary>
            Creates the intersection of the two combined regions.
            </summary>
        </member>
        <member name="F:Standard.RGN.OR">
            <summary>
            Creates the union of two combined regions.
            </summary>
        </member>
        <member name="F:Standard.RGN.XOR">
            <summary>
            Creates the union of two combined regions except for any overlapping areas.
            </summary>
        </member>
        <member name="F:Standard.RGN.DIFF">
            <summary>
            Combines the parts of hrgnSrc1 that are not part of hrgnSrc2.
            </summary>
        </member>
        <member name="F:Standard.RGN.COPY">
            <summary>
            Creates a copy of the region identified by hrgnSrc1.
            </summary>
        </member>
        <member name="T:Standard.OLECMDEXECOPT">
            <summary>
            For IWebBrowser2.  OLECMDEXECOPT_*
            </summary>
        </member>
        <member name="T:Standard.OLECMDF">
            <summary>
            For IWebBrowser2.  OLECMDF_*
            </summary>
        </member>
        <member name="T:Standard.OLECMDID">
            <summary>
            For IWebBrowser2.  OLECMDID_*
            </summary>
        </member>
        <member name="T:Standard.READYSTATE">
            <summary>
            For IWebBrowser2.  READYSTATE_*
            </summary>
        </member>
        <member name="T:Standard.DOGIF">
            <summary>
            DATAOBJ_GET_ITEM_FLAGS.  DOGIF_*.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.Default">
            <summary>Use the system default, which is to display all error dialog boxes.</summary>
        </member>
        <member name="F:Standard.ErrorModes.FailCriticalErrors">
            <summary>
            The system does not display the critical-error-handler message box. 
            Instead, the system sends the error to the calling process.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoGpFaultErrorBox">
            <summary>
            64-bit Windows:  The system automatically fixes memory alignment faults and makes them 
            invisible to the application. It does this for the calling process and any descendant processes.
            After this value is set for a process, subsequent attempts to clear the value are ignored.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoAlignmentFaultExcept">
            <summary>
            The system does not display the general-protection-fault message box. 
            This flag should only be set by debugging applications that handle general 
            protection (GP) faults themselves with an exception handler.
            </summary>
        </member>
        <member name="F:Standard.ErrorModes.NoOpenFileErrorBox">
            <summary>
            The system does not display a message box when it fails to find a file. 
            Instead, the error is returned to the calling process.
            </summary>
        </member>
        <member name="T:Standard.HT">
            <summary>
            Non-client hit test values, HT*
            </summary>
        </member>
        <member name="T:Standard.GCLP">
            <summary>
            GetClassLongPtr values, GCLP_*
            </summary>
        </member>
        <member name="T:Standard.GWL">
            <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
        </member>
        <member name="T:Standard.SM">
            <summary>
            SystemMetrics.  SM_*
            </summary>
        </member>
        <member name="T:Standard.SPI">
            <summary>
            SystemParameterInfo values, SPI_*
            </summary>
        </member>
        <member name="T:Standard.SPIF">
            <summary>
            SystemParameterInfo flag values, SPIF_*
            </summary>
        </member>
        <member name="T:Standard.CS">
            <summary>
            CS_*
            </summary>
        </member>
        <member name="T:Standard.WS">
            <summary>
            WindowStyle values, WS_*
            </summary>
        </member>
        <member name="T:Standard.WM">
            <summary>
            Window message values, WM_*
            </summary>
        </member>
        <member name="T:Standard.WS_EX">
            <summary>
            Window style extended values, WS_EX_*
            </summary>
        </member>
        <member name="T:Standard.DeviceCap">
            <summary>
            GetDeviceCaps nIndex values.
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.BITSPIXEL">
            <summary>Number of bits per pixel
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Standard.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="T:Standard.FOF">
            <summary>
            "FILEOP_FLAGS", FOF_*.
            </summary>
        </member>
        <member name="T:Standard.MF">
            <summary>
            EnableMenuItem uEnable values, MF_*
            </summary>
        </member>
        <member name="F:Standard.MF.DOES_NOT_EXIST">
            <summary>
            Possible return value for EnableMenuItem
            </summary>
        </member>
        <member name="T:Standard.WINDOWTHEMEATTRIBUTETYPE">
            <summary>Specifies the type of visual style attribute to set on a window.</summary>
        </member>
        <member name="F:Standard.WINDOWTHEMEATTRIBUTETYPE.WTA_NONCLIENT">
            <summary>Non-client area window attributes will be set.</summary>
        </member>
        <member name="T:Standard.DWMFLIP3D">
            <summary>
            DWMFLIP3DWINDOWPOLICY.  DWMFLIP3D_*
            </summary>
        </member>
        <member name="T:Standard.DWMNCRP">
            <summary>
            DWMNCRENDERINGPOLICY. DWMNCRP_*
            </summary>
        </member>
        <member name="T:Standard.DWMWA">
            <summary>
            DWMWINDOWATTRIBUTE.  DWMWA_*
            </summary>
        </member>
        <member name="T:Standard.WTNCA">
            <summary>
            WindowThemeNonClientAttributes
            </summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWCAPTION">
            <summary>Prevents the window caption from being drawn.</summary>
        </member>
        <member name="F:Standard.WTNCA.NODRAWICON">
            <summary>Prevents the system icon from being drawn.</summary>
        </member>
        <member name="F:Standard.WTNCA.NOSYSMENU">
            <summary>Prevents the system icon menu from appearing.</summary>
        </member>
        <member name="F:Standard.WTNCA.NOMIRRORHELP">
            <summary>Prevents mirroring of the question mark, even in right-to-left (RTL) layout.</summary>
        </member>
        <member name="F:Standard.WTNCA.VALIDBITS">
            <summary> A mask that contains all the valid bits.</summary>
        </member>
        <member name="T:Standard.SWP">
            <summary>
            SetWindowPos options
            </summary>
        </member>
        <member name="T:Standard.SW">
            <summary>
            ShowWindow options
            </summary>
        </member>
        <member name="F:Standard.SC.F_ISSECURE">
            <summary>
            SCF_ISSECURE
            </summary>
        </member>
        <member name="T:Standard.Status">
            <summary>
            GDI+ Status codes
            </summary>
        </member>
        <member name="T:Standard.MSGFLT">
            <summary>
            MSGFLT_*.  New in Vista.  Realiased in Windows 7.
            </summary>
        </member>
        <member name="T:Standard.NIM">
            <summary>
            Shell_NotifyIcon messages.  NIM_*
            </summary>
        </member>
        <member name="T:Standard.SHARD">
            <summary>
            SHAddToRecentDocuments flags.  SHARD_*
            </summary>
        </member>
        <member name="T:Standard.NIF">
            <summary>
            Shell_NotifyIcon flags.  NIF_*
            </summary>
        </member>
        <member name="F:Standard.NIF.REALTIME">
            <summary>
            Vista only.
            </summary>
        </member>
        <member name="F:Standard.NIF.SHOWTIP">
            <summary>
            Vista only.
            </summary>
        </member>
        <member name="T:Standard.NIIF">
            <summary>
            Shell_NotifyIcon info flags.  NIIF_*
            </summary>
        </member>
        <member name="F:Standard.NIIF.USER">
            <summary>XP SP2 and later.</summary>
        </member>
        <member name="F:Standard.NIIF.NOSOUND">
            <summary>XP and later.</summary>
        </member>
        <member name="F:Standard.NIIF.LARGE_ICON">
            <summary>Vista and later.</summary>
        </member>
        <member name="F:Standard.NIIF.NIIF_RESPECT_QUIET_TIME">
            <summary>Windows 7 and later</summary>
        </member>
        <member name="F:Standard.NIIF.XP_ICON_MASK">
            <summary>XP and later.  Native version called NIIF_ICON_MASK.</summary>
        </member>
        <member name="T:Standard.AC">
            <summary>
            AC_*
            </summary>
        </member>
        <member name="F:Standard.NOTIFYICONDATA.dwState">
            <summary>
            The state of the icon.  There are two flags that can be set independently.
            NIS_HIDDEN = 1.  The icon is hidden.
            NIS_SHAREDICON = 2.  The icon is shared.
            </summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pidl">
            <summary>The idlist for the shell item that should be added to the recent docs folder.</summary>
        </member>
        <member name="F:Standard.SHARDAPPIDINFOIDLIST.pszAppID">
            <summary>The id of the application that should be associated with this recent doc.</summary>
        </member>
        <member name="T:Standard.WTA_OPTIONS">
            <summary>Defines options that are used to set window visual style attributes.</summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwFlags">
            <summary>
            A combination of flags that modify window visual style attributes.
            Can be a combination of the WTNCA constants.
            </summary>
        </member>
        <member name="F:Standard.WTA_OPTIONS.dwMask">
            <summary>
            A bitmask that describes how the values specified in dwFlags should be applied.
            If the bit corresponding to a value in dwFlags is 0, that flag will be removed.
            If the bit is 1, the flag will be added.
            </summary>
        </member>
        <member name="F:Standard.MARGINS.cxLeftWidth">
            <summary>Width of left border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cxRightWidth">
            <summary>Width of right border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cyTopHeight">
            <summary>Height of top border that retains its size.</summary>
        </member>
        <member name="F:Standard.MARGINS.cyBottomHeight">
            <summary>Height of bottom border that retains its size.</summary>
        </member>
        <member name="F:Standard.APPBARDATA.cbSize">
            <summary>
            initialize this field using: Marshal.SizeOf(typeof(APPBARDATA));
            </summary>
        </member>
        <member name="T:Standard.WndProc">
            <summary>Delegate declaration that matches native WndProc signatures.</summary>
        </member>
        <member name="T:Standard.MessageHandler">
            <summary>Delegate declaration that matches managed WndProc signatures.</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetWindowThemeAttribute(System.IntPtr,Standard.WINDOWTHEMEATTRIBUTETYPE,Standard.WTA_OPTIONS@,System.UInt32)">
            <summary>
            Sets attributes to control how visual styles are applied to a specified window.
            </summary>
            <param name="hwnd">
            Handle to a window to apply changes to.
            </param>
            <param name="eAttribute">
            Value of type WINDOWTHEMEATTRIBUTETYPE that specifies the type of attribute to set.
            The value of this parameter determines the type of data that should be passed in the pvAttribute parameter.
            Can be the following value:
            <list>WTA_NONCLIENT (Specifies non-client related attributes).</list>
            pvAttribute must be a pointer of type WTA_OPTIONS.
            </param>
            <param name="pvAttribute">
            A pointer that specifies attributes to set. Type is determined by the value of the eAttribute value.
            </param>
            <param name="cbAttribute">
            Specifies the size, in bytes, of the data pointed to by pvAttribute.
            </param>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_NONCLIENTMETRICS(Standard.SPI,System.Int32,Standard.NONCLIENTMETRICS@,Standard.SPIF)">
            <summary>Overload of SystemParametersInfo for getting and setting NONCLIENTMETRICS.</summary>
        </member>
        <member name="M:Standard.NativeMethods._SystemParametersInfo_HIGHCONTRAST(Standard.SPI,System.Int32,Standard.HIGHCONTRAST@,Standard.SPIF)">
            <summary>Overload of SystemParametersInfo for getting and setting HIGHCONTRAST.</summary>
        </member>
        <member name="M:Standard.NativeMethods.SetCurrentProcessExplicitAppUserModelID(System.String)">
            <summary>
            Sets the User Model AppID for the current process, enabling Windows to retrieve this ID
            </summary>
            <param name="AppID"></param>
        </member>
        <member name="M:Standard.NativeMethods.GetCurrentProcessExplicitAppUserModelID(System.String@)">
            <summary>
            Retrieves the User Model AppID that has been explicitly set for the current process via SetCurrentProcessExplicitAppUserModelID
            </summary>
            <param name="AppID"></param>
        </member>
        <member name="T:Standard.AL">
            <summary>ASSOCIATIONLEVEL, AL_*</summary>
        </member>
        <member name="T:Standard.AT">
            <summary>ASSOCIATIONTYPE, AT_*</summary>
        </member>
        <member name="T:Standard.FDAP">
            <summary>FileDialog AddPlace options.  FDAP_*</summary>
        </member>
        <member name="T:Standard.FOS">
            <summary>IFileDialog options.  FOS_*</summary>
        </member>
        <member name="T:Standard.FDEOR">
            <summary>FDE_OVERWRITE_RESPONSE.  FDEOR_*</summary>
        </member>
        <member name="T:Standard.FDESVR">
            <summary>FDE_SHAREVIOLATION_RESPONSE.  FDESVR_*</summary>
        </member>
        <member name="T:Standard.SIATTRIBFLAGS">
            <summary>ShellItem attribute flags.  SIATTRIBFLAGS_*</summary>
        </member>
        <member name="T:Standard.STPF">
            <summary>
            Flags for SetTabProperties.  STPF_*
            </summary>
            <remarks>The native enum was called STPFLAG.</remarks>
        </member>
        <member name="T:Standard.TBPF">
            <summary>
            Flags for Setting Taskbar Progress state.  TBPF_*
            </summary>
            <remarks>
            The native enum was called TBPFLAG.
            </remarks>
        </member>
        <member name="T:Standard.THB">
            <summary>
            THUMBBUTTON mask.  THB_*
            </summary>
        </member>
        <member name="T:Standard.THBF">
            <summary>
            THUMBBUTTON flags.  THBF_*
            </summary>
        </member>
        <member name="T:Standard.GPS">
            <summary>
            GetPropertyStoreFlags.  GPS_*.
            </summary>
            <remarks>
            These are new for Vista, but are used in downlevel components
            </remarks>
        </member>
        <member name="T:Standard.KDC">
            <summary>
            KNOWNDESTCATEGORY.  KDC_*
            </summary>
        </member>
        <member name="F:Standard.SFGAO.CANCOPY">
            <summary>Objects can be copied</summary>
            <remarks>DROPEFFECT_COPY</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANMOVE">
            <summary>Objects can be moved</summary>
            <remarks>DROPEFFECT_MOVE</remarks>
        </member>
        <member name="F:Standard.SFGAO.CANLINK">
            <summary>Objects can be linked</summary>
            <remarks>
            DROPEFFECT_LINK.
            
            If this bit is set on an item in the shell folder, a
            'Create Shortcut' menu item will be added to the File
            menu and context menus for the item.  If the user selects
            that command, your IContextMenu::InvokeCommand() will be called
            with 'link'.
            That flag will also be used to determine if 'Create Shortcut'
            should be added when the item in your folder is dragged to another
            folder.
            </remarks>
        </member>
        <member name="F:Standard.SFGAO.STORAGE">
            <summary>supports BindToObject(IID_IStorage)</summary>
        </member>
        <member name="F:Standard.SFGAO.CANRENAME">
            <summary>Objects can be renamed</summary>
        </member>
        <member name="F:Standard.SFGAO.CANDELETE">
            <summary>Objects can be deleted</summary>
        </member>
        <member name="F:Standard.SFGAO.HASPROPSHEET">
            <summary>Objects have property sheets</summary>
        </member>
        <member name="F:Standard.SFGAO.DROPTARGET">
            <summary>Objects are drop target</summary>
        </member>
        <member name="F:Standard.SFGAO.ENCRYPTED">
            <summary>Object is encrypted (use alt color)</summary>
        </member>
        <member name="F:Standard.SFGAO.ISSLOW">
            <summary>'Slow' object</summary>
        </member>
        <member name="F:Standard.SFGAO.GHOSTED">
            <summary>Ghosted icon</summary>
        </member>
        <member name="F:Standard.SFGAO.LINK">
            <summary>Shortcut (link)</summary>
        </member>
        <member name="F:Standard.SFGAO.SHARE">
            <summary>Shared</summary>
        </member>
        <member name="F:Standard.SFGAO.READONLY">
            <summary>Read-only</summary>
        </member>
        <member name="F:Standard.SFGAO.HIDDEN">
            <summary> Hidden object</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSANCESTOR">
            <summary> May contain children with SFGAO_FILESYSTEM</summary>
        </member>
        <member name="F:Standard.SFGAO.FOLDER">
            <summary>Support BindToObject(IID_IShellFolder)</summary>
        </member>
        <member name="F:Standard.SFGAO.FILESYSTEM">
            <summary>Is a win32 file system object (file/folder/root)</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSUBFOLDER">
            <summary>May contain children with SFGAO_FOLDER (may be slow)</summary>
        </member>
        <member name="F:Standard.SFGAO.VALIDATE">
            <summary>Invalidate cached information (may be slow)</summary>
        </member>
        <member name="F:Standard.SFGAO.REMOVABLE">
            <summary>Is this removeable media?</summary>
        </member>
        <member name="F:Standard.SFGAO.COMPRESSED">
            <summary> Object is compressed (use alt color)</summary>
        </member>
        <member name="F:Standard.SFGAO.BROWSABLE">
            <summary>Supports IShellFolder, but only implements CreateViewObject() (non-folder view)</summary>
        </member>
        <member name="F:Standard.SFGAO.NONENUMERATED">
            <summary>Is a non-enumerated object (should be hidden)</summary>
        </member>
        <member name="F:Standard.SFGAO.NEWCONTENT">
            <summary>Should show bold in explorer tree</summary>
        </member>
        <member name="F:Standard.SFGAO.CANMONIKER">
            <summary>Obsolete</summary>
        </member>
        <member name="F:Standard.SFGAO.HASSTORAGE">
            <summary>Obsolete</summary>
        </member>
        <member name="F:Standard.SFGAO.STREAM">
            <summary>Supports BindToObject(IID_IStream)</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGEANCESTOR">
            <summary>May contain children with SFGAO_STORAGE or SFGAO_STREAM</summary>
        </member>
        <member name="F:Standard.SFGAO.STORAGECAPMASK">
            <summary>For determining storage capabilities, ie for open/save semantics</summary>
        </member>
        <member name="F:Standard.SFGAO.PKEYSFGAOMASK">
            <summary>
            Attributes that are masked out for PKEY_SFGAOFlags because they are considered
            to cause slow calculations or lack context
            (SFGAO_VALIDATE | SFGAO_ISSLOW | SFGAO_HASSUBFOLDER and others)
            </summary>
        </member>
        <member name="T:Standard.SHCONTF">
            <summary>
            IShellFolder::EnumObjects grfFlags bits.  Also called SHCONT
            </summary>
        </member>
        <member name="T:Standard.SHGDN">
            <summary>
            IShellFolder::GetDisplayNameOf/SetNameOf uFlags.  Also called SHGDNF.
            </summary>
            <remarks>
            For compatibility with SIGDN, these bits must all sit in the LOW word.
            </remarks>
        </member>
        <member name="T:Standard.SICHINT">
            <summary>
            SHELLITEMCOMPAREHINTF.  SICHINT_*.
            </summary>
        </member>
        <member name="F:Standard.SICHINT.DISPLAY">
            <summary>iOrder based on display in a folder view</summary>
        </member>
        <member name="F:Standard.SICHINT.ALLFIELDS">
            <summary>exact instance compare</summary>
        </member>
        <member name="F:Standard.SICHINT.CANONICAL">
            <summary>iOrder based on canonical name (better performance)</summary>
        </member>
        <member name="T:Standard.SIGDN">
            <summary>
            ShellItem enum.  SIGDN_*.
            </summary>
        </member>
        <member name="T:Standard.STR_GPS">
             <summary>
             STR_GPS_*
             </summary>
             <remarks>
             When requesting a property store through IShellFolder, you can specify the equivalent of
             GPS_DEFAULT by passing in a null IBindCtx parameter.
            
             You can specify the equivalent of GPS_READWRITE by passing a mode of STGM_READWRITE | STGM_EXCLUSIVE
             in the bind context
            
             Here are the string versions of GPS_ flags, passed to IShellFolder::BindToObject() via IBindCtx::RegisterObjectParam()
             These flags are valid when requesting an IPropertySetStorage or IPropertyStore handler
            
             The meaning of these flags are described above.
            
             There is no STR_ equivalent for GPS_TEMPORARY because temporary property stores
             are provided by IShellItem2 only -- not by the underlying IShellFolder.
             </remarks>
        </member>
        <member name="F:Standard.THUMBBUTTON.THBN_CLICKED">
            <summary>
            WPARAM value for a THUMBBUTTON being clicked.
            </summary>
        </member>
        <member name="F:Standard.PKEY._fmtid">
            <summary>fmtid</summary>
        </member>
        <member name="F:Standard.PKEY._pid">
            <summary>pid</summary>
        </member>
        <member name="F:Standard.PKEY.Title">
            <summary>PKEY_Title</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_ID">
            <summary>PKEY_AppUserModel_ID</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_IsDestListSeparator">
            <summary>PKEY_AppUserModel_IsDestListSeparator</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchCommand">
            <summary>PKEY_AppUserModel_RelaunchCommand</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchDisplayNameResource">
            <summary>PKEY_AppUserModel_RelaunchDisplayNameResource</summary>
        </member>
        <member name="F:Standard.PKEY.AppUserModel_RelaunchIconResource">
            <summary>PKEY_AppUserModel_RelaunchIconResource</summary>
        </member>
        <member name="T:Standard.IObjectArray">
            <summary>Unknown Object Array</summary>
        </member>
        <member name="T:Standard.IShellItem">
            <summary>
            Shell Namespace helper
            </summary>
        </member>
        <member name="T:Standard.IShellItem2">
            <summary>
            Shell Namespace helper 2
            </summary>
        </member>
        <member name="M:Standard.ITaskbarList.HrInit">
            <summary>
            This function must be called first to validate use of other members.
            </summary>
        </member>
        <member name="M:Standard.ITaskbarList.AddTab(System.IntPtr)">
            <summary>
            This function adds a tab for hwnd to the taskbar.
            </summary>
            <param name="hwnd">The HWND for which to add the tab.</param>
        </member>
        <member name="M:Standard.ITaskbarList.DeleteTab(System.IntPtr)">
            <summary>
            This function deletes a tab for hwnd from the taskbar.
            </summary>
            <param name="hwnd">The HWND for which the tab is to be deleted.</param>
        </member>
        <member name="M:Standard.ITaskbarList.ActivateTab(System.IntPtr)">
            <summary>
            This function activates the tab associated with hwnd on the taskbar.
            </summary>
            <param name="hwnd">The HWND for which the tab is to be actuvated.</param>
        </member>
        <member name="M:Standard.ITaskbarList.SetActiveAlt(System.IntPtr)">
            <summary>
            This function marks hwnd in the taskbar as the active tab.
            </summary>
            <param name="hwnd">The HWND to activate.</param>
        </member>
        <member name="M:Standard.ITaskbarList2.MarkFullscreenWindow(System.IntPtr,System.Boolean)">
            <summary>
            Marks a window as full-screen.
            </summary>
            <param name="hwnd">The handle of the window to be marked.</param>
            <param name="fFullscreen">A Boolean value marking the desired full-screen status of the window.</param>
            <remarks>
            Setting the value of fFullscreen to true, the Shell treats this window as a full-screen window, and the taskbar
            is moved to the bottom of the z-order when this window is active.  Setting the value of fFullscreen to false
            removes the full-screen marking, but <i>does not</i> cause the Shell to treat the window as though it were
            definitely not full-screen.  With a false fFullscreen value, the Shell depends on its automatic detection facility
            to specify how the window should be treated, possibly still flagging the window as full-screen.
            </remarks>
        </member>
        <member name="T:Standard.IApplicationDocumentLists">
            <summary>
            Allows an application to retrieve the most recent and frequent documents opened in that app, as reported via SHAddToRecentDocs
            </summary>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.SetAppID(System.String)">
            <summary>
            Set the App User Model ID for the application retrieving this list.  If an AppID is not provided via this method,
            the system will use a heuristically determined ID.  This method must be called before GetList. 
            </summary>
            <param name="pszAppID">App Id.</param>
        </member>
        <member name="M:Standard.IApplicationDocumentLists.GetList(Standard.APPDOCLISTTYPE,System.UInt32,System.Guid@)">
            <summary>
            Retrieve an IEnumObjects or IObjectArray for IShellItems and/or IShellLinks. 
            Items may appear in both the frequent and recent lists.  
            </summary>
            <returns></returns>
        </member>
        <member name="T:Standard.IObjectWithAppUserModelId">
            <summary>
            Provides access to the App User Model ID on objects supporting this value.
            </summary>
        </member>
        <member name="T:Standard.IObjectWithProgId">
            <summary>
            Provides access to the ProgID associated with an object 
            </summary>
        </member>
        <member name="T:Standard.ComStream">
            <summary>
            Wraps an IStream interface pointer from COM into a form consumable by .Net.
            </summary>
            <remarks>
            This implementation is immutable, though it's possible that the underlying
            stream can be changed in another context.
            </remarks>
        </member>
        <member name="M:Standard.ComStream.#ctor(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Wraps a native IStream interface into a CLR Stream subclass.
            </summary>
            <param name="stream">
            The stream that this object wraps.
            </param>
            <remarks>
            Note that the parameter is passed by ref.  On successful creation it is
            zeroed out to the caller.  This object becomes responsible for the lifetime
            management of the wrapped IStream.
            </remarks>
        </member>
        <member name="T:Standard.ManagedIStream">
            <summary>
            Wraps a managed stream instance into an interface pointer consumable by COM.
            </summary>
        </member>
        <member name="M:Standard.ManagedIStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ManagedIStream class with the specified managed Stream object.
            </summary>
            <param name="source">
            The stream that this IStream reference is wrapping.
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Creates a new stream object with its own seek pointer that
            references the same bytes as the original stream. 
            </summary>
            <param name="ppstm">
            When this method returns, contains the new stream object. This parameter is passed uninitialized.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Clone in the MSDN library.
            This class doesn't implement Clone.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Commit(System.Int32)">
            <summary>
            Ensures that any changes made to a stream object that is open in transacted
            mode are reflected in the parent storage. 
            </summary>
            <param name="grfCommitFlags">
            A value that controls how the changes for the stream object are committed. 
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Commit in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            Copies a specified number of bytes from the current seek pointer in the
            stream to the current seek pointer in another stream. 
            </summary>
            <param name="pstm">
            A reference to the destination stream. 
            </param>
            <param name="cb">
            The number of bytes to copy from the source stream. 
            </param>
            <param name="pcbRead">
            On successful return, contains the actual number of bytes read from the source.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
            <param name="pcbWritten">
            On successful return, contains the actual number of bytes written to the destination.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Restricts access to a specified range of bytes in the stream. 
            </summary>
            <param name="libOffset">
            The byte offset for the beginning of the range. 
            </param>
            <param name="cb">
            The length of the range, in bytes, to restrict.
            </param>
            <param name="dwLockType">
            The requested restrictions on accessing the range.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::LockRegion in the MSDN library.
            This class doesn't implement LockRegion.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a specified number of bytes from the stream object into memory starting at the current seek pointer. 
            </summary>
            <param name="pv">
            When this method returns, contains the data read from the stream. This parameter is passed uninitialized.
            </param>
            <param name="cb">
            The number of bytes to read from the stream object. 
            </param>
            <param name="pcbRead">
            A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.
            </param>
            <remarks>
            For more information, see the existing documentation for ISequentialStream::Read in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Revert">
            <summary>
            Discards all changes that have been made to a transacted stream since the last Commit call.
            </summary>
            <remarks>
            This class doesn't implement Revert.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Changes the seek pointer to a new location relative to the beginning of the
            stream, to the end of the stream, or to the current seek pointer.
            </summary>
            <param name="dlibMove">
            The displacement to add to dwOrigin.
            </param>
            <param name="dwOrigin">
            The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file. 
            </param>
            <param name="plibNewPosition">
            On successful return, contains the offset of the seek pointer from the beginning of the stream.
            (Note the native signature is to a ULARGE_INTEGER*, so 64 bits are written
            to this parameter on success.)
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::Seek in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.SetSize(System.Int64)">
            <summary>
            Changes the size of the stream object. 
            </summary>
            <param name="libNewSize">
            The new size of the stream as a number of bytes. 
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::SetSize in the MSDN library.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Retrieves the STATSTG structure for this stream. 
            </summary>
            <param name="pstatstg">
            When this method returns, contains a STATSTG structure that describes this stream object.
            This parameter is passed uninitialized.
            </param>
            <param name="grfStatFlag">
            Members in the STATSTG structure that this method does not return, thus saving some memory allocation operations. 
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Removes the access restriction on a range of bytes previously restricted with the LockRegion method.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.
            </param>
            <param name="cb">
            The length, in bytes, of the range to restrict.
            </param>
            <param name="dwLockType">
            The access restrictions previously placed on the range.
            </param>
            <remarks>
            For more information, see the existing documentation for IStream::UnlockRegion in the MSDN library.
            This class doesn't implement UnlockRegion.  A COMException is thrown if it is used.
            </remarks>
        </member>
        <member name="M:Standard.ManagedIStream.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a specified number of bytes into the stream object starting at the current seek pointer.
            </summary>
            <param name="pv">
            The buffer to write this stream to.
            </param>
            <param name="cb">
            The number of bytes to write to the stream. 
            </param>
            <param name="pcbWritten">
            On successful return, contains the actual number of bytes written to the stream object. 
            If the caller sets this pointer to null, this method does not provide the actual number
            of bytes written.
            </param>
        </member>
        <member name="M:Standard.ManagedIStream.Dispose">
            <summary>
            Releases resources controlled by this object.
            </summary>
            <remarks>
            Dispose can be called multiple times, but trying to use the object
            after it has been disposed will generally throw ObjectDisposedExceptions.
            </remarks>
        </member>
        <member name="M:Standard.Utility.SafeCopyFile(System.String,System.String,Standard.SafeCopyFileOptions)">
            <summary>
            Wrapper around File.Copy to provide feedback as to whether the file wasn't copied because it didn't exist.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.SafeDeleteFile(System.String)">
            <summary>
            Simple guard against the exceptions that File.Delete throws on null and empty strings.
            </summary>
            <param name="path">The path to delete.  Unlike File.Delete, this can be null or empty.</param>
            <remarks>
            Note that File.Delete, and by extension SafeDeleteFile, does not throw an exception
            if the file does not exist.
            </remarks>
        </member>
        <member name="M:Standard.Utility.GeneratePropertyString(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Utility to help classes catenate their properties for implementing ToString().
            </summary>
            <param name="source">The StringBuilder to catenate the results into.</param>
            <param name="propertyName">The name of the property to be catenated.</param>
            <param name="value">The value of the property to be catenated.</param>
        </member>
        <member name="M:Standard.Utility.GenerateToString``1(``0)">
            <summary>
            Generates ToString functionality for a struct.  This is an expensive way to do it,
            it exists for the sake of debugging while classes are in flux.
            Eventually this should just be removed and the classes should
            do this without reflection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Standard.Utility.UrlEncode(System.String)">
            <summary>
            Encodes a URL string.  Duplicated functionality from System.Web.HttpUtility.UrlEncode.
            </summary>
            <param name="url"></param>
            <returns></returns>
            <remarks>
            Duplicated from System.Web.HttpUtility because System.Web isn't part of the client profile.
            URL Encoding replaces ' ' with '+' and unsafe ASCII characters with '%XX'.
            Safe characters are defined in RFC2396 (http://www.ietf.org/rfc/rfc2396.txt).
            They are the 7-bit ASCII alphanumerics and the mark characters "-_.!~*'()".
            This implementation does not treat '~' as a safe character to be consistent with the System.Web version.
            </remarks>
        </member>
        <member name="M:Standard.Utility.SafeDeleteObject(System.IntPtr@)">
            <summary>GDI's DeleteObject</summary>
        </member>
        <member name="M:Standard.Utility.SafeDisposeImage(System.IntPtr@)">
            <summary>GDI+'s DisposeImage</summary>
            <param name="gdipImage"></param>
        </member>
        <member name="M:Standard.Utility._GetBestMatch(System.Collections.Generic.IList{System.Windows.Media.Imaging.BitmapFrame},System.Int32,System.Int32,System.Int32)">
            From a list of BitmapFrames find the one that best matches the requested dimensions.
            The methods used here are copied from Win32 sources.  We want to be consistent with
            system behaviors.
        </member>
        <member name="M:Standard.Utility.ColorFromArgbDword(System.UInt32)">
            <summary>Convert a native integer that represent a color with an alpha channel into a Color struct.</summary>
            <param name="color">The integer that represents the color.  Its bits are of the format 0xAARRGGBB.</param>
            <returns>A Color representation of the parameter.</returns>
        </member>
        <member name="T:Standard.Verify">
            <summary>
            A static class for retail validated assertions.
            Instead of breaking into the debugger an exception is thrown.
            </summary>
        </member>
        <member name="M:Standard.Verify.IsApartmentState(System.Threading.ApartmentState,System.String)">
            <summary>
            Ensure that the current thread's apartment state is what's expected.
            </summary>
            <param name="requiredState">
            The required apartment state for the current thread.
            </param>
            <param name="message">
            The message string for the exception to be thrown if the state is invalid.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the calling thread's apartment state is not the same as the requiredState.
            </exception>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorEmpty(System.String,System.String)">
            <summary>
            Ensure that an argument is neither null nor empty.
            </summary>
            <param name="value">The string to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNeitherNullNorWhitespace(System.String,System.String)">
            <summary>
            Ensure that an argument is neither null nor does it consist only of whitespace.
            </summary>
            <param name="value">The string to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNotDefault``1(``0,System.String)">
            <summary>Verifies that an argument is not null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNotNull``1(``0,System.String)">
            <summary>Verifies that an argument is not null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsNull``1(``0,System.String)">
            <summary>Verifies that an argument is null.</summary>
            <typeparam name="T">Type of the object to validate.  Must be a class.</typeparam>
            <param name="obj">The object to validate.</param>
            <param name="name">The name of the parameter that will be presented if an exception is thrown.</param>
        </member>
        <member name="M:Standard.Verify.IsTrue(System.Boolean,System.String,System.String)">
            <summary>
            Verifies the specified statement is true.  Throws an ArgumentException if it's not.
            </summary>
            <param name="statement">The statement to be verified as true.</param>
            <param name="name">Name of the parameter to include in the ArgumentException.</param>
            <param name="message">The message to include in the ArgumentException.</param>
        </member>
        <member name="M:Standard.Verify.BoundedInteger(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Verifies that the specified value is within the expected range.  The assertion fails if it isn't.
            </summary>
            <param name="lowerBoundInclusive">The lower bound inclusive value.</param>
            <param name="value">The value to verify.</param>
            <param name="upperBoundExclusive">The upper bound exclusive value.</param>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
            <summary>Display the system menu at a specified location.</summary>
            <param name="window">The MetroWindow</param>
            <param name="screenLocation">The location to display the system menu, in logical screen coordinates.</param>
        </member>
        <member name="M:Microsoft.Windows.Shell.SystemParameters2.#ctor">
            <summary>
            Private constructor.  The public way to access this class is through the static Current property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.CaptionHeight">
            <summary>The extent of the top of the window to treat as the caption.</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximizeProperty">
            <summary>Dependency property for IgnoreTaskbarOnMaximize</summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChrome.IgnoreTaskbarOnMaximize">
            <summary>
            If this property is true and the attached window's WindowStyle=None then when the window is maximized it will cover the entire
            monitor, including the taskbar.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker.IsPresentationFrameworkVersionLessThan4">
            <summary>
            Is this using WPF4?
            </summary>
            <remarks>
            There are a few specific bugs in Window in 3.5SP1 and below that require workarounds
            when handling WM_NCCALCSIZE on the HWND.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._window">
            <summary>The Window that's chrome is being modified.</summary>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._hwnd">
            <summary>Underlying HWND for the _window.</summary>
            <SecurityNote>
              Critical : Critical member
            </SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._hwndSource">
            <summary>Underlying HWND for the _window.</summary>
            <SecurityNote>
              Critical : Critical member provides access to HWND's window messages which are critical
            </SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._chromeInfo">
            <summary>Object that describes the current modifications being made to the chrome.</summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.#ctor">
            <SecurityNote>
              Critical : Store critical methods in critical callback table
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.SetWindowChrome(Microsoft.Windows.Shell.WindowChrome)">
            <SecurityNote>
              Critical : Calls critical methods
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnChromePropertyChangedThatRequiresRepaint(System.Object,System.EventArgs)">
            <SecurityNote>
              Critical : Calls critical methods
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnChromeWorkerChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <SecurityNote>
              Critical : Calls critical methods
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._SetWindow(System.Windows.Window)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._WindowSourceInitialized(System.Object,System.EventArgs)">
            <SecurityNote>
              Critical : Store critical methods in critical callback table
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.UnsubscribeWindowEvents">
            <SecurityNote>
              Critical : References critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UnsetWindow(System.Object,System.EventArgs)">
            <SecurityNote>
              Critical : Store critical methods in critical callback table
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._OnWindowPropertyChangedThatRequiresTemplateFixup(System.Object,System.EventArgs)">
            <SecurityNote>
              Critical : Accesses critical _hwnd field
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ApplyNewCustomChrome">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._FixupTemplateIssues">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._FixupRestoreBounds(System.Object,System.EventArgs)">
            <SecurityNote>
              Critical : Store critical methods in critical callback table
              Safe     : Demands full trust permissions
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetAdjustedWindowRect(Standard.RECT)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker._IsWindowDocked">
            <SecurityNote>
              Critical : Calls critical method
            </SecurityNote>
        </member>
        <member name="P:Microsoft.Windows.Shell.WindowChromeWorker._MinimizeAnimation">
            A borderless window lost his animation, with this we bring it back.
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Accesses critical _hwnd
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCUAHDrawCaption(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleRestoreWindow(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCActivate(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker.AdjustWorkingAreaForAutoHide(System.IntPtr,Standard.RECT)">
            <summary>
            This method handles the window size if the taskbar is set to auto-hide.
            </summary>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCCalcSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical Marshal.PtrToStructure
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCHitTest(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleNCRButtonUp(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical method
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical method
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleWindowPosChanging(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical Marshal.PtrToStructure
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleWindowPosChanged(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical Marshal.PtrToStructure
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleGetMinMaxInfo(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleDwmCompositionChanged(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleSettingChange(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleEnterSizeMove(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleEnterSizeMoveForAnimation(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleMoveForRealSize(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._HandleExitSizeMoveForAnimation(Standard.WM,System.IntPtr,System.IntPtr,System.Boolean@)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ModifyStyle(Standard.WS,Standard.WS)">
            <summary>Add and remove a native WindowStyle from the HWND.</summary>
            <param name="removeStyle">The styles to be removed.  These can be bitwise combined.</param>
            <param name="addStyle">The styles to be added.  These can be bitwise combined.</param>
            <returns>Whether the styles of the HWND were modified as a result of this call.</returns>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetHwndState">
            <summary>
            Get the WindowState as the native HWND knows it to be.  This isn't necessarily the same as what Window thinks.
            </summary>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetWindowRect">
            <summary>
            Get the bounding rectangle for the window in physical coordinates.
            </summary>
            <returns>The bounding rectangle for the window.</returns>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UpdateSystemMenu(System.Nullable{System.Windows.WindowState})">
            <summary>
            Update the items in the system menu based on the current, or assumed, WindowState.
            </summary>
            <param name="assumeState">
            The state to assume that the Window is in.  This can be null to query the Window's state.
            </param>
            <remarks>
            We want to update the menu while we have some control over whether the caption will be repainted.
            </remarks>
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UpdateFrameState(System.Boolean)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ClearRoundingRegion">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._GetClientRectRelativeToWindowRect(System.IntPtr)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._SetRoundingRegion(System.Nullable{Standard.WINDOWPOS})">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._CreateRoundRectRgn(System.Windows.Rect,System.Double)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._CreateAndCombineRoundRectRgn(System.IntPtr,System.Windows.Rect,System.Double)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._ExtendGlassFrame">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="F:Microsoft.Windows.Shell.WindowChromeWorker._HitTestBorders">
            <summary>
            Matrix of the HT values to return when responding to NC window messages.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreStandardChromeState(System.Boolean)">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._UnhookCustomChrome">
            <SecurityNote>
              Critical : Unsubscribes event handler from critical _hwndSource
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreFrameworkIssueFixups">
            <SecurityNote>
              Critical : Unsubscribes critical event handler
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreGlassFrame">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Windows.Shell.WindowChromeWorker._RestoreHrgn">
            <SecurityNote>
              Critical : Calls critical methods
            </SecurityNote>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
