#include "mpi.h"
#include <stdio.h>
void main(argc,argv)
int argc;
char *argv[];
{     int myid, numprocs,buf[1];
      int  namelen;
      MPI_Status status;
      char processor_name[MPI_MAX_PROCESSOR_NAME];
      MPI_Init(&argc,&argv);
      MPI_Comm_rank(MPI_COMM_WORLD,&myid);
      MPI_Comm_size(MPI_COMM_WORLD,&numprocs);
      MPI_Get_processor_name(processor_name,&namelen);
      buf[0]=0;   
      if(myid==0){ 
         fprintf(stderr,"Hello World! Process %d of %d on %s\n",myid, numprocs, processor_name);
         MPI_Send£¨buf,1,MPI_INT,1,0,MPI_COMM_WORLD£©;
      }
      else if(myid<(numprocs-1)){
         MPI_Recv(buf,1.MPI_INT,myid-1,0,MPI_COMM_WORLD,&status);
         fprintf(stderr,"Hello World! Process %d of %d on %s\n",myid, numprocs, processor_name);
         MPI_Send£¨buf,1,MPI_INT,myid+1,0,MPI_COMM_WORLD£©;
      }
      else if(myid==(numprocs-1)){
         MPI_Recv(buf,1,MPI_INT,myid-1,0,MPI_COMM_WORLD,&status);
         fprintf(stderr,"Hello World! Process %d of %d on %s\n",myid, numprocs, processor_name);
      }
      MPI_Finalize();
}
